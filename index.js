//ÔΩ°‚òÜ‚úº‚òÖ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅATEN√á√ÉO‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚òÖ‚úº‚òÜÔΩ°
//.        SANDRO BOT DOMINA BB
//ÔΩ°‚òÜ‚úº‚òÖ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅATEN√á√ÉO‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚òÖ‚úº‚òÜÔΩ°

//Cr√©ditos Por ajudar
//YURI MODZ
require("./dono.js")

const { 
default:
makeWASocket, 
downloadContentFromMessage,
generateWAMessageContent,
generateWAMessageFromContent,
makeCacheableSignalKeyStore,
StylePrivWaFromMessage,
delay,
useMultiFileAuthState,
BufferJSON,
proto,
close,
prepareWAMessageMedia, 
MediaType,
MessageType,
ChatModification,
DisconnectReason,
relayWAMessage,
fetchLatestBaileysVersion,
WASocket,
Browsers,
EyeWaSocket,
makeInMemoryStore,
} = require('@WhiskeySockets/baileys');

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§MODULOS‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ //

const webp_mp4 = require("./arquivos/lib/webp_mp4.js");

const { getRandom} = require('./arquivos/fun√ß√µes/myfunc.js');

const { exec } = require("child_process")

const totalcmd = "787"

const chalk = require('chalk');

const { runtime } = require("./arquivos/myfunc")

const color = (text, color) => { return !color ? chalk.green(text) : chalk.keyword(color)(text) };

let pino = require('pino')

const { init, askAI } = require('bard-ai');

const fs = require('fs')

const PhoneNumber = require('awesome-phonenumber')

const cfonts = require('cfonts')

const axios = require('axios');

const infoSystem = require('os')

const NodeCache = require('node-cache')

const readline = require('readline')

const util = require("util")

const path = require("path")

const fetch = require('node-fetch');

const speed = require('performance-now')

const moment = require('moment-timezone');

const ffmpeg = require('fluent-ffmpeg');

const mimetype = require("mime-types")

const BodyForm = require("form-data")

const { Boom }  = require('@hapi/boom');

const crypto = require('crypto');

const encodeUrl = require('encodeurl');

const cheerio = require('cheerio');

const { getBuffer, getGroupAdmins,} = require('./datab/myfunc')

const { Configuration, OpenAIApi } = require("openai");

const { menu } = require('./menus/menu.js')

const { logos } = require('./menus/logos.js')

const { criado } = require('./menus/criador.js')

const { menuvip } = require('./menus/menuvip.js')

const { menutravazap } = require('./menus/menutravazap.js')

const { menu1 } = require('./menus/menu1.js')

const { alugar } = require('./menus/alugar.js')

const { emoji2 } = require ('./settings.json')

const { menudono } = require('./menus/menudono.js')

const { menujogos } = require('./menus/menujogos.js')

const antilink = JSON.parse(fs.readFileSync('./loli/seguranca/antilink.json'))

const samih = JSON.parse(fs.readFileSync('./arquivos/usuarios/simi.json'));

const samih2 = JSON.parse(fs.readFileSync('./arquivos/fun√ß√µes/simi.json'));

const antilinkgp = JSON.parse(fs.readFileSync('./arquivos/antis/antilinkgp.json'))

const premium = JSON.parse(fs.readFileSync('./Premiums/usuarios/premium.json'));

const antiporn = JSON.parse(fs.readFileSync('./arquivos/antis/antiporn.json'))

const antidoc = JSON.parse(fs.readFileSync('./arquivos/antis/antidoc.json'))

const { conselhob } = require('./arquivos/fun√ß√µes/conselhob.js');

const antictt = JSON.parse(fs.readFileSync('./arquivos/antis/antictt.json'))

const casa = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/casa/casa.json'));

const modobn = JSON.parse(fs.readFileSync('./arquivos/grupos/brincadeiras.json'));

const antiflood = JSON.parse(fs.readFileSync('./arquivos/usuarios/antiflood.json'));

const limitefll = JSON.parse(fs.readFileSync('./arquivos/usuarios/flood.json'));

const registros = JSON.parse(fs.readFileSync('./arquivos/registro/registros.json'));

const antiloc = JSON.parse(fs.readFileSync('./arquivos/antis/antiloc.json'))

const antifake = JSON.parse(fs.readFileSync('./arquivos/antis/antifake.json'))

const carab = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/carab/carab.json'));

const nescessario = JSON.parse(fs.readFileSync('./arquivos/nescessario.json'));

const antiaudio = JSON.parse(fs.readFileSync('./arquivos/antis/antiaudio.json'))

const caussa = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/caussa/caussa.json'));

const anotar = JSON.parse(fs.readFileSync('./database/func/tabela/anotar.json'));

const tagrico = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/tagrico/tagrico.json'));

const sapato = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/sapato/sapato.json'));

const palitor = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/palitor/palitor.json'));

const antisticker = JSON.parse(fs.readFileSync('./arquivos/antis/antisticker.json'))

const countMessage = JSON.parse(fs.readFileSync('./arquivos/grupos/countmsg.json'));

const antinotas = JSON.parse(fs.readFileSync('./arquivos/antis/antinotas.json'))

const antipv = JSON.parse(fs.readFileSync('./arquivos/usuarios/antipv.json'))

const adeuscara = JSON.parse(fs.readFileSync('./arquivos/grupos/adeuscara.json'));

const espada = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/espada/espada.json'));

const anticatalogo = JSON.parse(fs.readFileSync('./arquivos/antis/anticatalogo.json'))

const autoreact = JSON.parse(fs.readFileSync('./arquivos/fun√ß√µes/autoreact.json'))

const muted = JSON.parse(fs.readFileSync('./database/usuarios/muted.json'))

const antivid = JSON.parse(fs.readFileSync('./arquivos/antis/antivideo.json'))

const aguacoco = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/agua/aguacoco.json'));

const roupab = JSON.parse(fs.readFileSync('./fun√ß√µes_rpg/roupa/roupab.json'));

const dindin = JSON.parse(fs.readFileSync("./fun√ß√µes_rpg/dinheiro/dindin.json"));

const antiimg = JSON.parse(fs.readFileSync('./arquivos/antis/antiimg.json'))

const { menu18 } = require("./menus/menu18.js")

const { tabela } = require('./arquivos/grupos/tabela');


var { verificado } = require("./settings/nescessario.json")


//COLOCA OS JSON AKI

const API_KEY_SHADOW = "apikey-do-flexa"
const API_KEY_SABRINA = "api-do_flexa"
const API_KEY_DANIEL = "daniel-api3";

//ARQUIVOS JS
const { banner } = require('./loli/browser/browser.js');
const { 
getExtension, Random, 
getFileBuffer,
} = require("./loli/browser/get.js")
const { fetchJson } = require('./arquivos/fun√ß√µes.js');
const { addFlod , isFlod } = require('./spam.js')
const { isFiltered, addFilter } = require('./spam.js')
const { palavras } = require('./arquivos/lib/conselhos.js');

//ARQUIVOS PARA SUAS CARACTERES TRAVAZAP CASO VOC√ä N√ÉO FOR TRAVAZAP IGNOREüòÜ
const { carrinho } = require('./loli/travas/carrinho')
const { ctt } = require('./loli/travas/ctt')
const { txt } = require('./loli/travas/txt')
const { ios } = require('./loli/travas/ios')
const { ui } = require('./loli/travas/ui')
//ARQUIVOS DA CONFIG PREFIX DONO E NOME BOT CASO N√ÉO SAIBA MEXE N√ÉO MEXA NISSO DEIXA ASSIM OU VAI CAUSAR ERRO
donoName = global.donoName
botName = global.botName
donoNumber = global.donoNumber
prefix = global.prefix
// IGNORE //
function kyun(seconds){
function pad(s){ return (s < 10 ? '0' : '') + s;}
var hours = Math.floor(seconds / (60*60));
var minutes = Math.floor(seconds % (60*60) / 60);
var seconds = Math.floor(seconds % 60);return `${pad(hours)} Horas ${pad(minutes)} Minutos ${pad(seconds)} Segundos` }
const convertBytes = function(bytes) {
const sizes = ["Bytes", "KB", "MB", "GB", "TB"]
if (bytes == 0) {
return "n/a"
}
const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))
if (i == 0) {
return bytes + " " + sizes[i]
}
return (bytes / Math.pow(1024, i)).toFixed(1) + " " + sizes[i]
}

//// DATA E HORA PIKEMON

data = moment.tz("America/Sao_Paulo").format("DD/MM/YY");

hora = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

const msgRetryCounterCache = new NodeCache();


async function ligarbot() {
let phoneNumber = "553172595934"
const store = makeInMemoryStore({ logger: pino().child({ level: 'debug', stream: 'store' }) })
const pairingCode = !!phoneNumber || process.argv.includes("--pairing-code")
const useMobile = process.argv.includes("--mobile")


const rl = readline.createInterface({ input: process.stdin, output: process.stdout })
const question = (text) => new Promise((resolve) => rl.question(text, resolve))


//// DATA E HORA PIKEMON

data = moment.tz("America/Sao_Paulo").format("DD/MM/YY");

hora = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

const time = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

const { state, saveCreds } = await useMultiFileAuthState('./datab/qr-code')
const { version, isLatest} = await fetchLatestBaileysVersion();

const loli = makeWASocket({
  logger: pino({ level: 'silent' }),
        printQRInTerminal: !pairingCode,
      mobile: useMobile,
      browser: ['Chrome (Linux)'],
     auth: {
         creds: state.creds,
         keys: makeCacheableSignalKeyStore(state.keys, pino({ level: "fatal" }).child({ level: "fatal" })),
      },
      browser: ['Chrome (Linux)', '', ''],
      markOnlineOnConnect: true,
      generateHighQualityLinkPreview: true,
      getMessage: async (key) => {
         let jid = jidNormalizedUser(key.remoteJid)
         let msg = await store.loadMessage(jid, key.id)

         return msg?.message || ""
      },
      msgRetryCounterCache,
      defaultQueryTimeoutMs: undefined,
   })
//==========================================\\

if (pairingCode && !loli.authState.creds.registered) {
console.log(`${chalk.redBright("Coloque o n√∫mero de whatsapp. Exemplo: +553172595934")}:`);
let phoneNumber = await question(`   ${chalk.cyan("- N√∫mero")}: `);
phoneNumber = phoneNumber.replace(/[^0-9]/g, "");

let code = await loli.requestPairingCode(phoneNumber);
code = code?.match(/.{1,4}/g)?.join("-") || code;
console.log(` ü•∂ ${chalk.redBright("Seu c√≥digo")}:`);
console.log(`   ${chalk.cyan("- C√≥digo")}: ${code}`);
rl.close();
}

const banner = cfonts.render(("SANDRO|MD"), {
font: "block",
align: "center",
colors: [`cyan`,`white`,`cyan`],
})

loli.ev.on('creds.update', saveCreds);
store.bind(loli.ev)
loli.ev.on("chats.set", () => {
console.log("Tem conversas", store.chats.all())
})
loli.ev.on("contacts.set", () => {
console.log("Tem contatos", Object.values(store.contacts))
})
loli.ev.on("connection.update", (update) => {
const { connection, lastDisconnect } = update
if(connection === "close") {
const shouldReconnect = (lastDisconnect.error)?.output?.statusCode !== DisconnectReason.loggedOut
console.log("Conex√£o fechada devido a", lastDisconnect.error, "Tentando reconectar...", shouldReconnect);
if(shouldReconnect) {
startBase()
}
} else if(connection === "open") {
console.log(banner.string)
console.log(`${color(`${botName} Conectado com sucesso ‚úì `,'cyan')}`)
}
})

loli.ev.on('contacts.set', () => {
console.log('setando contatos...')
})

loli.ev.on('creds.update', saveCreds)

loli.ev.on('messages.upsert', async ({ messages }) => {
try {
//=============fun√ß√µes
const info = m = messages[0]
if (!info.message) return 

const key = {
    remoteJid: info.key.remoteJid,
    id: info.key.id, 
    participant: info.key.participant 
}
await loli.readMessages([key])

if (info.key && info.key.remoteJid == 'status@broadcast') return
const altpdf = Object.keys(info.message)
const type = altpdf[0] == 'senderKeyDistributionMessage' ? altpdf[1] == 'messageContextInfo' ? altpdf[2] : altpdf[1] : altpdf[0]

type_message = JSON.stringify(info.message)

const isQuotedImage = type === "extendedTextMessage" && type_message.includes("imageMessage")
const from = m.chat = info.key.remoteJid


/// ==============budy
const budy = (type === 'conversation') ? info.message.conversation : (type === 'extendedTextMessage') ? info.message.extendedTextMessage.text : ''

var Procurar_String = info.message?.conversation || info.message?.viewOnceMessageV2?.message?.imageMessage?.caption || info.message?.viewOnceMessageV2?.message?.videoMessage?.caption || info.message?.imageMessage?.caption || info.message?.videoMessage?.caption || info.message?.extendedTextMessage?.text || info.message?.viewOnceMessage?.message?.videoMessage?.caption || info.message?.viewOnceMessage?.message?.imageMessage?.caption || info.message?.documentWithCaptionMessage?.message?.documentMessage?.caption || info.message?.buttonsMessage?.imageMessage?.caption || ""

///============body
var body = (type === 'conversation') ?
info.message.conversation : (type == 'imageMessage') ?
info.message.imageMessage.caption : (type == 'videoMessage') ?
info.message.videoMessage.caption : (type == 'extendedTextMessage') ?
info.message.extendedTextMessage.text : (type == 'buttonsResponseMessage') ?
info.message.buttonsResponseMessage.selectedButtonId : (info.message.listResponseMessage && info.message.listResponseMessage.singleSelectenviar.selectedRowId.startsWith(prefix) && info.message.listResponseMessage.singleSelectenviar.selectedRowId) ? info.message.listResponseMessage.singleSelectenviar.selectedRowId : (type == 'templateButtonenviarMessage') ?
info.message.templateButtonenviarMessage.selectedId : (type === 'messageContextInfo') ? (info.message.buttonsResponseMessage?.selectedButtonId || info.message.listResponseMessage?.singleSelectenviar.selectedRowId || info.text) : ''
////========
const content = JSON.stringify(info.message);
const isCmd = body.startsWith(prefix)

const isGroup = from.endsWith("@g.us")


// Render de Jogos
gayzin = gayz√£o
fein = fei√£o 
matei = mateii
cornin = corn√£o
vesgin = vesg√£o
bebin = beb√£o
gadin = gad√£o
gostosin = gostos√£o
gostosinha = gostosona 
hitler = nazista
tapinha = tap√£o
beijin = beij√£o
chutin = chut√£o
dancinha = dan√ßa 
casalzin = casar
soquin = soc√£o 
By = "SANDRO-BOT"

//================= Fun√ß√µes de Grupo ü•ã =============//

const dirGroup = `./arquivos/grupos/${from}.json`;

const nescj = "./dono/nescessario.json";

const data_IDGP = [{
groupId: from, x9: false, 
antiimg: false, antivideo: false,
antiaudio: false, antisticker: false,
antidoc: false, antictt: false,
antiloc: false, antilinkgp: false,
antilinkhard: false,
Odelete: false, antispam: false, 
antinotas: false, anticatalogo: false,
sistemGold: false, visuUnica: false, 
registrarFIGUS: false, soadm: false,
rg_aluguel: false,
listanegra: [], advertir: [], prefixos: ["!"],
advertir2: [], legenda_estrangeiro: "0",
legenda_documento: "0", legenda_video: "0",
legenda_imagem: "0", multiprefix: false, 
forca_ofc: [{acertos: 0, erros: 0, palavra: [], escreveu: [], palavra_ofc: 0, dica: 0, tema: 0}],
minerar_gold: [], ausentes: [], forca_inc: false, 
antipalavrao: {
active: false,
palavras: []
},
limitec: {
active: false,
quantidade: null
},
wellcome: [{
bemvindo1: false,
legendabv: "Ol√° #numerodele#, seja bem vindo (a)",
legendasaiu: 0
},
{
bemvindo2: false,
legendabv: "Ol√° #numerodele#, seja bem vindo (a)",
legendasaiu: 0
}],
simi1: false, simi2: false,
autosticker: false, autoresposta: false,
jogos: false, level: false,
bangp: false, nsfw: false
}];

if(isGroup && !fs.existsSync(dirGroup)){
fs.writeFileSync(dirGroup, JSON.stringify(data_IDGP, null, 2) + '\n');
}

try {
var dataGp = isGroup ? JSON.parse(fs.readFileSync(dirGroup)) : undefined;
} catch (e){
fs.writeFileSync(dirGroup, JSON.stringify(data_IDGP));
}

function setGp(index){
fs.writeFileSync(dirGroup, JSON.stringify(index, null, 2) + '\n')}

function setNes(index){
fs.writeFileSync(nescj, JSON.stringify(index, null, 2))}

/////=================
const isUrl = (url) => {
	return url.match(new RegExp(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/, 'gi'))
			}
const sender = isGroup ? info.key.participant: from
const command = comando = isCmd ? body.slice(1).trim().split(/ +/).shift().toLocaleLowerCase() : null
const nome = pushName = info.pushName ? info.pushName: botName 
const pushname = info.pushName ? info.pushName : ""
const groupMetadata = isGroup ? await loli.groupMetadata(from): ""
const participants = isGroup ? await groupMetadata.participants : ''
const groupName = isGroup  ? groupMetadata.subject: ""
const groupDesc = isGroup ? groupMetadata.desc : ''
const groupMembers = isGroup ? groupMetadata.participants : ''
const groupAdmins = isGroup ? getGroupAdmins(groupMembers) : ''
const args = body.trim().split(/ +/).splice(1)
const q = text = args.join(' ')
const So_Adm = isGroup ? dataGp[0].soadm: undefined
const IS_sistemGold = isGroup ? dataGp[0].sistemGold : undefined
const criador = `${donoNumber}@s.whatsapp.net`
const isWelkom = isGroup ? dataGp[0].wellcome[0].bemvindo1 : undefined
const numeroBot = loli.user.id.split(":")[0]+"@s.whatsapp.net"
const isCreator = criador.includes(sender)
const isGroupAdmins = groupAdmins.includes(sender) || false 
const isBotAdmins = groupAdmins.includes(numeroBot) || false
const isBotGroupAdmins = groupAdmins.includes(numeroBot) || false
const isPremium = premium.includes(sender)
const TOKEN_GPT = nescessario.TOKEN_GPT


    loli.sendImage = async (jid, path, caption = '', quoted = '', options) => {
	let buffer = Buffer.isBuffer(path) ? path : /^data:.*?\/.*?;base64,/i.test(path) ? Buffer.from(path.split`,`[1], 'base64') : /^https?:\/\//.test(path) ? await (await getBuffer(path)) : fs.existsSync(path) ? fs.readFileSync(path) : Buffer.alloc(0)
        return await loli.sendMessage(jid, { image: buffer, caption: caption, ...options }, { quoted })
    }
   
//********************************************//

const groupIdscount = []
const numbersIds = []
for(let obj of countMessage) {
groupIdscount.push(obj.groupId)
}
if(isGroup && groupIdscount.indexOf(from) >= 0) {
var ind = groupIdscount.indexOf(from)
for(let obj of countMessage[ind].numbers) {numbersIds.push(obj.id)}
if(numbersIds.indexOf(sender) >=0) {
var indnum = numbersIds.indexOf(sender)
countMessage[ind].numbers[indnum].messages += 1
countMessage[ind].numbers[indnum].cmd_messages += isCmd ? 1 : 0
fs.writeFileSync('./arquivos/grupos/countmsg.json', JSON.stringify(countMessage, null, 2)+ '\n')
} else {
const messages = 1
const cmd_messages = isCmd ? 1 : 0
countMessage[ind].numbers.push({
id: sender,
messages: messages,
cmd_messages: cmd_messages
})
fs.writeFileSync('./arquivos/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}
} else if(isGroup) {
countMessage.push({
groupId: from,
numbers: [{
id: sender,
messages: 2,
cmd_messages: isCmd ? 1 : 0
}]
})
fs.writeFileSync('./arquivos/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}


const { mensagens } = require('./arquivos/fun√ß√µes/aleatoria.js');

var texto_exato = (type === 'conversation') ? info.message.conversation : (type === 'extendedTextMessage') ? info.message.extendedTextMessage.text : ''

var enviarmen = mensagens[Math.floor(Math.random() * mensagens.length)] 

const texto = texto_exato.slice(0).trim().split(/ +/).shift().toLowerCase()

async function escrever (texto) {
await loli.sendPresenceUpdate('composing', from) 
await esperar(1000)   
loli.sendMessage(from, { text: texto }, {quoted: info})
}

const min = JSON.parse(fs.readFileSync('./sandroft/edite/fotos.json'))
megu = min.megumax

const reply = (texto) => {
mimi = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
 loli.sendMessage(from, {
document: fs.readFileSync('./arquivos/lib/arquivo.xlsx'),
mimetype: mimi,
jpegThumbnail: null,
mentions: null,
fileName: `${botName}`,
fileLength: 9999999999999999999999999999,
caption: texto,
footer: `Usuario:${pushname}`, 
contextInfo:{"externalAdReply": {"title": `${botName}`,"body": `Nome: ${pushname}‚Ää`, "previewType": "PHOTO","thumbnailUrl": `${megu}`,"thumbnail":  Buffer,"sourceUrl": "https://wa.me/553172595934?text=Slv%20sandro"}}}, { quoted: info})}
          
const esperar = sleep = async (tempo) => {
    return new Promise(funcao => setTimeout(funcao, tempo));
}

const checkATMuser = (sender) => {

let position = false
Object.keys(dindin).forEach((i) => {
if (dindin[i].id === sender) {
position = i
}
})
if (position !== false) {
return dindin[position].dindin
}
}

const confirmATM = (sender, amount) => {

let position = false
Object.keys(dindin).forEach((i) => {
if (dindin[i].id === sender) {
position = i
}
})
if (position !== false) {
dindin[position].dindin -= amount
fs.writeFileSync('./fun√ß√µes_rpg/dinheiro/dindin.json', JSON.stringify(dindin))
}
}


const addKoinUser = (sender, amount) => {

let position = false
Object.keys(dindin).forEach((i) => {
if (dindin[i].id === sender) {
position = i
}
})
if (position !== false) {
dindin[position].dindin += amount
fs.writeFileSync('./fun√ß√µes_rpg/dinheiro/dindin.json', JSON.stringify(dindin))
}
}

const addATM = (sender) => {

const obj = {
 id: sender,
 dindin: 0
};
dindin.push(obj)
fs.writeFileSync('./fun√ß√µes_rpg/dinheiro/dindin.json', JSON.stringify(dindin))
}

const msgSemQuoted = (content, type, options = {}) => {
   const isFullUrl = (url) => new RegExp(/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)$/, 'gi').test(url);
const mediaKeys = ['image', 'video', 'sticker', 'audio', 'document', 'history', 'md-app-state'];
options[type || 'text'] = isFullUrl(content) && mediaKeys.includes(type) ? {url: content}: content;
return loli.sendMessage(from, options, {quoted: info}).catch(e => {
reply("Erro ao enviar a mensagem..");
})
}

// PRA LIMPAR DO CONTADOR QUEM N√ÉO EST√Å NO GRUPO
async function LIMPARDOCNT_QUEMJASAIU() {
var RD_CNT = countMessage[countMessage.map(i => i.groupId).indexOf(from)].numbers
CNT1 = []; for ( i of groupMembers) {CNT1.push(i.id)} 
CNT = []; for ( i of RD_CNT) {
if(!CNT1.includes(i.id)) CNT.push(i)}
for ( i of CNT) {
RD_CNT.splice(RD_CNT.map(i => i.id).indexOf(i.id), 1)}
fs.writeFileSync("./arquivos/countmsg.json", JSON.stringify(countMessage, null, 2))
}

const reagir = async (idgp, emj) => {
var reactionMessage = {
react: {
text: emj, 
key: info.key
}
} 
loli.sendMessage(idgp, reactionMessage)
}

const mencionarIMG = (teks= '', Url, ms) => {
memberr = []
vy = teks.includes('\n') ? teks.split('\n') : [teks]
for(vz of vy){ for(zn of vz.split(' ')){
if(zn.includes('@'))memberr.push(parseInt(zn.split('@')[1])+'@s.whatsapp.net')
}}
loli.sendMessage(from, {image: {url: Url}, caption: teks.trim(), mentions: memberr}, {quoted: info}) 
}

// MUTAR USU√ÅRIO 
const GroupsMutedActived = []
for(let obj of muted) {
    GroupsMutedActived.push(obj.jid)
}
const isMuted = (isGroup && GroupsMutedActived.indexOf(from) >= 0) ? true : false
const NumbersMuted = isMuted ? muted[GroupsMutedActived.indexOf(from)].numbers : []
if(isMuted && NumbersMuted.indexOf(sender) >= 0){
reply(`üê§üò° *Voc√™ deu um piu?* - Agora prepare-se para o seu julgamento!`)
setTimeout(async () => {
    loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
return
}

if (isCmd) {
if (isFiltered(sender)) {
return reply(mess.floodCommands())
} else {
addFilter(sender)
}
} 

const mention = (teks= '', ms = info) => {
memberr = []
vy = teks.includes('\n') ? teks.split('\n') : [teks]
for(vz of vy){ for(zn of vz.split(' ')){
if(zn.includes('@'))memberr.push(parseInt(zn.split('@')[1])+'@s.whatsapp.net')
}}
loli.sendMessage(from, {text: teks.trim(), mentions: memberr}, {quoted: info}) 
}
//--------------//

//SISTEMA RPG\\


const isRoupab = roupab.includes(sender)

const iscasa = casa.includes(sender)

const isaguacoco = aguacoco.includes(sender)

const isCarab = carab.includes(sender) 

const isCaussa = caussa.includes(sender)

const istagrico = tagrico.includes(sender)

const isSapato = sapato.includes(sender)

const isPalitor = palitor.includes(sender) 

const isespada = espada.includes(sender)




//sistema banco//



const checkATM = checkATMuser(sender)
             try {
                 if (checkATM === undefined) addATM(sender)
                 const dinheirosaku = Math.floor(Math.random() * 0) + 0//GANHA ENTRA 10 * 50 POR CADA MSG
                  addKoinUser(from, dinheirosaku)
              } catch (err) {
                 console.error(err)
             }

//================//isquoted/const
const isImage = type == 'imageMessage'
const isVideo = type == 'videoMessage'
const isAudio = type == 'audioMessage'
const isSticker = type == 'stickerMessage'
const isContact = type == 'contactMessage'
const isLocation = type == 'locationMessage'
const isProduct = type == 'productMessage'
const isMedia = (type === 'imageMessage' || type === 'videoMessage' || type === 'audioMessage')
typeMessage = body.substr(0, 50).replace(/\n/g, '')
if (isImage) typeMessage = "Image"
else if (isVideo) typeMessage = "Video"
else if (isAudio) typeMessage = "Audio"
else if (isSticker) typeMessage = "Sticker"
else if (isContact) typeMessage = "Contact"
else if (isLocation) typeMessage = "Location"
else if (isProduct) typeMessage = "Product"

var PR_String = Procurar_String.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, "");

var pes = (type === 'conversation' && info.message.conversation) ? info.message.conversation : (type == 'imageMessage') && info.message.imageMessage.caption ? info.message.imageMessage.caption : (type == 'videoMessage') && info.message.videoMessage.caption ? info.message.videoMessage.caption : (type == 'extendedTextMessage') && info.message.extendedTextMessage.text ? info.message.extendedTextMessage.text : ''

const isQuotedMsg = type === 'extendedTextMessage' && content.includes('textMessage')

const isQuotedVideo = type === 'extendedTextMessage' && content.includes('videoMessage')

const isQuotedDocument = type === 'extendedTextMessage' && content.includes('documentMessage')

const isQuotedAudio = type === 'extendedTextMessage' && content.includes('audioMessage')

const isQuotedSticker = type === 'extendedTextMessage' && content.includes('stickerMessage')

const isQuotedContact = type === 'extendedTextMessage' && content.includes('contactMessage')

const isQuotedLocation = type === 'extendedTextMessage' && content.includes('locationMessage')

const isQuotedProduct = type === 'extendedTextMessage' && content.includes('productMessage')
 
const messagesC = PR_String.slice(0).trim().split(/ +/).shift().toLowerCase();

const exportion = JSON.parse(fs.readFileSync('./exportion.json'))

const isAntiImg = isGroup ? antiimg.includes(from) : false

const isAntiVid = isGroup ? antivid.includes(from) : false	

const isAutoReact = isGroup ? autoreact.includes(from) : false

const isAntiLink = isGroup ? antilink.includes(from) : false

const isAntiNotas = isGroup ? antinotas.includes(from) : false

const isAntiCtt = isGroup ? antictt.includes(from) : false

const isAntiPv = (antipv.indexOf('Ativado') >= 0) ? true : false	

const isAntiAudio = isGroup ? antiaudio.includes(from) : false

const isModobn =  isGroup ? modobn.includes(from) : true

const Antidoc = isGroup ? antidoc.includes(from) : false

const isAntiFlood = isGroup ? antiflood.includes(from) : false	

const isAnticatalogo = isGroup ? anticatalogo.includes(from) : false

const isSimi2 = isGroup ? samih2.includes(from) : false

const isAntifake = isGroup ? antifake.includes(from) : false

const Antiloc = isGroup ? antiloc.includes(from) : false

const isAntiSticker = isGroup ? antisticker.includes(from) : false

const isAntiPorn = isGroup ? antiporn.includes(from) : true

const menc_jid = args?.join(" ").replace("@", "") + "@s.whatsapp.net"

const isSimi = isGroup ? samih.includes(from) : false

const isAntilinkgp = isGroup ? antilinkgp.includes(from) : false
        
const sender_ou_n = q.includes("@") ? menc_jid : sender


const mentions = (teks, memberr, id) => {
(id == null || id == undefined || id == false) ? loli.sendMessage(from, {text: teks.trim(), mentions: memberr}) : loli.sendMessage(from, {text: teks.trim(), mentions: memberr})
}
const time = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
const hora = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
const date = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

const time2 = moment().tz('America/Sao_Paulo').format('HH:mm:ss')
if(time2 > "00:00:00" && time2 < "05:00:00"){
var tempo = ' ô·¥è·¥Ä ·¥ç·¥Ä·¥Ö Ä·¥ú…¢·¥Ä·¥Ö·¥Ä üåí'
} if(time2 > "05:00:00" && time2 < "12:00:00"){
var tempo = ' ô·¥è·¥Ä ·¥Ö…™·¥Ä üåï'
} if(time2 > "12:00:00" && time2 < "18:00:00"){
var tempo = ' ô·¥è·¥Ä ·¥õ·¥Ä Ä·¥Ö·¥á üåó'
} if(time2 > "18:00:00"){
var tempo = ' ô·¥è·¥Ä …¥·¥è…™·¥õ·¥á üåë'
}

const menc_prt = info.message?.extendedTextMessage?.contextInfo?.participant

// VERIFICADOS ‚≠êÔ∏è
const live = {key : {participant : '0@s.whatsapp.net'},message: {liveLocationMessage: {}}} 
const imgm = {key : {participant : '0@s.whatsapp.net'},message: {imageMessage: {}}}
const vid = {key : {participant : '0@s.whatsapp.net'},message: {videoMessage: {}}}
const contato = {key : {participant : '0@s.whatsapp.net'},message: {contactMessage:{displayName: `${pushname}`}}}
const doc = {key : {participant : '0@s.whatsapp.net'},message: {documentMessage:{}}}
const may = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: '6283136505591-1614953337@g.us' } : {}) }, message: { 'imageMessage': { 'url': 'https://mmg.whatsapp.net/d/f/At0x7ZdIvuicfjlf9oWS6A3AR9XPh0P-hZIVPLsI70nM.enc', 'mimetype': 'image/png', 'caption': `${botName}`, 'fileSha256': '+Ia+Dwib70Y1CWRMAP9QLJKjIJt54fKycOfB2OEZbTU=',  forwardingScore: 508, isForwarded: true,'fileLength': '28777', 'height': 1080, 'width': 1079, 'mediaKey': 'vXmRR7ZUeDWjXy5iQk17TrowBzuwRya0errAFnXxbGc=', 'fileEncSha256': 'sR9D2RS5JSifw49HeBADguI23fWDz1aZu4faWG/CyRY=', 'directPath': '/v/t62.7118-24/21427642_840952686474581_572788076332761430_n.enc?oh=3f57c1ba2fcab95f2c0bb475d72720ba&oe=602F3D69', 'mediaKeyTimestamp': '1610993486', 'jpegThumbnail': fs.readFileSync('./loli/image/menu.jpg')} } }
const selo = { key: {fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "status@broadcast" } : {}) }, message: { "imageMessage": { "url": "https://mmg.whatsapp.net/d/f/At0x7ZdIvuicfjlf9oWS6A3AR9XPh0P-hZIVPLsI70nM.enc", "mimetype": "image/jpeg","caption": `${botName}`, 'jpegThumbnail': fs.readFileSync('./loli/image/menu.jpg')}}}

const menc_os2 = q.includes("@") ? menc_jid : menc_prt 


 if (!isGroup && isCmd) console.log(
color(`ùêÇùêéùêåùêÄùêçùêÉùêé ùêçùêé ùêèùêëùêàùêïùêÄùêÉùêé`,'red'),'\n',
color('‚™º NOME DO BOT:','red'),color(botName, 'cyan'),'\n',
color('‚™º USU√ÅRIO:','red'),color(pushname,'cyan'),'\n',
color('‚™º COMANDO:','red'),color(budy, 'cyan'),'\n',
color('‚™º HOR√ÅRIO:','red'),color(hora,'cyan'),'\n',
color('‚™º DA–¢A:','red'),color(data,'cyan'),'\n')

if (!isCmd && !isGroup) console.log(
color(`ùêåùêÑùêçùêíùêÄùêÜùêÑùêå ùêçùêé ùêèùêëùêàùêïùêÄùêÉùêé`,'red'),'\n',
color('‚™º NOME DO BOT:','red'),color(botName, 'cyan'),'\n',
color('‚™º USU√ÅRIO:','red'),color(pushname,'cyan'),'\n',
color('‚™º MENSAGEM:','red'),color(budy,'cyan'),'\n',
color('‚™º HOR√ÅRIO:','red'),color(hora,'cyan'),'\n',
color('‚™º DATA:','red'),color(data,'cyan'),'\n')

if (isCmd && isGroup) console.log(
color(`ùêÇùêéùêåùêÄùêçùêÉùêé ùêÑùêå ùêÜùêëùêîùêèùêé`,'red'),'\n',
color('‚™º NOME DO BOT:','red'),color(botName, 'cyan'),'\n',
color('‚™º NOME DO GRUPO:','red'),color(groupName,'cyan'),'\n',
color('‚™º USU√ÅRIO:','red'),color(pushname,'cyan'),'\n',
color('‚™º COMANDO:','red'),color(budy,'cyan'),'\n',
color('‚™º HOR√ÅRIO:','red'),color(hora,'cyan'),'\n',
color('‚™º DATA:','red'),color(data,'cyan'),'\n')

if (!isCmd && isGroup) console.log(
color(`ùêåùêÑùêçùêíùêÄùêÜùêÑùêå ùêÑùêå ùêÜùêëùêîùêèùêé`,'red'),'\n',
color('‚™º NOME DO BOT:','red'),color(botName, 'cyan'),'\n',
color('‚™º NOME DO GRUPO:','red'),color(groupName,'cyan'),'\n',
color('‚™º USU√ÅRIO:','red'),color(pushname,'cyan'),'\n',
color('‚™º MENSAGEM:','red'),color(budy,'cyan'),'\n',
color('‚™º HOR√ÅRIO:','red'),color(hora,'cyan'),'\n',
color('‚™º DATA:','red'),color(data,'cyan'),'\n')

//
msg = {
registro: "_[‚ùó] Para ver o menu voc√™ precisa se registrar use /login_",
botadm: "[‚ùó] bot precisa ser adm",
aguarde: "[‚ùó] aguarde uns minutinho estou processadoüë®‚Äçü¶Ø",
dono: "[‚ùó] este comando so podera ser usado pelo meu donoüí£",
grupo: "[‚ùó] este comando so pode ser usado em grupoü´Ç",
private: "[‚ùó] este comando so pode ser usado no privadoüëÄ",
premium: "[‚ùó] ESTE PEDIDO √â SO PARA *USU√ÅRIOS PREMIUMS*",
adm: "este comando so pode ser usado por um adm",
botadm: "[‚ùó] bot precisa ser adm pra executar esse comando",
erro: "[‚ùó] ocorreu uma falha no comando por favor aguarde ate meu dono ajeitar", 
dono: "[‚ùó] Esse comando so pode ser usado pelo meu dono!!!",
abrindomenu: "_[‚ùó]Carregando menu aguarde..._",
}

const foto = { key: {fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "120363034719882460@g.us" } : {}) },
message: { 
"imageMessage": {
"caption": ' ‚Ä¢ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç‚Ä¢ ',
"jpegThumbnail": fs.readFileSync('./loli/image/menu.jpg')
}}}

const order = { key: {fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "120363034719882460@g.us" } : {}) },
message: { 
"orderMessage": {
"thumbnail": fs.readFileSync('./loli/image/menu.jpg'),
"itemCount": 1000000000000,
"status": "INQUIRY",
"surface": "CATALOG",
"message": `üëÅ ‚Ä¢ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç‚Ä¢ üëÅ`,
}}}


switch(comando) {

case 'comprarbot': case 'comprabot':
await delay(5000)
reply(`Ok vou te mandar a chave pix para voc√™ efetuar o pagamento, aguarde...`)
await delay(8000)
reply(`Qual forma voc√™ quer efetuar o pagamento?

/email
/telefone
/chavealeatoria`)
break

case 'email':
await delay(3000)
reply(`Ok enviando email`)
await delay(4000)
reply(`aqui esta a chave para voc√™ efetuar o pagamento`)
await delay(4000)
reply(`kiritomoderxxx@gmail.com`)
await delay(110000)
reply(`‚ùå_N√£o identifiquei o seu pagamento_‚ùå
Entre em contato com o desenvolvedor üëâüèª Wa.me/553172595934`) 
break

case 'telefone': case 'tell':
await delay(3000)
reply(`Ok enviando chave...`)
await delay(4000)
reply(`aqui esta a chave para voc√™ efetuar o pagamento`)
await delay(5000)
reply(`+5531998630187`)
await delay(110000)
reply(`‚ùå_N√£o identifiquei o seu pagamento_‚ùå
Entre em contato com o desenvolvedor üëâüèª Wa.me/553172595934`) 
break

case 'chavealeatoria': case 'chavealeat√≥ria':
await delay(3000)
reply(`Ok enviando chavealeatoria...`)
await delay(4000)
reply(`2d616b1e-f9bf-4831-8420-c0633e3310ac`)
await delay(110000)
reply(`‚ùå_N√£o identifiquei o seu pagamento_‚ùå
Entre em contato com o desenvolvedor üëâüèª Wa.me/553172595934`) 
break
//Todos os comandos est√£o funcionando normalmente mas estao tudo embaralhado üòÖüòÖ e isso boa sorte.\\

case 'figurinha': case 's': case 'stickergifp': case 'figura': case 'f': case 'figu': case 'st': case 'stk': case 'fgif':

{
(async function () {
var legenda = q ? q?.split("/")[0] : `‚ïº‚ä≥‚ä∞ Solicitado Por:
‚ïº‚ä≥‚ä∞ Bot:
‚ïº‚ä≥‚ä∞ Dono:`
var autor = q ? q?.split("/")[1] : q?.split("/")[0] ? '' : `${pushname}
${botName}
${donoName}`
if (isMedia && !info.message.videoMessage || isQuotedImage) {
var encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
rano = getRandom('.webp')
exec(`ffmpeg -i ${rane} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${rano}`, (err) => {
fs.unlinkSync(rane)
// "android-app-store-link": "https://play.google.com/store/search?q=%2B55%2094%209147-2796%20%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5&c=apps",
var json = {
"sticker-pack-name": legenda,
"sticker-pack-publisher": autor
}
var exifAttr = Buffer.from([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x57, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00])
var jsonBuff = Buffer.from(JSON.stringify(json), "utf-8")
var exif = Buffer.concat([exifAttr, jsonBuff])
exif.writeUIntLE(jsonBuff.length, 14, 4)
let nomemeta = Math.floor(Math.random() * (99999 - 11111 + 1) + 11111)+".temp.exif"
fs.writeFileSync(`./${nomemeta}`, exif) 
exec(`webpmux -set exif ${nomemeta} ${rano} -o ${rano}`, () => {
loli.sendMessage(from, {sticker: fs.readFileSync(rano)}, {quoted: info})
fs.unlinkSync(nomemeta)
fs.unlinkSync(rano)
})
})
} else if (isMedia && info.message.videoMessage.seconds < 11 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 35) {
var encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
rano = getRandom('.webp')
await ffmpeg(`./${rane}`)
.inputFormat(rane.split('.')[1])
exec(`ffmpeg -i ${rane} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 200:200 ${rano}`, (err) => {
fs.unlinkSync(rane)
let json = {
"sticker-pack-name": legenda,
"sticker-pack-publisher": autor
}
let exifAttr = Buffer.from([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x57, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00])
let jsonBuff = Buffer.from(JSON.stringify(json), "utf-8")
let exif = Buffer.concat([exifAttr, jsonBuff])
exif.writeUIntLE(jsonBuff.length, 14, 4)
let nomemeta = "temp.exif"
fs.writeFileSync(`./${nomemeta}`, exif) 
exec(`webpmux -set exif ${nomemeta} ${rano} -o ${rano}`, () => {
loli.sendMessage(from, {sticker: fs.readFileSync(rano)}, {quoted: info})
fs.unlinkSync(nomemeta)
fs.unlinkSync(rano)
})
})
} else {
reply(`Voc√™ precisa enviar ou marcar uma imagem ou v√≠deo com no m√°ximo 10 segundos`)
}
})().catch(e => {
console.log(e)
reply("Hmm deu erro")
try {
if (fs.existsSync("temp.exif")) fs.unlinkSync("temp.exif");
if (fs.existsSync(rano)) fs.unlinkSync(rano);
if (fs.existsSync(media)) fs.unlinkSync(media);
} catch {}
})
}
break

//============MENUS AQUI===========\\
case 'menu': case 'ajuda': case 'help':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: menu(comando, prefix, hora, data, pushname, totalcmd),
gifPlayback: true},
{quoted: info})
break

case 'logos': case 'menulogos': case 'lg':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/logos.jpg'),
caption: logos(comando, prefix, hora, data, pushname, totalcmd),
gifPlayback: true},
{quoted: info})
break

case 'menuvip':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: menuvip(comando, prefix, hora, data, pushname, totalcmd),
gifPlayback: true},
{quoted: info})
break

case 'menutravazap':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: menutravazap(comando, prefix, hora, data, pushname, totalcmd),
gifPlayback: true},
{quoted: info})
break

case 'menuadm':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
if (!isGroupAdmins) return reply(msg.adm)
if (!isGroup) return reply(msg.grupo)
audiomenu = await fs.readFileSync("./loli/audio/adm.mp3")
loli.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mpeg', ptt:true}, {quoted: info})
await delay(4000)
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: menu1(comando, prefix, hora, data, pushname, totalcmd),
gifPlayback: true},
{quoted: info})
break

case 'criador':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: criado(comando, prefix, hora, data, pushname, totalcmd),
gifPlayback: true},
{quoted: info})
break

case 'alugar':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
await loli.sendMessage(from, { react: { text: `üçÉ`, key: info.key }})
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: alugar(comando, prefix, hora, data, pushname),
gifPlayback: true},
{quoted: info})
break

case 'menudono':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
if(!isCreator) return reply(msg.dono)
await loli.sendMessage(from, { react: { text: `üçÉ`, key: info.key }})
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: menudono(comando, prefix, hora, data, pushname),
gifPlayback: true},
{quoted: info})
break

case 'menujogos':
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
if(!isGroup) return reply(msg.grupo)
await loli.sendMessage(from, { react: { text: `üéÆ`, key: info.key }})
audiomenu = await fs.readFileSync("./loli/audio/jogos.mp3")
loli.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mpeg', ptt:true}, {quoted: info})
await delay(4000)
loli.sendMessage(from,
{image: fs.readFileSync('./loli/image/menu.jpg'),
caption: menujogos(comando, prefix, hora, data, pushname),
gifPlayback: true},
{quoted: info})
break

case "menu18":
reagir(from, "üíé")
await sleep(100)
reagir(from, "‚úÖÔ∏è")
await sleep(200)
reagir(from, "‚ÄºÔ∏è")
await sleep(300)
reagir(from, "ü§°")
await sleep(400)
reagir(from, "‚ô•Ô∏è")
await sleep(500)
reagir(from, "üë•")
await sleep(600)
reagir(from, "üòç")
await sleep(1000)
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
templateMassage = {
image: {url:"./loli/image/menu.jpg",
quoted: info},
caption: menu18(prefix, hora, data, pushname),
headerType: 4,
contextinfo:{externalAdReply:{
thumbnail: global.goimg,
mediaType:2,
//templateButtons: templateButtons
}}
}
loli.sendMessage(from, templateMassage)
break

case 'documento':
reply(`enviando...`)
if(!isCreator) return reply(msg.dono)
loli.sendMessage(from, {
document: fs.readFileSync('./loli/image/menu.jpg'),
mimetype: 'application/zip',
fileName: 'ü§¨${botName}ü§¨'
},
{quoted: info
})
break

case 'txt-desativar9': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nOl√° , eu perdi todos meus documentos junto com meu celular e preciso imediatamente que desativem meu n√∫mero:
+55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar8': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nÂÅ∑‚æõ‰∫ÜÊàëÁöÑ‚ºøÊú∫ÂíåÊàëÊâÄÊúâÁöÑÂÆù‚ªâÔºåËØ∑‚Ω¥Âç≥Á¶Å‚ΩåÊàëÁöÑÂ∏ê‚ºæ
+55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar7': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nOl√° , eu gostaria de desativar meu n√∫mero do WhatsApp porque eu estou migrando para o telegram , Meu n√∫mero:
+55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar4': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nPerdido/Roubado: Por favor, desative minha conta
+55 11 11111-11111`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desban3': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nMeu numero foi banido, utilizo ele para falar com meus amigos e familia. Al√©m de falar com meus clientes, e estou sendo prejudicado perdendo vendas +55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desban4': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n?? ‚Ä¢ Texto: \n\nOla suporte do whatsapp , meu numero ,(numero) foi banido injustamente do whatsapp , estou solicitando o desbanimento imediato de meu n√∫mero `
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-sair-1-2': // by: loli-MD
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n?? ‚Ä¢ Texto: \n\nEu nao consigo entrar no whatsapp , meu n√∫mero esta -1 , solicito que resetem minha verifica√ß√£o de n√∫mero!
N√∫mero: +55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-sair-1-1': // by: loli-MD
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nMeu n√∫mero est√° no suporte algu√©m solicitou meu c√≥digo por engano meu n√∫mero √© usado para conversas com familiares que est√£o com convite por favor reinicie o meu c√≥digo de verifica√ß√£o via SMS!
N√∫mero: +55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar7': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nOl√° , eu gostaria de desativar meu n√∫mero do WhatsApp porque eu estou migrando para o telegram , Meu n√∫mero:
+55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar6': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nOl√° fui assaltado a uns 30 minutos e roubaram todos meus pertences , quero que desativem minha conta do whatsapp.
N√∫mero: +55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar5': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nMeu numero do whatsapp foi roubado , desativem minha conta imensamente , desde j√° agrade√ßo! meu numero :
+55 99999-99999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar3': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nEstou solicitando a desativa√ß√£o tempor√°ria de minha conta no whatsapp , meu numero:
+55 11 11111-1111`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar2': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nPlease Deactivate The My Account Number (n√∫mero*) Immediately Because The Number Has Been Lost`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desativar1': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nOl√°,perdi todos os meus documentos e o meu chip foi roubado. Pe√ßo que desativem
minha conta imediatamente,no chip h√° dados sobre mim por isso pe√ßo que desativem,meu  n√∫mero imediatamente (n√∫mero)`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desban1': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nMeu n√∫mero (N√∫mero) foi banido indevidamente isto foi um engano . Fui clonado e roubaram meu n√∫mero preciso ativar minha conta tenho uma empresa de eletrodom√©sticos e tenho pedidos pendentes.`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desban2': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nMeu n√∫mero (Numero) , foi banido do whatsapp injustamente e tenho provas pra mostrar que o banimento foi um erro do sistema.`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desban4': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n?? ‚Ä¢ Texto: \n\nOla suporte do whatsapp , meu numero ,(numero) foi banido injustamente do whatsapp , estou solicitando o desbanimento imediato de meu n√∫mero `
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-desban5': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nOla eu sou roberto silva, eu comprei um n√∫mero n√∫mero para meu filho fazer os trabalhos da escola em qual ele estuda , por√©m quando fui tentar entrar , estava dizendo que o n√∫mero foi banido e eu nem sequer entrei no n√∫mero, n√£o fiz nada eu ja comprei o n√∫mero e ele ja estava assim , ele precisa urgentemente desse n√∫mero para fazer os trabalhos da escola.
Verifiquem o ma√≠s r√°pido poss√≠vel!
N√öMERO: 55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-sair-1-2': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n?? ‚Ä¢ Texto: \n\nEu nao consigo entrar no whatsapp , meu n√∫mero esta -1 , solicito que resetem minha verifica√ß√£o de n√∫mero!
N√∫mero: +55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

case 'txt-sair-1-1': // ${botName}
reply(`Enviando no pv`)
await delay(5000)
bymonarge =`‚ä∂Õ°Õú€ú€ú€£ üõëSuporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\nüìÑ ‚Ä¢ Texto: \n\nMeu n√∫mero est√° no suporte algu√©m solicitou meu c√≥digo por engano meu n√∫mero √© usado para conversas com familiares que est√£o com convite por favor reinicie o meu c√≥digo de verifica√ß√£o via SMS!
N√∫mero: +55 99 9999-9999`
loli.sendMessage(sender, {text: bymonarge}, {quoted: info})
break

//===============FIM CMD TRAVA=================\\

//===============MENU ADM==============\\

case 'ban': case 'kick':
if (!isBotAdmins) return reply(msg.botadm)
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
{
audiomenu = await fs.readFileSync("./loli/audio/ban.mp3")
loli.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mpeg', ptt:true}, {quoted: info})
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque a mensagem da pessoa que deseja banir')
if(info.message.extendedTextMessage.contextInfo.participant !== null && info.message.extendedTextMessage.contextInfo.participant != undefined && info.message.extendedTextMessage.contextInfo.participant !== "") {
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
let responseb = await loli.groupParticipantsUpdate(from, [mentioned], 'remove')
if (responseb[0].status === "200") return reply(`*Usu√°rio removido do grupo com sucessoüôçüèª‚Äç‚ôÇÔ∏è*`)
else if (responseb[0].status === "406") return reply('Como vc quer que eu remova o adm supremacy????')
else if (responseb[0].status === "404") return reply('*Este usu√°rio ja foi removido ou saiu do grupo')
else return reply('tenta dnv')
} else if (info.message.extendedTextMessage.contextInfo.mentionedJid != null && info.message.extendedTextMessage.contextInfo.mentionedJid != undefined) {
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(mentioned.length > 1) {
if(mentioned.length > groupMembers.length || mentioned.length === groupMembers.length || mentioned.length > groupMembers.length - 3) return reply(`Vai arquivar msm??`)
sexocomrato = 0
for (let banned of mentioned) {
await sleep(100)
let responseb2 = await loli.groupParticipantsUpdate(from, [banned], 'remove')
if (responseb2[0].status === "200") sexocomrato = sexocomrato + 1
}
return reply(``)
} else {
let responseb3 = await loli.groupParticipantsUpdate(from, [mentioned[0]], 'remove')
if (responseb3[0].status === "200") return reply(`*Usu√°rio removido do grupo com sucessoüôçüèª‚Äç‚ôÇÔ∏è*`)
else if (responseb3[0].status === "406") return reply('Como vc quer que eu remova o adm supremacy????')
else if (responseb3[0].status === "404") return reply('Este usu√°rio j√° foi removido ou saiu')
else return reply('Tenta dnv')
}
}
}
break

case 'nomegp':
if (!isBotAdmins) return reply(msg.botadm)
if (!isCreator) if (!isGroupAdmins) reply (`comando apenas para admins`)
if (!isGroupAdmins) if (!isCreator) nadm = fs.readFileSync('./loli/audio/soadm')

if (!isGroupAdmins) if (!isCreator) return loli.sendMessage(from, nadm, MessageType.audio, {quoted: info, mimetype: 'audio/mp4', ptt:true})
if (!isGroup) return reply(`Este comando so pode ser usado em grupo`);
if (!q) return reply(` `);
loli.groupUpdateSubject(from, `${q}`)
loli.sendMessage(from, {text: 'Sucesso, alterou o nome do grupo'})
break

case 'descgp':
case 'descri√ß√£ogp': 
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotAdmins) return reply(msg.botadm)
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
if (!isGroup) return reply(`Este comando so pode ser usado em grupo`);
if (!q) return reply(` `);
loli.groupUpdateDescription(from, `${q}`)
loli.sendMessage(from, {text: 'Sucesso, alterou a descri√ß√£o do grupo'}, {quoted: loc})
break

case 'promover': case 'promote':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Vai colocar o vento como adm???')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
let responsedm = await loli.groupParticipantsUpdate(from, [mentioned], 'promote')
if (responsedm[0].status === "200") return reply('Temos um novo admir')
else if (responsedm[0].status === "404") return reply('Esse maluco nem ta no grupo ü§î')
else return reply('Tenta dnv '-'')
break

case "grupo":
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
try {
if (q == "a") {
await loli.groupSettingUpdate(from, "not_announcement")
reply("Grupo aberto com sucesso")
}
if (q == "f") {
await loli.groupSettingUpdate(from, "announcement")
reply("Grupo fechado com sucesso ")
}
} catch(e) {
console.log(e)
reply(resposta.erro)
}
break

case 'rebaixar': case 'rebaixa':
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotAdmins) return reply(msg.botadm)
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply('nao e adm...')
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque ou responda a mensagem de quem voc√™ quer tirar de admin')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
let responsepm = await loli.groupParticipantsUpdate(from, [mentioned], 'demote')
if (responsepm[0].status === "406") return reply('Como vc quer que eu remova o adm supremacy????')
else if (responsepm[0].status === "200") return reply('Voce perdeu o cargo de adm por motivos justo, Lamento voce nao e mais adm do grupo üòÇüòÇ')
else if (responsepm[0].status === "404") return reply('Esse cara nem ta no grupo')
else return reply('tente dnv')
break

case 'reviver': case 'add':
reply(`Desculpe esse comando esta dando ban no n√∫mero nao e poss√≠vel usar`)
break

case 'marcarwa':
try {
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isGroupAdmins && !isCreator) return reply('Voc√™ precisa ser ADM pra utilizar este comando')  
if(q.includes(`.`)) return reply("N√£o pode utilizar comandos nesse comando")
members_id = []
 let metadata = await loli.groupMetadata(from)
teks = (args.length > 1) ? body.slice(10).trim() : ''
teks += `„Äò *üë• MARCANDO TODOS üôÇ* „Äô\n\n*„Äòüë•„ÄôMEMBROS:* ${metadata.participants.length ? metadata.participants.length : "undefined"}\n\n`
for (let mem of groupMembers) {
teks += `‚ï†‚û• https://wa.me/${mem.id.split('@')[0]}\n`
members_id.push(mem.id)
}
loli.sendMessage(from, {text: teks}, {quoted: info})
} catch {
reply('ERROR!!')
}
break

case 'resetarlink':
if (!isBotAdmins) return reply(msg.botadm)
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
try {
await loli.groupRevokeInvite(from)
reply("*LINK DO GRUPO RESETADO COM SUCESSO‚úÖ*")
} catch(e) {
console.log(e)
reply(resposta.erro)
}
break

case 'antiimg':
if (!isBotAdmins) return reply(msg.botadm)
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiImg) return reply('J√° Esta ativo')
antiimg.push(from)
fs.writeFileSync('./arquivos/antis/antiimg.json', JSON.stringify(antiimg))
reply('Ativou com sucesso o recurso de anti imagem neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiImg) return reply('Ja esta Desativado.')
antiimg.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antiimg.json', JSON.stringify(antiimg))
reply('Desativou com sucesso o recurso de anti imagem neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'saibot':
if (!isGroup) return reply(mag.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
reply(`ok ${pushname} me desculpe se eu nao pude ajud√°-lo(a) com o que vc precisava....adeusüòî`)
await delay(1000)
try {
await loli.groupLeave(from)
} catch(e) {
console.log(e)
reply(resposta.erro)
}
break

//============FIM DOS CMD ADM=============\\

//============CMD DONO===========\\
case 'sairgp':
if (!isCreator) return loli.sendMessage(from, {text: 'somente dono'})
try {
loli.groupLeave(from)
} catch(erro) {
reply(String(erro))
}
break

case 'reiniciar':
if (!isCreator) return reply(msg.dono)
loli.sendMessage(from,{text: `_Ok Reiniciando Isso vai levar alguns segundos..._`}, {quoted: info})
setTimeout(() => {process.exit(0)}, 3000)
break

case 'foto':
if (!isCreator) return loli.sendMessage(from, {text: 'somente dono'})
loli.sendMessage(from, {image: fs.readFileSync('./loli/image/menu.jpg'), caption: 'ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç'},{quoted: info})
break

case 'video':
if (!isCreator) return loli.sendMessage(from, {text: 'somente dono'})
loli.sendMessage(from, {video: fs.readFileSync('./loli/video/cantada brabakkkkk.mp4'), caption: 'ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç'},{quoted: info})
break

case 'audio':
if (!isCreator) return loli.sendMessage(from, {text: 'somente dono'})
loli.sendMessage(from, {audio: fs.readFileSync('./loli/audio/sim.mp3'), mimetype: "audio/mpeg",},{quoted: info})
break

case 'dado':
const dadus = ["‚öÄ", "‚öÅ", "‚öÇ", "‚öÉ", "‚öÑ", "‚öÖ"]
dadu = dadus[Math.floor(Math.random() * dadus.length)]
dador = fs.readFileSync('./arquivos/fun√ß√µes/dado/' + dadu + '.webp')
loli.sendMessage(from, {
sticker: dador
}, {
quoted: info
})
break

case 'limpeza':
if (!isCreator) return loli.sendMessage(from, {text: 'somente dono'})
loli.sendMessage(m.chat, {text: `krl lixo pra kct\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Limpo com sucesso ‚úÖ`},{quoted: m})
break

case 'hentai':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'hentai2':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'ero':{
if(!isPremium) return reply(msg.premium)
reply(`enviando no seu pv...`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'fotopraperfil':{
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`Enviando a foto no seu perfil...`)
bla = await fetchJson("https://fine-gold-squid-yoke.cyclic.app/18/travazap?username=Sandroq&key=Sandroq")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'memepv':{
if(!isPremium) return reply(msg.premium)
reply(`o meme esta sendo enviado no seu privado..`)
bla = await fetchJson("https://clover-t-bot.onrender.com/memes?username=Sandro999&key=287268")

loli.sendMessage(sender, {video: {url: bla.url}})
}break

case 'meme':{
if(!isPremium) return reply(msg.premium)
reply(`enviando meme aguarde...`)
bla = await fetchJson("https://clover-t-bot.onrender.com/memes?username=Sandro999&key=287268")

loli.sendMessage(from, {video: {url: bla.url}})
}break

case 'foto18':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://happy-red-hummingbird.cyclic.app/18/foto_18?username=Sandrox&key=Sandrox")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'pussy':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'neko2':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'achego':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'manga':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'foot':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'v√≠deo18':
case 'video18':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/18/video?username=Sandro999&key=287268")

loli.sendMessage(sender, {video: {url: bla.url}})
}break

case 'gif':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://fine-gold-squid-yoke.cyclic.app/nsfw/hentai?username=Sandroq&key=Sandroq")

loli.sendMessage(sender, {video: {url: bla.url}})
}break

case 'trava2':
if(!isCreator) return replu(msg.dono)
reply(`ü§¨By Sandro-borü§¨ ${venomiphone1}`) 
break

case 'lbc':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'hentai4':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break

case 'hentai3':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image: {url: bla.url}})
}break


case 'zettai':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image:  {url: bla.url}}) 
}break

case 'bdsm':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image:  {url: bla.url}}) 
}break

case 'glasses':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image:  {url: bla.url}}) 
}break

case 'orgy':{
if(!isPremium) return reply(msg.premium)
reply(`Estou enviando no seu PV ${pushname} se n√£o for porque API caiu.`)
bla = await fetchJson("https://clover-t-bot.onrender.com/nsfw/neko?key=287268&username=Sandro999")

loli.sendMessage(sender, {image:  {url: bla.url}}) 
}break

case 'plaq':{
if(!isPremium) return reply(msg.premium)
    if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
    buffer =(`https://raptibef.sirv.com/images%20(3).jpeg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=19%25&text.0.size=45&text.0.color=000000&text.0.opacity=55&text.0.font.family=Crimson%20Text&text.0.font.weight=300&text.0.font.style=italic&text.0.outline.opacity=21`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
    }
    reply(`a plaquinha esta sendo enviado no seu privado...`)
    break

case 'plaq2':{
if(!isPremium) return reply(msg.premium)
    if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
    buffer =(`https://umethroo.sirv.com/BUNDA1.jpg?text.0.text=${teks}&text.0.position.x=-20%25&text.0.position.y=-20%25&text.0.size=18&text.0.color=000000&text.0.font.family=Architects%20Daughter&text.0.font.weight=700&text.0.background.opacity=65`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
    }
    reply(`a plaquinha esta sendo enviado no seu privado...`)
    break

case 'plaq3':{
if(!isPremium) return reply(msg.premium)
    if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
    buffer =(`https://umethroo.sirv.com/bunda3.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=-25%25&text.0.position.y=-17%25&text.0.size=17&text.0.color=000000&text.0.font.family=Architects%20Daughter&text.0.font.weight=700&text.0.font.style=italic`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
    }
    reply(`a plaquinha esta sendo enviado no seu privado...`)
    break

case 'plaq4':{
if(!isPremium) return reply(msg.premium)
    if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
    buffer =(`https://umethroo.sirv.com/peito1.jpg?text.0.text=${teks}&text.0.position.x=-48%25&text.0.position.y=-68%25&text.0.size=14&text.0.color=000000&text.0.font.family=Shadows%20Into%20Light&text.0.font.weight=700`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
    }
    reply(`a plaquinha esta sendo enviado no seu privado...`)
    break

case 'plaq5':{
if(!isPremium) return reply(msg.premium)
    if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
    buffer =(`https://umethroo.sirv.com/9152e7a9-7d49-48ef-b8ac-2e6149fda0b2.jpg?text.0.text=${teks}&text.0.position.x=-70%25&text.0.position.y=-23%25&text.0.size=17&text.0.color=000000&text.0.font.family=Architects%20Daughter&text.0.font.weight=300`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
    }
    reply(`a plaquinha esta sendo enviado no seu privado...`)
    break

case 'plaq6':{
if(!isPremium) return reply(msg.premium)
    if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
    buffer =(`https://clutamac.sirv.com/1011b781-bab1-49e3-89db-ee2c064868fa%20(1).jpg?text.0.text=${teks}&text.0.position.gravity=northwest&text.0.position.x=22%25&text.0.position.y=60%25&text.0.size=12&text.0.color=000000&text.0.opacity=47&text.0.font.family=Roboto%20Mono&text.0.font.style=italic`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
    }
    reply(`a plaquinha esta sendo enviado no seu privado...`)
    break

case 'plaq7':{
if(!isPremium) return reply(msg.premium)
    if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
    buffer =(`https://umethroo.sirv.com/Torcedora-da-sele%C3%A7%C3%A3o-brasileira-nua-mostrando-a-bunda-236x300.jpg?text.0.text=${teks}&text.0.position.x=-64%25&text.0.position.y=-39%25&text.0.size=25&text.0.color=1b1a1a&text.0.font.family=Architects%20Daughter`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `üîû`, key: info.key }})
    }
    reply(`a plaquinha esta sendo enviado no seu privado...`)
    break

case 'loli' :{
if(!isPremium) return reply(msg.premium)
reply("aguarde um momento, eu vou enviar no seu pv se demorar demais e pq nao encontrei a foto...")
    waifuddd = await axios.get('https://waifu.pics/api/sfw/shinobu')
 var wbuttsssr = [
    {buttonId: `-loli`, buttonText: {displayText: `>>`}, type: 1},
    ]
        let buttonMessagessfgr = {
        image: {url:waifuddd.data.url},
        caption: 'vc e um(a) lolicon?ü§î!',
 //       buttons: wbuttsssr,
        headerType: 2
         }     
                                  
    await loli.sendMessage(sender, buttonMessagessfgr, { quoted:info }).catch(err => {
        return('error..')
        })
        }
break

case 'only1': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only1 = `
Luiz russo (mans√£o maromba)
‚å†üåê‚å°> https://t.me/+8cJ7yGnq5fI2YjYx
`
loli.sendMessage(sender, {text: only1}, {quoted: info})
break

case 'only2': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only2 = `
Luiza blue 
‚å†üåê‚å°> https://t.me/+JaX8wY_45843ZTBh
`
loli.sendMessage(sender, {text: only2}, {quoted: info})
break

case 'only3': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only3 = `
Isadora vale 
‚å†üåê‚å°> https://t.me/+smb4i0bxRl41ZjRh
`
loli.sendMessage(sender, {text: only3}, {quoted: info})
break

case 'only4': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only4 = `
Ingrid bianchi
‚å†üåê‚å°> https://t.me/+RJtf2TqTQ8NjZjlh
`
loli.sendMessage(sender, {text: only4}, {quoted: info})
break

case 'only5'://${botName}  
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only5 = `
Lizy Donato 
‚å†üåê‚å°> https://t.me/+gmSjm2WZnb41OGEx
`
loli.sendMessage(sender, {text: only5}, {quoted: info})
break

case 'only6': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only6 = ` 
Feh Galv√£o
‚å†üåê‚å°> https://t.me/+naeQ1pp8ajswMjgx
`
loli.sendMessage(sender, {text: only6}, {quoted: info})
break

case 'only7': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only7 = `
Tatyzack
‚å†üåê‚å°> https://t.me/+NvglGFhOLSY5NmZ
`
loli.sendMessage(sender, {text: only7}, {quoted: info})
break

case 'only8'://${botName}  
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only8 = `
Ayrla Souza 
‚å†üåê‚å°> https://t.me/+XLziPd47MWo2N2Y
`
loli.sendMessage(sender, {text: only8}, {quoted: info})
break

case 'only9'://${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only9 = `
ALINE FARIA
‚å†üåê‚å°> https://t.me/+j1xp_hmXrx5lZWMx
`
loli.sendMessage(sender, {text: only9}, {quoted: info})
break

case 'limpar':
if(!isGroup) return reply(msg.grupo)
if(!isGroupAdmins) return reply(msg.adm)
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
if(verificado === true) {
loli.sendMessage(from, {text: clear}, {quoted: info, contextInfo : { forwardingScore: 500, isForwarded:true}})
} else {
loli.sendMessage(from, {text: clear}, {quoted: info, contextInfo : { forwardingScore: 500, isForwarded:true}})  
}
break

case 'only10'://${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only10 = `
KINE CHAN 
‚å†üåê‚å°> https://t.me/+YIVax4IQ9aFlMDgx
`
loli.sendMessage(sender, {text: only10}, {quoted: info})
break

case 'only11': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviado no seu pv`)
only11 = `
DJ NATHI
‚å†üåê‚å°> https://t.me/+6Z5vuVApT-1lYjEx
`
loli.sendMessage(sender, {text: only11}, {quoted: info})
break

case 'only12': //${botName} 
if(!isPremium) return reply(msg.premium)
await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
reply(`[‚òëÔ∏è]Enviando no seu pv`)
only12 = `
BELE KAFFER
‚å†üåê‚å°> https://t.me/+70DMw3iTzb0yMzEx
`
loli.sendMessage(sender, {text: only12}, {quoted: info})
break

case 'creditos': //Deixa os meus cr√©ditos mn pufafavorrrü•∫
await loli.sendMessage(from, { react: { text: `‚ù§Ô∏è`, key: info.key }})
await delay(5000)
            menu8 = `
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉZAP: Wa.me/553172595934
‚î£‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉinsta
‚î£‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚î£‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉcanal Yt: https://youtube.com/@sandro_mg1?si=jT0xhaif4brqCWHs
‚î£‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îó‚îÅ‚îÅ‚îÅ„Äî‚ÄºÔ∏è„Äï‚îÅ‚îÅ‚îÅ‚îÅ

Cr√©ditos por criar a base üòÅ‚ù§Ô∏è @sandro

            `            
           await loli.sendMessage(from, {image: fs.readFileSync('./loli/image/menu.jpg'), caption: menu8, contextInfo: {
            externalAdReply: {
            title:"‚ÄºÔ∏èINFO DO CRIADOR ‚ÄºÔ∏è",
            body: "",
            reviewType: "PHOTO", 
            thumbnailUrl: `https://telegra.ph/file/350558660dc20aa7299d6.jpg`,
            sourceUrl: `https://instagram.com/mg_sandro_`, 
            mediaType: 2
            }}})
             
            
            break
            
case 'taon?':
reply(`Sim!!`)
break

case 'enquete':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var enquete = generateWAMessageFromContent(from, proto.Message.fromObject({
"messageContextInfo": {
"messageloli": "QEwFogrlUlBtJgIiRuBYBjXD7VZwmpu/8rGXYb2MuaA="},
"pollCreationMessage": {
"name": "pokemon?",
"options": [
{ "optionName": 'Sim' },
{ "optionName": 'N√£o'}],
"selectableOptionsCount": 2
}}), { userJid: from, quoted: info})
loli.relayMessage(from, enquete.message, { messageId: enquete.key.id })
break

case 'marcar': {
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
if (!isGroup) return reply(msg.grupo)
 let metadata = await loli.groupMetadata(from)
let teks = `Hora de acordar rapaziada...‚ÄºÔ∏è\n‚Ä¢\n`
for (let mem of participants) {
teks += `üí´ @${mem.id.split('@')[0]}\n`
}
loli.sendMessage(from, { text: teks, mentions: participants.map(a => a.id) }, { quoted: info })
}
break

case 'aplaca':{
    if (args.length < 1) return reply(`${prefix}aplaca e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 20) return reply('O texto √© longo, at√© 20 caracteres') //maximo de caracteres
    buffer =(`https://553555.sirv.com/Images/IMG-20231205-WA0153.jpg?text.0.text=${q}%24%7Bq%7D&text.0.position.x=-34%25&text.0.position.y=-4%25&text.0.size=37&text.0.color=f00000`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita*'})
    await loli.sendMessage(from, { react: { text: `ü§©`, key: info.key }})
    }
    reply (`olha seu pv hehe`)
    break
    
case 'criador': case 'criado': //deixa meus cr√©ditos mn.
reply(`‚ï≠‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üôáüèª‚Äç‚ôÄÔ∏è]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïÆ
‚îÉ[‚òÜ]‚ï≠
‚îÉ[‚òÜ]  ‚éô  INFORMA√á√ïES DO CRIADOR
‚îÉ[‚òÜ]‚ï∞
‚ï∞‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üôáüèª‚Äç‚ôÄÔ∏è]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïØ
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚úì
‚îÉ[‚òÜ] -‚û§ Criador: Sandro
‚îÉ[‚òÜ] -‚û§ Canal: SANDRO-BOT
‚îÉ[‚òÜ] -‚û§ [ wa.me/5531972595934]
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚úì
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚úì
‚îÉ[‚òÜ] -‚û§ Prefixo : ${prefix}
‚îÉ[‚òÜ] -‚û§ ${botName}
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚úì`)
break

case 'dono':
reply(`
‚ï≠‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫üëëÔ∏è‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïÆ
‚îÉ[‚òÜ]‚ï≠
‚îÉ[‚òÜ]  ‚éô  INFORMA√á√ïES DO DONO
‚îÉ[‚òÜ]‚ï∞
‚ï∞‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫üëëÔ∏è‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïØ
[Informa√ß√µes do meu dono]

‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚úì
‚îÉnome: ${donoName}
‚îÉn√∫mero: ${donoNumber}
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚úì
`)
break

case 'sla':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var extendedTextMessage = generateWAMessageFromContent(from, proto.Message.fromObject({
"extendedTextMessage": {
"text": ` ‚Ä¢${botName}‚Ä¢ \nhttps://Wa.me/stickerpack/whatsappcuppy`,
"matchedText": `opa`,
"description": "Convite para grupo do WhatsApp",
"title": `${botName}`,
"previewType": "NONE",
"jpegThumbnail": fs.readFileSync('./loli/image/menu.jpg'),
}
}), { userJid: from, quoted: info})
loli.relayMessage(from, extendedTextMessage.message, { messageId: extendedTextMessage.key.id })
break

case 'carrinho':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var orderMessage = generateWAMessageFromContent(from, proto.Message.fromObject({
"orderMessage": {
"orderId": "235714359395213",
"thumbnail": fs.readFileSync('./loli/image/menu.jpg'),
"itemCount": 1000000000000,
"status": "INQUIRY",
"surface": "CATALOG",
"message": `${botName}`,
"orderTitle": "·ö∑ùêíùêÄùêçùêÉùêëùêé·ö∑",
"sellerJid": "558388741307@s.whatsapp.net",
"token": "AR5Wfq0kwTRxgMuziAWteLeROO/rP/3z9fRPpLSb+o8tfA=="
}
}), { userJid: from, quoted: info})
loli.relayMessage(from, orderMessage.message, { messageId: orderMessage.key.id })
break

case 'catalogo':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var catalog = generateWAMessageFromContent(from, proto.Message.fromObject({
"productMessage": {
"product": {
"productImage": messa.imageMessage,
"thumbnail": fs.readFileSync('./loli/image/menu.jpg'),
"productId": " ",
"title": `${botName}`,
"fileLength": "161349999999999",
"description": `sandrk`,
"footerText": ` ‚Ä¢${botName}‚Ä¢ `,
"productImageCount": 1,
"firstImageId": 1,
"retailerId": `¬© Hirox`,
"url": "wa.me/558388741307"
},
"businessOwnerJid": "558388741307@s.whatsapp.net",
}
}), { userJid: from, quoted: info})
loli.relayMessage(from, catalog.message, { messageId: catalog.key.id })
break

case 'loc':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var locationMessage = generateWAMessageFromContent(from, proto.Message.fromObject({
"locationMessage": {
"degreesLatitude": 99,
"degreesLongitude": 99,
"name": " ‚Ä¢ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç‚Ä¢ ",
"jpegThumbnail": messa.imageMessage
}
}), { userJid: from, quoted: info})
loli.relayMessage(from, locationMessage.message, { messageId: locationMessage.key.id })
break

case 'doc':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var documentMessage = generateWAMessageFromContent(from, proto.Message.fromObject({
"documentMessage": {
"url": "https://mmg.whatsapp.net/v/t62.7119-24/29949057_1673439003134136_8717143220188456473_n.enc?ccb=11-4&oh=01_AdQKvXFOKFVqb0bq6t6cD1AT8YA1lUmzCh6BmjRufONBTg&oe=64D30429&mms3=true",
"mimetype": " ",
"title": "üëÄ îï±ùêìùêëùêÄùêïùêÄùêôùêÄùêèùêàîï± üí®.exct",
"fileSha256": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
"pageCount": 999999999,
"index": 0,
"mediaKey": "fcxyCLIN2AubiCHSqdykEzQdvmIYdzZJHGeTz1UoFlY=",
"fileName": "üëÄ îï±ùêìùêëùêÄùêïùêÄùêôùêÄùêèùêàîï± üí®",
"fileEncSha256": "vaEk8nmpa8fera+p5GTdtjaHNw34HrcF+rXLe3tG9/M=",
"directPath": "/v/t62.7119-24/29949057_1673439003134136_8717143220188456473_n.enc?ccb=11-4&oh=01_AdQKvXFOKFVqb0bq6t6cD1AT8YA1lUmzCh6BmjRufONBTg&oe=64D30429",
"mediaKeyTimestamp": "1688964255"
}
}), { userJid: from, quoted: info})
loli.relayMessage(from, documentMessage.message, { messageId: documentMessage.key.id })
break

case 'vcard':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var contactMessage = generateWAMessageFromContent(from, proto.Message.fromObject({
"contactMessage": {
"displayName": " ‚Ä¢ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç‚Ä¢ ",
"vcard": "BEGIN:VCARD\nVERSION:3.0\nN:;;; ‚Ä¢ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç‚Ä¢ ;\nFN: ‚Ä¢ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç‚Ä¢ \nitem1.TEL:553172595934\nitem1.X-ABLabel:Celular\nEND:VCARD"
}}), { userJid: from, quoted: info})
loli.relayMessage(from, contactMessage.message, { messageId: contactMessage.key.id })
break

case 'payment2':
if (!info.key.fromMe && !isCreator && !isBotGroupAdmins) return loli.sendMessage(from, {text: 'somente dono ou adm'})
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./loli/image/menu.jpg') }, { upload: loli.waUploadToServer })
var requestPaymentMessage = generateWAMessageFromContent(from, proto.Message.fromObject({
"requestPaymentMessage": {
"currencyCodeIso4217": "IDR",
"amount1000": "100",
"extendedTextMessage": {
"text": `‚Ä¢ùë∫ùë®ùëµùë´ùëπùë∂-ùë©ùë∂ùëª‚Éüü•Ç‚Ä¢`,
}
}}), { userJid: from, quoted: info})
loli.relayMessage(from, requestPaymentMessage.message, { messageId: requestPaymentMessage.key.id })
break
//==============JOGOS===========\\

case 'nazista1':
if(!isGroup) return reply(msg.grupo)
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
async function nazistaMsg() {
random = `${Math.floor(Math.random() * 110)}`
nazistakjk = random
nazista = random
if(nazista <= 15 ) {var trai = 'hmm, parece q voc√™ n√£o √© nazista'}
else if(nazista == 16 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 17 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 18 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 19 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 20 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 21 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 22 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 23 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 24 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 25 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 26 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 27 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 28 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 29 ) {var nazi = 'tenho minha desconfian√ßa ü§®'}
else if(nazista == 30 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 31 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 32 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 33 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 34 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 35 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 36 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 37 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 38 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 39 ) {var nazi = 'voc√™ √© um pouco nazista üò∂'}
else if(nazista == 40 ) {var nazi = 'ü´£'}
else if(nazista == 41 ) {var nazi = 'ü´£'}
else if(nazista == 42 ) {var nazi = 'ü´£'}
else if(nazista == 43 ) {var nazi = 'ü´£'}
else if(nazista == 44 ) {var nazi = 'ü´£'}
else if(nazista == 45 ) {var nazi = 'ü´£'}
else if(nazista == 46 ) {var nazi = 'ü´£'}
else if(nazista == 47 ) {var nazi = 'ü´£'}
else if(nazista == 48 ) {var nazi = 'ü´£'}
else if(nazista == 49 ) {var nazi = 'ü´£'}
else if(nazista == 50 ) {var nazi = 'ü´£'}
else if(nazista == 51 ) {var nazi = 'ü´£'}
else if(nazista == 52 ) {var nazi = 'ü´£'}
else if(nazista == 53 ) {var nazi = 'ü´£'}
else if(nazista == 54 ) {var nazi = 'ü´£'}
else if(nazista == 55 ) {var nazi = 'ü´£'}
else if(nazista == 56 ) {var nazi = 'ü´£'}
else if(nazista == 57 ) {var nazi = 'ü´£'}
else if(nazista == 58 ) {var nazi = 'ü´£'}
else if(nazista == 59 ) {var nazi = 'ü´£'}
else if(nazista == 60 ) {var nazi = 'üò≥'}
else if(nazista == 61 ) {var nazi = 'üò≥'}
else if(nazista == 62 ) {var nazi = 'üò≥'}
else if(nazista == 63 ) {var nazi = 'üò≥'}
else if(nazista == 64 ) {var nazi = 'üò≥'}
else if(nazista == 65 ) {var nazi = 'üò≥'}
else if(nazista == 66 ) {var nazi = 'üò≥'}
else if(nazista == 67 ) {var nazi = 'üò≥'}     
else if(nazista == 68 ) {var nazi = 'üò≥'}     
else if(nazista == 69 ) {var nazi = 'üò≥'}     
else if(nazista == 70 ) {var nazi = 'üò≥'}    
else if(nazista == 71 ) {var nazi = 'üò≥'}    
else if(nazista == 72 ) {var nazi = 'üò≥'}     
else if(nazista == 73 ) {var nazi = 'üò≥'}     
else if(nazista == 74 ) {var nazi = 'üò≥'}     
else if(nazista == 75 ) {var nazi = 'üò≥'}
else if(nazista == 76 ) {var nazi = 'üò≥'}
else if(nazista == 77 ) {var nazi = 'üò≥'}
else if(nazista == 78 ) {var nazi = 'üò≥'}
else if(nazista == 79 ) {var nazi = 'üò≥'}
else if(nazista == 80 ) {var nazi = 'üò≥'}
else if(nazista == 81 ) {var nazi = 'üò≥'}
else if(nazista == 82 ) {var nazi = 'üò≥'}
else if(nazista == 83 ) {var nazi = 'üò≥'}
else if(nazista == 84 ) {var nazi = 'üò≥'}
else if(nazista >= 85 ) {var nazi = '...'}
var sandrokjk = [
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã0%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã10%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã20%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã30%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã40%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí„Äã50%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí„Äã60%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí„Äã70%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí„Äã80%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí„Äã90%*`,
`*ùöåùöòùöñùöôùöïùöéùöùùöò*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà„Äã100%*`,
`*O quanto voc√™ √© nazista?*\n\n*„Äå @${sender_ou_n.split("@")[0]} „Äçseu n√≠vel de nazista √©: ‚ù∞ ${random}% ‚ù±*\n\n*${nazi}*`
]
let { key } = await loli.sendMessage(from, {text: `*‚ù∞Pesquisando a sua ficha de nazista: „Äå @${sender_ou_n.split("@")[0]} „Äç aguarde...  ‚ù±*`, mentions: [sender_ou_n]}, {quoted: info})
setTimeout(async() => {
for (let i = 0; i < sandrokjk.length; i++) 
await loli.sendMessage(from, {text: sandrokjk[i], mentions: [sender_ou_n], edit: key });
}, 1500)
}
nazistaMsg()
break

case 'chifre':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
await loli.sendMessage(from, { react: { text: `üêÇ`, key: info.key }})
random2 = `${Math.floor(Math.random() * 35)}`
const tamanho2 = random2
if (tamanho2 < 13 ) {pp = 'muito cornoü§ü'} else if (tamanho2 == 13 ) {pp = 'meio cornoüò¨'} else if (tamanho2 == 14 ) {pp = 'muito cornoüò≥'} else if (tamanho2 == 15 ) {pp = 'cuidado com o poste'} else if (tamanho2 == 16 ) {pp = 'vai pegar manga com esse chifre?'} else if (tamanho2 == 17 ) {pp = 'eita poha, levou muita galha emüò≥'} else if (tamanho2 == 18 ) {pp = 'cuidado com os fios de energiaüò≥'} else if (tamanho2 == 19 ) {pp = 'como voc√™ aguenta esse peso todoüò≥'} else if (tamanho2 == 20 ) {pp = 'recorde de maior chifre, parab√©ns'} else if (tamanho2 == 21 ) {pp = 'parab√©ns, belos chifres'} else if (tamanho2 == 22 ) {pp = 'parab√©ns, belos chifres'} else if (tamanho2 == 23 ) {pp = 'parab√©ns, belos chifres'} else if (tamanho2 == 24 ) {pp = 'parab√©ns, belos chifres'} else if (tamanho2 > 25 ) {pp = 'vai construir uma torre com isso?'
}
hasil = `‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™©
‚ï∞‚ïÆ‡•Ç ·çùÕú‚ù•‚Éüüí°ùêëùêÑùêíùêîùêãùêìùêÄùêÉùêé ùêÉùêé ùêÇùêáùêàùêÖùêëùêÑüëÅ‚Éü‡•Ç ·çùÕú‚ù•
‚ï≠‚î§‚û¢‚òÉÔ∏è „Äåùòñùòìùòà: ${pushName}„Äç
‚ï≠‚î§‚û¢ü§ü „Äåùòöùòåùòú ùòäùòèùòêùòçùòôùòå ùòõùòåùòî: ${random2}ùòäùòî
‚ï≠‚î§‚û¢‚úâÔ∏è „Äå${pp}„Äç
‚îÉ‚ï∞‚ïê‚ïê ‚™®
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™®`
reply(hasil)
break

case 'cassino':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (!isGroup) return reply('Voc√™ s√≥ pode jogar em grupos')
 const soto = [
'üçä : üçí : üçê',
'üçí : üîî : üçä',
'üçá : üçá : üçá',
'üçä : üçã : üîî',
'üîî : üçí : üçê',
'üîî : üçí : üçä',
'üçä : üçã : ??',		
'üçê : üçí : üçã',
'üçê : üçê : üçê',
'üçä : üçí : üçí',
'üîî : üîî : üçá',
'üçå : üçí : üîî',
'üçê : üîî : üîî',
'üçä : üçã : üçí',
'üçã : üçã : üçå',
'üîî : üîî : üçá',
'üîî : üçê : üçá',
'üîî : üîî : üîî',
'üçí : üçí : üçí',
'üçå : üçå : üçå'
]		
const mining = Math.ceil(Math.random() * 200) +1
const somtoy2 = exportion[Math.floor(Math.random() * exportion.length)]
if ((somtoy2 == 'ü•ë : ü•ë : ü•ë') ||(somtoy2 == 'üçâ : üçâ : üçâ') ||(somtoy2 == 'üçì : üçì : üçì') ||(somtoy2 == 'üçé : üçé : üçé') ||(somtoy2 == 'üçç : üçç : üçç') ||(somtoy2 == 'ü•ù : ü•ù : ü•ù') ||(somtoy2 == 'üçë : üçë : üçë') ||(somtoy2 == 'ü•• : ü•• : ü••') ||(somtoy2 == 'üçã : üçã : üçã') ||(somtoy2 == 'üçê : ?? : üçê') ||(somtoy2 == 'üçå : üçå : üçå') ||(somtoy2 == 'üçí : üçí : üçí') ||(somtoy2 == 'üîî : üîî : üîî') ||(somtoy2 == 'üçä : üçä : üçä') ||(somtoy2 == 'üçá : üçá : üçá')) {
var Vit√≥ria = `‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞ ‚òÖ ‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞
¬†‚ò≤¬†‚ñ∫  Voc√™ ganhouüîÆ  ‚óÑ‚ò≤
‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞ ‚òÖ ‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞`

} else {
var Vit√≥ria = `‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞ ‚òÖ ‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞
¬†‚ò≤¬†‚ñ∫    Voc√™ perdeu...    ‚óÑ‚ò≤
‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞ ‚òÖ ‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞`
}
	const cassino = `
   Õ°Õú€ú€£€ú‚òÜ ‚ò≤¬†‚ñ∫ ùêÇùêÄùêíùêíùêàùêçùêé ‚óÑ‚ò≤  ‚òÜÕ°Õú€ú€ú€£
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
 Õ°Õú€ú€£€ú‚òÜ ‚ò≤¬†‚ñ∫¬†${somtoy2} ‚óÑ‚ò≤ ‚òÜÕ°Õú€ú€ú€£¬†¬† 
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

*${Vit√≥ria}*`
reply(cassino)
if (Vit√≥ria == `‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞ ‚òÖ ‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞
¬†‚ò≤¬†‚ñ∫   Voc√™ ganhou..üéä   ‚óÑ‚ò≤
‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞ ‚òÖ ‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞`) {

reply('Parab√©ns')
}
await (sender)
break

case 'gay2':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (!isGroup) return reply(msg.grupo)
rate = body.slice(7)
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

zxzz = 
random = `${Math.floor(Math.random() * 110)}`
random2 = `${Math.floor(Math.random() * 110)}`
loli.sendMessage(from, {text: `‚ûÆ Pesquisando a ficha de ${comando} :  @${blamention_id.split("@")[0]}, aguarde...\n\n _Voc√™ √©: ‚ù∞ ${random},${random2}% ‚ù±  ${comando}_ `, mentions: [blamention_id]})
break

case 'gay':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

loli.sendMessage(from, {text: `‚ù∞ Pesquisando a sua ficha de gay : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${gayzin}`)
zxzz = 
random = `${Math.floor(Math.random() * 110)}`
feio = random
boiola = random
if (boiola < 20 ) {var bo = 'hmm... voc√™ √© heteroüòî'} else if (boiola == 21 ) {var bo = '+/- boiola'} else if (boiola == 23 ) {var bo = '+/- boiola'} else if (boiola == 24 ) {var bo = '+/- boiola'} else if (boiola == 25 ) {var bo = '+/- boiola'} else if (boiola == 26 ) {var bo = '+/- boiola'} else if (boiola == 27 ) {var bo = '+/- boiola'} else if (boiola == 2 ) {var bo = '+/- boiola'} else if (boiola == 29 ) {var bo = '+/- boiola'} else if (boiola == 30 ) {var bo = '+/- boiola'} else if (boiola == 31 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 32 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 33 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 34 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 35 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 36 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 37 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 3 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 39 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 40 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 41 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 42 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 43 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 44 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 45 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 46 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 47 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 4 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 49 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 50 ) {var bo = 'voc√™ √© ou n√£o?üßê'} else if (boiola > 51) {var bo = 'voc√™ √© gayüôà'
}
await loli.sendMessage(from, {image: wew, caption: `  O quanto voc√™ √© gay? \n\n „Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± gay üè≥Ô∏è‚Äçüåà\n\n${bo}`, mentions: [blamention_id], thumbnail:null}, {quoted: info})
}, 7000)
break

case "ppt":
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (!isGroup) return reply(msg.grupo)
if (args.length < 1) return reply(`Voc√™ deve digitar ${prefix}ppt pedra, ${prefix}ppt papel ou ${prefix}ppt tesoura`)
ppt = ["pedra", "papel", "tesoura"]
ppy = ppt[Math.floor(Math.random() * ppt.length)]
ppg = Math.floor(Math.random() * 1) + 10
pptb = ppy
if ((pptb == "pedra" && args == "papel") ||
(pptb == "papel" && args == "tesoura") ||
(pptb == "tesoura" && args == "pedra")) {
var vit = "vitoria"
} else if ((pptb == "pedra" && args == "tesoura") ||
(pptb == "papel" && args == "pedra") ||
(pptb == "tesoura" && args == "papel")) {
var vit = "derrota"
} else if ((pptb == "pedra" && args == "pedra") ||
(pptb == "papel" && args == "papel") ||
(pptb == "tesoura" && args == "tesoura")) {
var vit = "empate"
} else if (vit = "undefined") {
return reply(`Voc√™ deve digitar ${prefix}ppt pedra, ${prefix}ppt papel ou ${prefix}ppt tesoura`)
}
if (vit == "vitoria") {
var tes = "Voc√™ ganhou -_-"
}
if (vit == "derrota") {
var tes = "Eu ganhei pobre kkkkkk"
}
if (vit == "empate") {
var tes = "Deu empate üòê"
}
reply(`${botName} jogou: ${pptb}\nO jogador jogou: ${args}\n\n${tes}`)
if (tes == "Vit√≥ria do jogador") {
reply(pph)
}
break

case 'sn':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (!isGroup) return reply(msg.grupo)
const sn = ['sim', 'n√£o']
gosto = body.slice(3)
const jawab = sn[Math.floor(Math.random() * (sn.length))]
hasil = `${gosto}\n\nSegundo meus c√°lculos, eu acredito que... ${jawab}`
reply(hasil)
break

case 'chance':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (!isGroup) return reply(msg.grupo)
rate = body.slice(7)
zxzz = 
random = `${Math.floor(Math.random() * 200)}`
reply(' ‚û• A chance disso que voc√™ falou vai acontecer e de:‚ù∞ '+random+'% ‚ù± ‚úß ')
break

case 'corno': case 'corna':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (!isGroup) return reply(msg.grupo)
rate = body.slice(7)
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

zxzz = 
random = `${Math.floor(Math.random() * 200)}`
random2 = `${Math.floor(Math.random() * 200)}`
loli.sendMessage(from, {text: ` Pesquisando o quanto voc√™ e ${comando} :  @${pushname}},\n\n _Voc√™ √©: ‚ù∞ ${random},${random2}% ‚ù±  ${comando}_ muito corno(a) kkkkkkkküêÇ`, mentions: [blamention_id]})
break

case 'gado':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
loli.sendMessage(from, {text:`‚ù∞ Pesquisando a ficha de gado : @${blamention_id.split("@")[0]}, aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${gadin}`)
random = `${Math.floor(Math.random() * 110)}`
await loli.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© gado? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù±  gado(a) üêÇ`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

case 'nazista':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
loli.sendMessage(from, {text: ` ‚ù∞ Pesquisando a sua ficha de nazista : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${hitle}`)
random = `${Math.floor(Math.random() * 110)}`
await loli.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© nazista? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù±  nazista Âçê`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

//========FIM DOS CMD JOGOS=========\\

case 'metadinha':{
                await loli.sendMessage(from, { react: { text: `‚úÖ`, key: info.key }})
                let anu = await axios.get(`https://tohsaka.onrender.com/api/ferramenta/metadinha?apikey=Dkp2ubeJP6`)
                loli.sendMessage(sender, {image: {url: anu.data.masculina}, caption: `ùë¥ùë®ùë∫ùë™ùëºùë≥ùë∞ùëµùë∂`})
                loli.sendMessage(sender, {image: {url: anu.data.feminina}, caption: `ùë≠ùë¨ùë¥ùë∞ùëµùë∞ùëµùë∂`})
                reply(`a metadinha esta sendo enviado no seu privado...`)
                }
                break
case 'calculadora':
case 'calcular':  
case 'calc':
rsp = q.replace("x", "*").replace('"', ":").replace(new RegExp("[()abcdefghijklmnopqrstwuvxyz]", "gi"), "").replace("√∑", "/")
return reply(JSON.stringify(eval(rsp, null,'\t')))
break

case 'figurinhas':
                if(!Number(q)) return reply(`Digite a quantidade de figurinhas\nExemplo: ${prefix+command} 7`)
                if(q >= 100) return reply("Coloque abaixo de 100...")
                if (isGroup) reply(`As figurinhas est√£o sendo enviadas em seu pv olha laüòÅ.`)
                async function figuss() {
                var rnd = Math.floor(Math.random() * 8051)
                loli.sendMessage(sender, { sticker: { url: `https://raw.githubusercontent.com/badDevelopper/Testfigu/main/fig (${rnd}).webp` } })}
                for (i = 0; i < q; i++) {
                await sleep(680)
                figuss()
                }
                break

case "perfil":
if (!isGroup) return reply(msg.grupo)
const migi = `${Math.floor(Math.random() * 105)}`
const russo = `${Math.floor(Math.random() * 105)}`
const valor = `${Math.floor(Math.random() * 5000)}`
{loli.sendMessage(
from, {audio: fs.readFileSync('./loli/audio/perfil.mp3'), mimetype: 'audio/mp4', ptt: true 
},
{quoted: info}
)
}
var conselho = palavras[Math.floor(Math.random() * palavras.length)]
try {
ppimg = await loli.profilePictureUrl(`${sender.split("@")[0]}@c.us`, "image")
} catch(e) {
ppimg = logo
}
perfil = await getBuffer(ppimg)
await delay(4000)
try {
loli.sendMessage(from, {
image: perfil,
caption: `
*Nome: ${pushname}

*N√∫mero: ${sender.split("@")[0]}*

*Grupo: ${groupName}*

*üêÇNivel de gado: ${migi}%*

*üòàn√≠vel de puta: ${russo}%*

*üíµvalor do programa: ${valor}$*

*concelho* ${conselho}
`
}, {quoted: info})
} catch(e) {
console.log(e)
reply(resposta.erro)
}
break

case 'onlines':  //case by: ·¨äÕ°Õúùë©ùë∞ùë¨ùë≥ùíÅùë∞ùëµùëØùë∂.ùë¨ùëøùë¨·µí·∂†·∂ú
if (!isGroup) return reply(enviar.msg.grupo)
if (!isCreator && !isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.Badmin)
let ido = args && /\d+\-\d+@g.us/.test(args[0]) ? args[0] : from
let online = [...Object.keys(store.presences[ido]), loli.user.id]
loli.sendMessage(from, {text: 'Pessoas online do gp:\n\n' + online.map(v => '‚Ä¢ @' + v.replace(/@.+/, '')).join`\n`}, {quoted: info})
break

case 'report':
case 'bug':
if (!q) return reply('Exemplo: /report bug no menu 18... por favor fale o nome so comando que esta com bugs, obrigado.')
reply(`${pushname} Obrigado pela colabora√ß√£o, o bug foi reportado ao meu criador...

<‚ô®Ô∏è>bugs falsos nao ser√£o respondidos`)
let templateMesssage = {
image: {url: './loli/image/menu.jpg',
quoted: info},
caption: `‚ô®Ô∏èùó®ùó∫ ùóïùòÇùó¥‚ô®Ô∏è\nDo N√∫mero: @${sender.split('@')[0]},\nReportou:\n${q}`,
footer: 'Noelle_md'
}
loli.sendMessage("553172595934@s.whatsapp.net",templateMesssage)
break

case 'novocmd':
if (!q) return reply('Exemplo: /novocmd coloca antilink ou a case do novo cmd que quer que adicione no bot.')
reply(`${pushname} Obrigado pela colabora√ß√£o, a sua idea foi reportada ao meu criador.üòä`)
const qp = args.join(" ")
let templateMessage = {
image: {url: './loli/image/menu.jpg',
quoted: info},
caption: `‚ô®Ô∏èIDEIA DE CMD‚ô®Ô∏è\nDo N√∫mero: @${sender.split('@')[0]},\nA Ideia √â:\n ${q}`,
footer: 'Noelle_md'
}
loli.sendMessage("553172595934@s.whatsapp.net",templateMessage)
break

case 'teste':
if(!isCreator) return reply(msg.dono)
reply(`Seila bla bla bla`)
break

case 'teste2':
if(!isPremium) return reply(msg.premium)
reply(`Teste bla bla bla`)
break


case 'sermembro':
if (!isCreator) return reply(msg.dono)
reply(`Agora vc n√£o √© mais adm do grupo.`)
kicee = sender
await loli.groupParticipantsUpdate(from, [kicee], 'demote')
break

case 'grupoinfo':
case 'infogrupo':
case 'infogp':  
case 'gpinfo':  
case 'regras':  
if (!isGroup) return reply(msg.grupo)
if(!isGroupAdmins)return reply(msg.adm)
ppUrl = await loli.profilePictureUrl(from, 'image')
buffer = await getBuffer(ppUrl)
const metadata = await loli.groupMetadata(from) 
loli.sendMessage(from, {image: buffer, caption: `*NOME* : ${groupName}\n*MEMBRO* : ${groupMembers.length}\n*ADMIN* : ${groupAdmins.length}\n*DESCRI√á√ÉO* : ${metadata.desc}`, thumbnail: null}, {quoted: info})
break 

case 'toimg':
if (!isQuotedSticker) return reply('Marca uma Figurinha!!')
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
try {
loli.sendMessage(from, {image: buff}, {quoted: info})
} catch(e) {
console.log(e)
reply('erro...')
}
break

case 'travatxt':
if (!q) return reply(`cade o numero do meliante?`)
reply(`Acabei de mandar No pv dele kkkk`)
loli.sendMessage(`${q}@s.whatsapp.net`, {text: trava1})
break

case 'ping': {
reagir(from, "üèÉüèª")
await sleep(1000)
r = (Date.now() / 1000) - info.messageTimestamp
uptime = process.uptime()
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
respon = `‚è±Ô∏è *Velocidade de Resposta:* ${String(r.toFixed(3))} _segundos._\nü§ñ *O bot se encontra online por:* ${kyun(uptime)}\nüíª *Sistema Operacional:* ${infoSystem.type()}\nüìÇ *Vers√£o:* ${infoSystem.release()}\nüíæ *Memoria RAM total:* ${(infoSystem.totalmem()/Math.pow(1024, 3)).toFixed(2)}GB\nüíæ *Memoria RAM dispon√≠vel:* ${(infoSystem.freemem()/Math.pow(1024, 3)).toFixed(2)}GB`.trim()
await loli.sendMessage(from, { image: { url: `https://eruakorl.sirv.com/Bot%20dudinha/ping.jpeg?text.0.text=VELOCIDADE%20DO%20BOT&text.0.position.gravity=north&text.0.position.y=15%25&text.0.size=40&text.0.font.family=Teko&text.0.font.weight=800&text.0.background.opacity=100&text.0.outline.blur=100&text.1.text=${String(r.toFixed(3))}&text.1.position.gravity=center&text.1.size=30&text.1.color=ffffff&text.1.font.family=Teko&text.1.font.weight=800&text.1.background.opacity=100&text.1.outline.blur=100` }, caption: respon, mentions: [sender]}, {quoted: info}) 
}
break                 

case 'listafake':
if(!isGroup) return reply(mess.only.group)
if (!isBotAdmins) return reply(msg.botadm)
if(!isGroupAdmins) return reply(mess.only.admin)
teks = 'ùóôùóîùóûùóòùó¶ ùó°ùó¢ ùóöùó•ùó®ùó£ùó¢  \n'
men = []
for(let mem of groupMembers) {
    if(!mem.id.startsWith(55)) {
teks += `‚û§ @${mem.id.split('@')[0]}\n`
men.push(mem.id)
    }
}
if(teks.indexOf('‚û§') < 0) return reply(' ùó°ùó≤ùóªùóµùòÇùó∫ ùóôùóÆùóπùòÄùóº ùóóùó≤ùòÅùó≤ùó∞ùòÅ??ùó±ùóº')
loli.sendMessage(from, {text: teks, mentions: men})
break

case 'listabr':
if(!isGroup) return reply(mag.grupo)
if (!isBotAdmins) return reply(msg.botadm)
if(!isGroupAdmins) return reply(mag.adm)
teks = 'ùóïùó•ùóîSùóúùóüùóòùóúùó•ùó¢ùó¶ ùó°ùó¢ ùóöùó•ùó®ùó£ùó¢ \n'
men = []
for(let mem of groupMembers) {
    if(mem.id.startsWith(55)) {
teks += `‚û§ @${mem.id.split('@')[0]}\n`
men.push(mem.id)
    }
}
if(teks.indexOf('‚û§') < 0) return reply('üáßüá∑ *NENHUM N√öMERO BR FOI ENCONTRADO* üáßüá∑')
loli.sendMessage(from, {text: teks, mentions: men})
break

case 'banfake':
{
if (!isGroupAdmins && !isCreator) return reply(msg.adm)
if (!isBotAdmins) return reply(msg.botadm)
if(!isGroup) return reply(mag.grupo)
array_fake = [];
for(let a of groupMembers) {
if(!a.id.startsWith("55") && a.id !== numeroBot && a.admin === null) {
array_fake.push(a.id)
}
}
if(array_fake.length === 0) return reply("Nenhum n√∫mero fake encontrado no grupo")
for(let a of array_fake) {
await sleep(100)
loli.groupParticipantsUpdate(from, [a], 'remove')
}
teks = `${array_fake.length} n√∫meros fake removido do grupo`
loli.sendMessage(from, {text: teks, mentions: array_fake})
}
break

case 'banbrs': case 'banbr':
{
if (!isGroupAdmins && !isCreator) return reply(msg.adm)
if (!isBotAdmins) return reply(msg.botadm)
if(!isGroup) return reply(mag.grupo)
array_fake = [];
for(let a of groupMembers) {
if(!a.id.startsWith("258") && a.id !== numeroBot && a.admin === null) {
array_fake.push(a.id)
}
}
if(array_fake.length === 0) return reply("Nenhum n√∫mero fake encontrado no grupo")
for(let a of array_fake) {
await sleep(100)
loli.groupParticipantsUpdate(from, [a], 'remove')
}
teks = `${array_fake.length} n√∫meros Brs foi removido do grupo`
loli.sendMessage(from, {text: teks, mentions: array_fake})
}
break

case 'antisticker':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiSticker) return reply('[1 para ativar, 0 para desativar]')
antisticker.push(from)
fs.writeFileSync('./arquivos/antis/antisticker.json', JSON.stringify(antisticker))
reply('Ativou com sucesso o recurso de anti sticker neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiSticker) return reply('Ja esta Desativado.')
antisticker.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antisticker.json', JSON.stringify(antisticker))
reply('Desativou com sucesso o recurso de anti sticker neste grupo‚úîÔ∏è')
} else {
reply('[1 para ativar, 0 para desativar]')
}
break

 case 'fazernick':{ // BY ALIZINDEV //by: ALIZINDEV 
if (!q) return reply(`Exemple\n${prefix+command} AlizinDev`)
let lizink_res = await fetchJson(`https://alizindev-api.onrender.com/api/tools/styletext?text=${q}&apikey=a93e85c1`)
let lizinn = lizink_res.resultado
let alizinnk =`*NICKS*\n\n`
for (let x of lizinn){
alizinnk +=`RESULTADO : ${x.result}\n\n`
}
reply(alizinnk)
}
break

case 'listaadmins': case 'listaadm': // BY ALIZINDEV BY ALIZIN DEV 
if (!isGroup) return reply('_so em grupos..._')
teks = `Lista de administradores do grupo *${groupMetadata.subject}*\nTotal : ${groupAdmins.length}\n\n`
no = 0
for (let admon of groupAdmins) {
no += 1
teks += `[${no.toString()}] @${admon.split('@')[0]}\n`
}
mentions(teks, groupAdmins, true)
break

case 'antidoc':
if (!isGroup) return reply(msg.grupo)
if (!isBotGroupAdmins) return reply(msg.botadm)
try {														 
if (args.length < 1) return reply('1 pra ativar, 0 pra desligar')
if (Number(args[0]) === 1) {
antidoc.push(from)
fs.writeFileSync('./arquivos/antis/antidoc.json', JSON.stringify(antidoc))
reply('Ativou com sucesso o recurso de anti documento neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
antidoc.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antidoc.json', JSON.stringify(antidoc))
reply('Desativou com sucesso o recurso de antidocumento neste grupo‚úîÔ∏è')
 } else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Deu erro, tente novamente :/')
}
break

case 'antivideo':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
if (args.length < 1) return reply('[1 para ativar, 0 para desativar]')
if (Number(args[0]) === 1) {
if (isAntiVid) return reply('Ja esta ativo')
antivid.push(from)
fs.writeFileSync('./arquivos/antis/antivideo.json', JSON.stringify(antivid))
reply('Ativou com sucesso o recurso de anti video neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiVid) return reply('Ja esta Desativado')
antivid.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antivideo.json', JSON.stringify(antivid))
reply('Desativou com sucesso o recurso de anti video neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'gostoso':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
loli.sendMessage(from, {text:` ‚ù∞ Pesquisando a sua ficha de gostoso : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${gostosin}`)
random = `${Math.floor(Math.random() * 110)}`
await loli.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© gostoso? üòè\n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± gostoso ??`, gifPlayback: true, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

case 'gostosa':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
loli.sendMessage(from, {text:`‚ù∞ Pesquisando a sua ficha de gostosa : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${gostosinha}`)
random = `${Math.floor(Math.random() * 110)}`
await loli.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© gostosa? üòè\n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± gostosa üò≥`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break

case 'tapa':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer d√° o tapa')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ Acabou de da um tapa na raba daüòè @${mentioned[0].split('@')[0]} üî•` 
jrq = await getBuffer(`${tapinha}`)
await loli.sendMessage(from, {video: jrq, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'beijo':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('Marque algu√©m que vc quer da um beijo')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ deu um beijo gostoso na(o) @${mentioned[0].split('@')[0]} üòÅüëâüëà‚ù§` 
wew = await getBuffer(`${beijin}`)
await loli.sendMessage(from, {video: wew, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'feio':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

loli.sendMessage(from, {text: `Pesquisando a sua ficha de feio : @${blamention_id.split("@")[0]} aguarde...`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${fein}`)
random = `${Math.floor(Math.random() * 110)}`
feio = random
if (feio < 20 ) {var bo = '√â n√£o √© feio'} else if (feio == 21 ) {var bo = '+/- feio'} else if (feio == 23 ) {var bo = '+/- feio'} else if (feio == 24 ) {var bo = '+/- feio'} else if (feio == 25 ) {var bo = '+/- feio'} else if (feio == 26 ) {var bo = '+/- feio'} else if (feio == 27 ) {var bo = '+/- feio'} else if (feio == 2 ) {var bo = '+/- feio'} else if (feio == 29 ) {var bo = '+/- feio'} else if (feio == 30 ) {var bo = '+/- feio'} else if (feio == 31 ) {var bo = 'Ainda t√° na m√©dia'} else if (feio == 32 ) {var bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 33 ) {var bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 34 ) {var bo = '√â fein, mas tem baum cora√ß√£o'} else if (feio == 35 ) {var bo = 'T√° na m√©dia, mas n√£o deixa de ser feii'} else if (feio == 36 ) {var bo = 'Bonitin mas √© feio com orgulho'} else if (feio == 37 ) {var bo = 'Feio e pregui√ßoso(a), vai se arrumar praga feia'} else if (feio == 3 ) {var bo = 'tenho '} else if (feio == 39 ) {var bo = 'Feio, mas um banho E se arrumar, deve resolver'} else if (feio == 40 ) {var bo = 'FeiN,  mas n√£o existe gente feia, existe gente que n√£o conhece os produtos jequity'} else if (feio == 41 ) {var bo = 'voc√™ √© Feio, mas √© legal, continue assim'} else if (feio == 42 ) {var bo = 'Nada que uma maquiagem e se arrumar, que n√£o resolva ü•¥'} else if (feio == 43 ) {var bo = 'Feio que d√≥i de ver, compra uma m√°scara que melhora'} else if (feio == 44 ) {var bo = 'Feio mas nada que um saco na cabe√ßa n√£o resolva n√©!?'} else if (feio == 45 ) {var bo = 'voc√™ √© feio, mas tem bom gosto'} else if (feio == 46 ) {var bo = 'Feio mas tem muitos amigos'} else if (feio == 47 ) {var bo = 'Feio mas tem l√°bia pra pegar v√°rias novinha'} else if (feio == 4 ) {var bo = 'Feio e ainda n√£o sabe se vestir, vixi'} else if (feio == 49 ) {var bo = 'Feiooo'} else if (feio == 50 ) {var bo = 'voc√™ √© Feio, mas n√£o se encherga üßê'} else if (feio > 51) {var bo = 'voc√™ √© Feio demais üôà'} 

await loli.sendMessage(from, {image: wew, caption: `  O quanto voc√™ √© feio? \n\n „Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± feio üôâ\n\n${bo}`, mentions: [blamention_id], thumbnail:null}, {quoted: info})
}, 7000)
break

case 'figuraiva':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (!q) return reply("Insira a quantidade de figurinhas que deseja que eu envie!")
if (!Number(args[0]) || Number(q.trim()) > 10) return reply("Digite a quantidade de figurinhas que deseja que eu envie.. n√£o pode mais de 10..")
reply('as figurinhas est√£o sendo enviadas no seu pv')
async function eitamundorm() {
loli.sendMessage(sender, { sticker: { url: `http://kayserapis.tech:4197/sticker/figu_raiva?apikey=`+API_KEY_SHADOW } })}
for (i = 0; i < q; i++) {
await sleep(680)
eitamundorm()
}
break

case 'casar':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer d√° o tapa')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Parabens, Agora Voce Pegou Pris√£o Perp√©tua, Digo, se Casou Com @${mentioned[0].split('@')[0]}` 
jrq = await getBuffer(`${casalzin}`)
await loli.sendMessage(from, {video: jrq, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'dan√ßa': case 'dan√ßar':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque a Pessoa Que Voc√™ Quer Dan√ßar ')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voce e o(a) @${mentioned[0].split('@')[0]} Est√£o Dan√ßando pra o Tiktok?` 
jrq = await getBuffer(`${dancinha}`)
await loli.sendMessage(from, {video: jrq, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'soco':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer d√° o tapa')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `@${mentioned[0].split('@')[0]} Voc√™ Recebeu um Soc√£o` 
jrq = await getBuffer(`${soquin}`)
await loli.sendMessage(from, {video: jrq, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'chute':
case 'chutar':  
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  

if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer d√° um chute')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ Acabou de da um chute em @${mentioned[0].split('@')[0]} ü§°` 
jry = await getBuffer(`${chutin}`)
await loli.sendMessage(from, {video: jry, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break 

case 'bebado':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
loli.sendMessage(from, {text:`‚ù∞ Pesquisando a ficha de bebado : @${blamention_id.split("@")[0]} , aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${bebin}`)
random = `${Math.floor(Math.random() * 110)}`
await loli.sendMessage(from, {image: wew, caption:`O quanto voc√™ √© bebado? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± B√™bado ü§¢ü•µü•¥`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break

case 'vesgo':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
loli.sendMessage(from, {text:`‚ù∞ Pesquisando a ficha de vesgo : @${blamention_id.split("@")[0]}, aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${vesgin}`)
random = `${Math.floor(Math.random() * 110)}`
await loli.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© vesgo? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù±  Vesgo üôÑüòÜ`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

case 'matar':
case 'mata':  
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer matar')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ Acabou de matar o(a) @${mentioned[0].split('@')[0]} üòàüëπ` 
jrpp = await getBuffer(`${matei}`)
await loli.sendMessage(from, {video: jrpp, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'casal':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
audiomenu = await fs.readFileSync("./loli/audio/shipo.mp3")
loli.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mpeg', ptt:true}, {quoted: info})
membr = []
const suamae11 = groupMembers
const suamae21 = groupMembers
const teupai11 = suamae11[Math.floor(Math.random() * suamae11.length)]
const teupai21 = suamae21[Math.floor(Math.random() * suamae21.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shipted = shipted1[Math.floor(Math.random() * shipted1.length)]
jet = `*Hmmm.... Eu Shipo eles 2üíòüíò*\n\n1= @${teupai11.id.split('@')[0]}\ne esse\n2= @${teupai21.id.split('@')[0]}\ncom uma porcentagem de: ${shipted}`
membr.push(teupai11.id)
membr.push(teupai21.id)
mentions(jet, membr, true)
break

case 'shipo':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
teks = args.join(" ")
if(teks.length < 10) return reply('Marque uma pessoa do grupo para encontrar o par dela')
membrr = []
const suamae111 = groupMembers
const suamae211 = groupMembers
const teupai111 = suamae111[Math.floor(Math.random() * suamae111.length)]
const teupai211 = suamae211[Math.floor(Math.random() * suamae211.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shiptedd = shipted1[Math.floor(Math.random() * shipted1.length)]
jet = `*Hmmm.... Eu Shipo eles 2üíòüíò*\n\n1 = @${teupai111.id.split('@')[0]}\n && 2 = ${teks} com uma porcentagem de: ${shiptedd}`
membrr.push(teupai111.id)
membrr.push(teupai211.id)
mentions(jet, membrr, true)
break

case 'idgp':
reply(`${from}`)
break

case 'a1':
loli.sendMessage(from, {
audio: fs.readFileSync('./arquivos/musica/a1.mp3'),
mimetype: 'audio/mp4'
},
{quoted: info
})
break

case 'a2':
loli.sendMessage(from, {
audio: fs.readFileSync('./arquivos/musica/a2.mp3'),
mimetype: 'audio/mp4'
},
{quoted: info
})
break

case 'a3':
loli.sendMessage(from, {
audio: fs.readFileSync('./arquivos/musica/a3.mp3'),
mimetype: 'audio/mp4'
},
{quoted: info
})
break

case 'chatgpt':
loli.sendMessage(from, { react: { text: `üîé`, key: info.key }})
  if (args.length < 1) return reply('Por favor, forne√ßa uma pergunta para que eu possa ajudar.');
  try {
   await init("ewjdIX2ym7dVOwfL_4dBWYDKwWlUXyLO9sys-YAhxUOgUvn4GhXg5VDe3842vv6TC0-uEA.");
    const response = await askAI(q);
    await loli.sendMessage(from, { text: response }, { quoted: info });
  } catch (error) { console.error(error);
    await loli.sendMessage(from, { text: resposta.erro }, { quoted: info });
  }
  break;

case 'japonesa':
try {
loli.sendMessage(from, {image: {url: `https://aemt.me/japan`}}, {quoted: info}).catch(() => {
return reply('erro...')
})
await sleep(600)
loli.sendMessage(from, {text: 'MANDANDO...'}, {quoted: info});
} catch {
reply('A API CAIU')
}
break

case 'a4':
loli.sendMessage(from, {
audio: fs.readFileSync('./arquivos/musica/a4.mp3'),
mimetype: 'audio/mp4'
},
{quoted: info
})
break

case 'suruba':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply(msg.grupo)
if(!isModobn) return reply(`Este comando so pode ser utilizado com o comando ${prefix}modo-gamer 1 ativado, para desativar s√≥ basta utilizar ${prefix}modo-gamer 0`)
const quantidadeSafados = args.join(' ')
if(!quantidadeSafados) return reply(`Informe por favor a quantidade de pessoas voc√™ deseja em sua suruba... *Exemplo:* ${prefix+command} 4`)
emojiskk = ["ü•µ", "üòà", "ü´£", "üòè"]
emojis = emojiskk[Math.floor(Math.random() * emojiskk.length)]  
frasekk = [`t√° querendo rela√ß√µes sexuais a ${quantidadeSafados}, topa?`, `quer que *${quantidadeSafados}* pessoas venham de *chicote, algema e corda de alpinista*.`, `quer que ${quantidadeSafados} pessoas der tapa na cara, lhe chame de cachorra e fud3r bem gostosinho...`]
context = frasekk[Math.floor(Math.random() * frasekk.length)]  
ABC = `${prefix} @${sender.split('@')[0]} ${context}\n\n`
for (var i = 0; i < quantidadeSafados; i++) {
ABC += `@${somembros[Math.floor(Math.random() * somembros.length)].split("@")[0]}\n`
}
mencionarIMG(ABC, suruba);
break;

case 'addpremium': case 'addvip':
if (!isCreator) loli.sendMessage(from, ndono2, sticker)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return 
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
premium.push(`${mentioned}`)
fs.writeFileSync('./Premiums/usuarios/premium.json', JSON.stringify(premium))
susp = `üëë@${mentioned[0].split('@')[0]} foi adicionado √† lista de usu√°rios premium com sucessoüëë`
mentions(`${susp}`, mentioned, true)   
break 

case 'serprem': case 'servip':
if (!isCreator) return reply(msg.dono)
premium.push(`${donoNumber}@s.whatsapp.net`)
fs.writeFileSync('./Premiums/usuarios/premium.json', JSON.stringify(premium))
reply(`Pronto ${donoNumber} voc√™ foi adicionado na lista premium.`)
break

case 'modobrincadeiras':  
case 'modobrincadeiras':  
case 'Modobrincadeira':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isModobn) return reply('o modobrincadeira j√° est√° ativo')
modobn.push(from)
fs.writeFileSync('./arquivos/grupos/brincadeiras.json', JSON.stringify(modobn))
reply(`\`\`\`‚úìAtivado com sucesso o modobrincadeiras no grupo\`\`\` *${groupMetadata.subject}*`)
} else if (Number(args[0]) === 0) {
if (!isModobn) return reply('o modobrincadeira j√° est√° Desativado')  
modobn.splice(from, 1)
fs.writeFileSync('./arquivos/grupos/brincadeiras.json', JSON.stringify(modobn))
reply(`\`\`\`‚úìModo brincadeiras desativado com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
} else {
reply('1 para ativar, 0 para desligar')
}
break 

case 'delpremium': case 'delvip':
if (!isGroup) return reply(msg.grupo)
if (!isCreator) return  reply(msg.dono)
if (!budy.includes("@55")) {
num = info.message.extendedTextMessage.contextInfo.participant
bla = premium.includes(num)
if(!bla) return reply("_Este n√∫mero n√£o est√° incluso na lista premium.._")  
pesquisar = num
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./Premiums/usuarios/premium.json', JSON.stringify(premium))
loli.sendMessage(from, {text: ` ${num.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: info})
} else {
mentioned = args.join(" ").replace("@", "") + "@s.whatsapp.net"
bla = premium.includes(mentioned)
if(!bla) return reply("_Este n√∫mero n√£o est√° incluso na lista premium.._")  
pesquisar = mentioned
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./Premiums/usuarios/premium.json', JSON.stringify(premium))
loli.sendMessage(from, {text: ` @${mentioned.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: info})
}
break

case 'listavip': case 'listaprem':
if(!isCreator) return reply(msg.dono)   
if(!isPremium) return reply(msg.premium)   
tkks = '‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ*„Äå _PREMIUM USERüëë_ „Äç\n'
for (let V of premium) {
tkks += `‚îÇ+  @${V.split('@')[0]}\n`
}
tkks += `‚îÇ+ Total : ${premium.length}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*„Äå _${botName}_ „Äç*‚îÄ‚îÄ‚îÄ‚îÄ`
reply(tkks.trim())
break

case 'sorteio':
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')
try{
if(!isGroup) return reply(msg.grupo)
if(!q) return reply(`Coloque algo, ap√≥s o comando sorteio, por exemplo, ${prefix}sorteio de 100 R$`)
d = []
teks = `
‚ùØ  ‚ùí„Äé${botName}„Äè‚ùí  ‚ùÆ


‚ïë‚ùØ         „Äò SORTEIO ALEAT√ìRIO „Äô


‚î†‚ùØ ‚ùí  Voc√™ Foi o Premiado 
‚î†‚ùØ ‚ùí  Pr√™mio: ${q}
‚î†‚ùØ ‚ùí  Doador: ${pushname}\n`
for(i = 0; i < 1; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `‚î†‚ùØ ‚ùí  @${groupMembers[r].id.split('@')[0]}\n\n\n‚ïë‚ùØ         „Äò MOTIVACIONAL „Äô\n\n\n${enviarmen}`
d.push(groupMembers[r].id)
}
mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'ytmp4':
if (!q) return reply ("Cad√™ o link?")
if (!q.includes("youtu")) return reply("ouu Apenas Link do Youtube!")
try {
reply("Certo, Irei Baixar o Seu V√≠deo")
fetchJson(`https://tohsaka.onrender.com/api/dl/ytmp4?link=${q}&apikey=tohsaka`).then( async ({ resultado: pVid }) => {
loli.sendMessage(from, { video: { url: pVid.link},caption:`
${botName}

‚ùØ T√≠tulo: ${pVid.t√≠tulo}
‚ùØ Canal: ${pVid.canal}
‚ùØ Publicado: ${pVid.publicado}
‚ùØ Visualiza√ß√µes: ${pVid.visualiza√ß√µes}
‚ùØ Link: ${args[0]}
` },{ quoted: info }) })
} catch(e) {
reply("Puts, deu erro.")
console.log(e)
}
break

case 'dar':
if(!isGroup) return reply(msg.grupo)
if(!menc_os2 || menc_jid2[1]) return reply('marque a pessoa que voc√™ quer dar, a mensagem ou o @')
loli.sendMessage(from, {video: {url: "https://telegra.ph/file/8d6c8af967fad0fe77ba8.mp4"}, gifPlayback: true, caption: `Voc√™ deu com vontade na @${menc_os2.split('@')[0]} ela(e)  ate gozo` , mentions: [menc_os2]}, {quoted: info})
break

case 'antilink':
if (!isBotAdmins) return reply(msg.botadm)
if (!isGroupAdmins) return reply(msg.adm)
if (!info.key.fromMe && !isCreator) return reply(msg.botadm)
					if (args.length < 1) return reply('digite 1 para ativar ou 0 para desativar ')
					if (Number(args[0]) === 1) {
						if (isAntiLink) return reply('o anti-link est√° ativo')
						antilink.push(from)
						fs.writeFileSync('./loli/seguranca/antilink.json', JSON.stringify(antilink))
						reply('O anti-link foi ativo no grupo ‚úîÔ∏è')
					} else if (Number(args[0]) === 0) {			
						antilink.splice(from, 1)
						fs.writeFileSync('./loli/seguranca/antilink.json', JSON.stringify(antilink))
						reply('O anti-link foi desativado com sucesso neste grupo‚úîÔ∏è')
					} else {
						reply('1 para ativar, 0 para desativar ')
					}
					break
					
case 'admshide': case 'listaadm': case 'adms':
if (!isGroup) return reply(msg.grupo)
ytb = `Lista dos admins do grupo *${groupMetadata.subject}*\nTotal : ${groupAdmins.length}\n\n`
no = 0
for (let admon of groupAdmins) {
no += 1
ytb += `[${no.toString()}] @${admon.split('@')[0]}\n`
}
mentions(ytb, groupAdmins, true)
break

case 'alma-gemeas':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
membr = []
const suamae121 = groupMembers
const suamae251 = groupMembers
const teupai117 = suamae121[Math.floor(Math.random() * suamae121.length)]
const teupai251 = suamae251[Math.floor(Math.random() * suamae251.length)]
var shipted11 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shipteddd = shipted11[Math.floor(Math.random() * shipted11.length)]
jet = `*Hmmm....  alma-gemeas eles 2 üíòüíò*\n\n1= @${teupai117.id.split('@')[0]}\ne esse\n2= @${teupai251.id.split('@')[0]}\ncom uma porcentagem de: ${shipteddd}`
membr.push(teupai117.id)
membr.push(teupai251.id)
mentions(jet, membr, true)
break

case 'dado': 
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
					kapankah = body.slice(1)
					const elu =['Caiu‚öÄ','Caiu‚öÅ','Caiu‚öÇ','Caiu‚öÉ','Caiu‚öÑ','Caiu‚öÖ']
					const ule = elu[Math.floor(Math.random() * elu.length)]
					loli.sendMessage(from, ule, text, { quoted: info })
					break

case 'autoreact':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
if (Number(args[0]) === 1) {
if (isAutoReact) return reply('J√° est√° ativado')
autoreact.push(from)
fs.writeFileSync('./arquivos/fun√ß√µes/autoreact.json', JSON.stringify(autoreact))
reply('[ü©∏] Ativou com sucesso o recurso de auto rea√ß√£o neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAutoReact) return reply('J√° est√° desativado')
pesquisar = from
processo = autoreact.indexOf(pesquisar)
while(processo >= 0){
autoreact.splice(processo, 1)
processo = autoreact.indexOf(pesquisar)
}
fs.writeFileSync('./arquivos/fun√ß√µes/autoreact.json', JSON.stringify(autoreact))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de auto rea√ß√£o neste grupo‚úîÔ∏è')
}
break

case 'antiloc':
if (!isGroup) return reply(`SOMENTE EM GRUPOS`)
if (!isGroupAdmins) return reply(`PRECISA SER ADMIN`)
if (!isBotGroupAdmins) return reply(` O BOT PRECISA SER ADMIN`)
try {		 
if (args.length < 1) return reply('1 pra ativar, 0 pra desligar')
if (Number(args[0]) === 1) {
if(Antiloc) return reply('J√° est√° Ativo.')
antiloc.push(from)
fs.writeFileSync('./arquivos/antis/antiloc.json', JSON.stringify(antiloc))
reply('Ativou com sucesso o recurso de anti loc neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if(!Antiloc) return reply('J√° est√° Desativado.')
antiloc.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antiloc.json', JSON.stringify(antiloc))
reply('Desativou com sucesso o recurso de anti loc neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Deu erro, tente novamente :/')
}
break

case 'anticatalg': case 'anticatalago':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
if (Number(args[0]) === 1) {
if (isAnticatalogo) return reply('Ja esta ativo')
anticatalogo.push(from)
fs.writeFileSync('./arquivos/antis/anticatalogo.json', JSON.stringify(anticatalogo))
reply('[ü©∏] Ativou com sucesso o recurso de anticatalogo neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAnticatalogo) return reply('Ja esta Desativado')
pesquisar = from
processo = anticatalogo.indexOf(pesquisar)
while(processo >= 0){
anticatalogo.splice(processo, 1)
processo = anticatalogo.indexOf(pesquisar)
}
fs.writeFileSync('./arquivos/antis/anticatalogo.json', JSON.stringify(anticatalogo))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anticatalogo neste grupo‚úîÔ∏è')
}
break

case 'antinotas':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiNotas) return reply('J√° Esta ativo')
antinotas.push(from)
fs.writeFileSync('./arquivos/antis/antinotas.json', JSON.stringify(antinotas))
reply('Ativou com sucesso o recurso de anti notas neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiNotas) return reply('Ja esta Desativado.')
antinotas.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antinotas.json', JSON.stringify(antinotas))
reply('Desativou com sucesso o recurso de anti notas neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'quando':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (args.length < 1) return reply('Digite a pergunta')
randomm = meupirul[Math.floor(Math.random() * meupirul.length)]
random2 = `${Math.floor(Math.random() * 11) + 1}`
if (randomm == 'Hoje' || randomm == 'Amanh√£' || randomm == 'Nunca') {
texto = `Pergunta: ${body.slice(1)}\n\nResposta: ${randomm}`
} else if (random2 == 1) {
texto = `Pergunta: ${body.slice(1)}\n\nResposta: 1 ${randomm}`
} else {
random3 = meupirul2[Math.floor(Math.random() * meupirul2.length)]
texto = `Pergunta: ${body.slice(1)}\n\nResposta: ${random2} ${random3}`
}
reply(texto)
break

case 'rankgostoso':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
member = []
const p01 = groupMembers
const p02 = groupMembers
const p03 = groupMembers
const p04 = groupMembers
const p05 = groupMembers
const o01 = p01[Math.floor(Math.random() * p01.length)]
const o02 = p02[Math.floor(Math.random() * p02.length)]
const o03 = p03[Math.floor(Math.random() * p03.length)]
const o04 = p04[Math.floor(Math.random() * p04.length)]
const o05 = p05[Math.floor(Math.random() * p05.length)]
luy = `
‚ùØ „Äé${botName}„Äè ‚ùÆ


‚ïë‚ùØ         „Äò TOP MAIS GOSTOSOS „Äô

‚î†‚ùØ ‚ùí GRUPO: ${groupName}
‚î†
‚î†‚ùØ ‚ùí GOSTOSO: @${o01.id.split('@')[0]}  
‚î†‚ùØ ‚ùí GOSTOSO: @${o02.id.split('@')[0]}  
‚î†‚ùØ ‚ùí GOSTOSO: @${o03.id.split('@')[0]}  
‚î†‚ùØ ‚ùí GOSTOSO: @${o04.id.split('@')[0]}  
‚î†‚ùØ ‚ùí GOSTOSO: @${o05.id.split('@')[0]}  

‚ùØ         „Äò MOTIVACIONAL „Äô

${enviarmen}`
member.push(o01.id)
member.push(o02.id)
member.push(o03.id)
member.push(o04.id)
member.push(o05.id)
mentions(luy, member, true)
break

case 'rankgostosa':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
member = []
const p1 = groupMembers
const p2 = groupMembers
const p3 = groupMembers
const p4 = groupMembers
const p5 = groupMembers
const o1 = p1[Math.floor(Math.random() * p1.length)]
const o2 = p2[Math.floor(Math.random() * p2.length)]
const o3 = p3[Math.floor(Math.random() * p3.length)]
const o4 = p4[Math.floor(Math.random() * p4.length)]
const o5 = p5[Math.floor(Math.random() * p5.length)]
luy = `
Paradas!ü§öü§ö\n\n1=ü§öü§≠@${o1.id.split('@')[0]}ü§öü§≠\n\n\n2=ü§öü§≠@${o2.id.split('@')[0]}ü§öü§≠\n\n\n3=ü§öü§≠@${o3.id.split('@')[0]}ü§öü§≠\n\n\n4=ü§öü§≠@${o4.id.split('@')[0]}ü§öü§≠\n\n\n5=ü§öü§≠@${o5.id.split('@')[0]}??ü§≠\n\n\nMultas por serem gostosas dmsüò≥ pague pena enviando nud no PV do donoüòä by Bot`
member.push(o1.id)
member.push(o2.id)
member.push(o3.id)
member.push(o4.id)
member.push(o5.id)
mentions(luy, member, true)
break

case 'rankcornos':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
membr = []
const corno1 = groupMembers
const corno2 = groupMembers
const corno3 = groupMembers
const corno4 = groupMembers
const corno5 = groupMembers
const cornos1 = corno1[Math.floor(Math.random() * corno1.length)]
const cornos2 = corno2[Math.floor(Math.random() * corno2.length)]
const cornos3 = corno3[Math.floor(Math.random() * corno3.length)]
const cornos4 = corno4[Math.floor(Math.random() * corno4.length)]
const cornos5 = corno5[Math.floor(Math.random() * corno5.length)]
var porcentagemcorno = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22%`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `O chifre desse ai bate na lua ksksksk`]
const porcentagemc = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcentag = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcent = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcl = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const prg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
ytb = `
‚ùØ  ‚ùí„Äé ${botName} „Äè‚ùí  ‚ùÆ


‚ïë‚ùØ         „Äò TOP MAIS CORNOS „Äô

‚î†‚ùØ ‚ùí GRUPO: ${groupName}
‚î†
‚î†‚ùØ ‚ùí CORNO: @${cornos1.id.split('@')[0]}  ‚ùØ ${porcent} ‚ùÆ
‚î†‚ùØ ‚ùí CORNO: @${cornos2.id.split('@')[0]}  ‚ùØ ${porcentag} ‚ùÆ
‚î†‚ùØ ‚ùí CORNO: @${cornos3.id.split('@')[0]}  ‚ùØ ${porcl} ‚ùÆ
‚î†‚ùØ ‚ùí CORNO: @${cornos4.id.split('@')[0]}  ‚ùØ ${porg} ‚ùÆ
‚î†‚ùØ ‚ùí CORNO: @${cornos5.id.split('@')[0]}  ‚ùØ ${prg} ‚ùÆ

‚ùØ         „Äò MOTIVACIONAL „Äô

${enviarmen}`
membr.push(cornos1.id)
membr.push(cornos2.id)
membr.push(cornos3.id)
membr.push(cornos4.id)
membr.push(cornos5.id)
mentions(ytb, membr, true)
break

case 'rankgay':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

try{
d = []
ret = `‚ùØ  ‚ùí„Äé${botName}„Äè‚ùí  ‚ùÆ\n\n‚ïë‚ùØ         „Äò TOP 5 MAIS GAYS „Äô\n\n`
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `‚î†‚ùØ ‚ùí üè≥Ô∏è‚Äçüåà @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(ret, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankgados':
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

try{
d = []
ret = `‚ùØ  ‚ùí„Äé${botName}„Äè‚ùí  ‚ùÆ\n\n‚ïë‚ùØ         „Äò TOP 5 MAIS GADOS „Äô\n\n`
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `‚î†‚ùØ ‚ùí üêÆ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(ret, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'playstore':
try {
if(!q) return reply(mess.noArgsSearch()+`use como exemplo: *${prefix+command} minecraft*`);
AB = await fetchJson(`http://kayserapis.tech:4197/api/playstore?nome=${q}&apikey=`+API_KEY_SHADOW)
ABC = `üîç *Pesquisa:* ${q} - *[ PlayStore ]*\nTotal de aplicativos encontrados: ${AB.pesquisa.resultado.length}\n${"-\t".repeat(24)}\n`
for (var i of AB.pesquisa.resultado) {
ABC += `*üîπÔ∏è Aplicativo:* ${i.nome}\n*üë©üèª‚Äçüíª Desenvolvedor do App:* ${i.desenvolvedor}\n*‚≠êÔ∏è Avalia√ß√£o do Aplicativo:* ${i.estrelas}\n*üîó Link do Aplicativo:* ${i.link}\n`;
ABC += `${"-\t".repeat(24)}\n`
}
loli.sendMessage(from, {image:{url: AB.pesquisa.resultado[0].imagem}, caption: ABC});
} catch (e) {
return reply(mess.error())
}
break


case 'frase':	//Dark goxtoso //Zalts apaixonado
                    rate = body.slice(6)
					var foda =['amor imaturo diz: Eu te amo porque preciso de voc√™','A vida come√ßa a cada cinco minutos','Onde as palavras falham, a m√∫sica fala','Um bom viajante n√£o tem planos','Uma vez que aceitamos nossos limites, vamos al√©m deles','O que n√£o nos mata nos fortalece','Se voc√™ caminha sozinho, voc√™ vai mais r√°pido Se voc√™s caminharem juntos, voc√™s ir√£o mais longe','Uma vida cheia de erros n√£o √© apenas mais honrosa, mas √© mais s√°bia do que uma vida gasta sem fazer nada','Nunca perca o senso de humor e aprenda a rir de suas pr√≥prias falhas','A preocupa√ß√£o √© como uma cadeira de balan√ßo, ela mant√©m voc√™ ocupado, mas n√£o leva a lugar nenhum','O homem que viveu mais tempo n√£o √© aquele que completou mais anos, mas aquele que mais experimentou a vida','Se voc√™ pode sonhar, voc√™ pode fazer','O imposs√≠vel √© o fantasma dos t√≠midos e o ref√∫gio dos covardes','O caminho que temos que percorrer 998 √© cheio de surpresas. Voc√™ nunca estar√° preparado para aqueles que o tocam, sejam eles felizes ou sombrios, porque isso faz parte de ganhar experi√™ncia. E descobrir qu√£o agrad√°veis ou infelizes s√£o aqueles que esperam por voc√™, √© algo que voc√™ nunca poder√° evitar','A felicidade n√£o √© algo que voc√™ adia para o futuro, √© algo que voc√™ projeta para o presente','Os amigos devem ser como dinheiro, que antes de precisar, voc√™ sabe o seu valor','O homem que viveu mais tempo n√£o √© aquele que completou mais anos, mas aquele que mais experimentou a vida']
					var zaltin = foda[Math.floor(Math.random() * foda.length)]
					reply(` ${zaltin} `)
					break
					
case 'recadoprowhatsapp':	//Dark goxtoso //Zalts apaixonadoüíô
                    rate = body.slice(6)
					var foda =['Felicidade √© s√≥ quest√£o de ser.','Acredite: sempre tem algo bom guardado para voc√™','Concentre-se no que est√° buscando, n√£o no que est√° deixando para tr√°s.','A vida √© muito curta pra n√£o viver sorrindo por a√≠!','Onde h√° vontade, h√° chance de dar certo!','Dance no seu ritmo! üíÉ','S√≥ voc√™ sabe o que te deixar√° feliz.','N√£o se estresse com o que est√° fora do seu controle.','Aprenda a apreciar as voltas que o mundo d√°.','Comece a se amar. O resto vir√° depois.','Maior que a tristeza de n√£o haver vencido √© a vergonha de n√£o ter lutado!','Reciprocidade, para as coisa boas. Imunidade, para as coisas ruins.','Coragem, a vida gosta de pessoas destemidas.', 'Compartilhe seus sentimentos. Nem todas as pessoas sabem adivinhar','Continue caminhando, n√£o tem problema se for devagar.','Melhor amar do que ser amargo!','N√£o corrigir nossas falhas √© o mesmo que cometer novos erros','Quando o caminho se torna duro, s√≥ os duros continuam caminhando','Florescer exige passar por todas as esta√ß√µes!','Quando as coisas simples parecem especiais, voc√™ percebe como a vida pode ser boa.','Os aprendizados deixam a vida especial.','Feliz daquele que encontra o verdadeiro amor sem as cicatrizes da decep√ß√£o']
					var zaltin = foda[Math.floor(Math.random() * foda.length)]
					reply(` ${zaltin} `)
					break
					///-------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ --------------
					case 'frasecriativas':	//Dark goxtoso //Zalts apaixonadoüíô
                    rate = body.slice(6)
					var foda =['N√£o conte os dias, viva-os! ‚òÄÔ∏èüòé','Tudo que vem, vem com algum prop√≥sito. Assim como tudo que vai, vai por uma raz√£o. üå∏üåÄ','Eu n√£o gosto de cobrar atitude de ningu√©m porque eu tenho de sobra. üòâ','Gostar, eu gosto de muita gente, mas a minha prioridade sempre ser√° eu mesma. ‚ú®','As pessoas que criticam, s√£o as mesmas que copiam. üëÄ','Aprendi que meu √∫nico limite √© a minha mente. ??','Fazendo dos meus sonhos, um objetivo. üí≠']
					var zaltin = foda[Math.floor(Math.random() * foda.length)]
					reply(` ${zaltin} `)
					break
					///-------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ ---------------------------- ¬ª ¬´¬ª ¬´ --------------
					case 'frasebonita':	//Dark goxtoso //Zalts apaixonado
                    rate = body.slice(6)
					var foda =['Viver em paz √© um luxo. √â saber que, apesar dos pesares, ficar bem √© prioridade. ‚ú®','Somos ferramentas para a vida seguir em frente. üåé','Ao inv√©s de pensar nas marcas que a vida deixa em voc√™, reflita: Quais as marcas voc√™ est√° deixando na vida? üí≠','Segue seu cora√ß√£o, tudo vai dar certo. ‚ô•Ô∏è','Permita-se sentir tudo que est√° dentro de voc√™! ‚ú®','Cada etapa da vida, lhe demandar√° uma vers√£o mais forte de voc√™. üçÉ','A vida √© como uma rosa, cada p√©tala um sonho, cada espinho uma realidadeüå∑üôâ','A arma dos fracos √© criticar os fortes. A arma dos fortes √© ignorar os fracos!üëå','Pare de olhar para tr√°s. Voc√™ j√° sabe onde esteve, agora precisa saber pra onde vaiüåôüçÉ','S√≥ faz sentido o que te faz sentir.']
					var zaltin = foda[Math.floor(Math.random() * foda.length)]
					reply(` ${zaltin} `)
					break


case 'antiaudio':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiAudio) return reply('Ja esta ativo')
antiaudio.push(from)
fs.writeFileSync('./arquivos/antis/antiaudio.json', JSON.stringify(antiaudio))
reply('Ativou com sucesso o recurso de anti audio neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiAudio) return reply('Ja esta Desativado')  
antiaudio.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antiaudio.json', JSON.stringify(antiaudio))
reply('Desativou com sucesso o recurso de anti audio neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break
				
case 'perfil2':
try {
ppimg = await loli.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}

var conselho = palavras[Math.floor(Math.random() * palavras.length)]
const nivelgado = ['1','2','3','4','5','6','7','8','9']
const nivelgado2 = ['1','2','3','4','5','6','7','8','9'] 
const nivelgador = nivelgado[Math.floor(Math.random() * (nivelgado.length))]
const nivelgado2r = nivelgado2[Math.floor(Math.random() * (nivelgado2.length))] 
const puta = ['1','2','3','4','5','6','7','8','9']
const puta2 = ['1','2','3','4','5','6','7','8','9'] 
const putar = puta[Math.floor(Math.random() * (puta.length))]
const putar2 = puta2[Math.floor(Math.random() * (puta2.length))] 
const gostosura = ['1','2','3','4','5','6','7','8','9']
const gostosura2 = ['1','2','3','4','5','6','7','8','9'] 
const gostosurar = gostosura[Math.floor(Math.random() * (gostosura.length))]
const gostosurar2 = gostosura2[Math.floor(Math.random() * (gostosura2.length))] 
var bio = await loli.fetchStatus
var bioo = bio.status
gadop = `${Math.floor(Math.random() * 100)}`
const programa = Math.ceil(Math.random() * 10000)
const dptr = `
‚ùØ  ‚ùí„Äé${botName}„Äè‚ùí  ‚ùÆ


‚ïë‚ùØ         „Äò SEU PERFIL „Äô

‚î†‚ùØ ‚ùí NOME: ${pushname}
‚î†‚ùØ ‚ùí ${!isGroup ? `PRIVADO: ${pushname}` :  `GRUPO: ${groupName}`}
‚î†‚ùØ ‚ùí GADISSE: ${nivelgador}${nivelgado2r}%
‚î†‚ùØ ‚ùí PUTARIA: ${putar}${putar2}%
‚î†‚ùØ ‚ùí GOSTOSURA: ${gostosurar}${gostosurar2}% 
‚î†‚ùØ ‚ùí TELEFONE: ${m.key.id.length > 21 ? 'Android üëæ' : m.key.id.substring(0, 2) == '3A' ? 'IOS üçéüçè' : 'Zap zap web üñ•Ô∏èüíª'}
‚î†‚ùØ ‚ùí PROGRAMA: R$${programa}

‚ùØ         „Äò MOTIVACIONAL „Äô

${enviarmen}`
daftarimg = await getBuffer(ppimg)
loli.sendMessage(from, {image: daftarimg, caption: dptr}, {quoted: info})
break

          case 'tempo':
          if(!isPremium) return reply(msg.premium)
            loli.sendMessage(from, { react: { text: `üì°`, key: info.key } })
            if (!q) return reply(`Qual o nome da sua cidade? Exemplo: /tempo Sao Paulo caso ter algum ponto retire pra nao da erro.`)
            cidade = body.slice(7)
            clima = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${q}&appid=f5c0840c2457fbb64188a6d4be05618f&units=metric&lang=pt_br`)
            if (clima.error) return reply(resposta.erro)
            jr = `üåû Temperatura agora: ${clima.data.main.temp}¬∫C
  üèôÔ∏è Cidade: ${clima.data.name}
  üî• Temperatura M√°xima: ${clima.data.main.temp_max}¬∞C
  ‚ùÑ Temperatura M√≠nima: ${clima.data.main.temp_min}¬∞C
  üå¶ Clima: ${clima.data.weather[0].description}
  üíß Umidade de ar: ${clima.data.main.humidity}% 
  üå´ Ventos: ${clima.data.wind.speed}  
  
  Solicitado por: ${pushname}`
            await loli.sendMessage(from, { text: jr }, { quoted: info, contextInfo: { "mentionedJid": jr } })
            break
            
          case 'emojimix': {
            if (!q) return reply(`Exemplo : ${prefix + command} üòÖ+ü§î`)
            reply('SER N√ÉO FOR TENTA COM OUTRO... ?')
            let [emoji1, emoji2] = q.split`+`
            var em = await fetchJson(`https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${encodeURIComponent(emoji1)}_${encodeURIComponent(emoji2)}`)
            for (let res of em.results) {
              templateMassage = {
                image: {
                  url: `${res.url}`,
                  quoted: live
                }
              }
              loli.sendMessage(from, templateMassage, { quoted: live })
            }
          }
            break
            
          case 'punheteiro':
          if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
            if (!isGroup) return reply(`S√≥ pode ser utilizado este comando, em grupo.`)
            if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
            const aletl = `${Math.floor(Math.random() * 105)}`
            reply(`@${blamention_id.split("@")[0]} Aguarde, confiscando sua porcentagem...`)
            await delay(7000)
            reply(`„Äå @${blamention_id.split("@")[0]} „ÄçSua Porcentagem De punheteiro √© De : ${aletl}%`)
            break
            
          case "arma": {
            bancoDeDados = {
              "M1887": {
                "nome": "M1887",
                "descri√ß√£o": "Uma espingarda de cano duplo que inflige danos massivos em curta dist√¢ncia.",
                "dano": "Alto",
                "alcance": "Curto",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 2
              },
              "AK47": {
                "nome": "AK47",
                "descri√ß√£o": "Rifle de assalto de alta pot√™ncia com alta taxa de disparo e precis√£o moderada.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 30
              },
              "AWM": {
                "nome": "AWM",
                "descri√ß√£o": "Rifle de precis√£o capaz de derrubar inimigos com um √∫nico tiro.",
                "dano": "Extremo",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 5
              },
              "Groza": {
                "nome": "Groza",
                "descri√ß√£o": "Rifle de assalto altamente poderoso com uma taxa de disparo e precis√£o excepcionais.",
                "dano": "Alto",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Muito alta",
                "capacidade_do_pente": 30
              },
              "UMP45": {
                "nome": "UMP45",
                "descri√ß√£o": "Submetralhadora de alta cad√™ncia de tiro, equilibrada em termos de dano e controle de recuo.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 25
              },
              "M1014": {
                "nome": "M1014",
                "descri√ß√£o": "Uma espingarda de combate pr√≥xima com uma taxa de disparo e dano impressionantes.",
                "dano": "Muito alto",
                "alcance": "Curto",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 6
              },
              "M60": {
                "nome": "M60",
                "descri√ß√£o": "Metralhadora com alto poder de fogo, ideal para suprimir inimigos e combates a m√©dia dist√¢ncia.",
                "dano": "Alto",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 60
              },
              "XM8": {
                "nome": "XM8",
                "descri√ß√£o": "Rifle de assalto de alta efici√™ncia, com √≥timo equil√≠brio entre dano, alcance e taxa de disparo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 30
              },
              "SCAR": {
                "nome": "SCAR",
                "descri√ß√£o": "Rifle de assalto confi√°vel, com boa precis√£o e controle de recuo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 30
              },
              "M4A1": {
                "nome": "M4A1",
                "descri√ß√£o": "Rifle de assalto vers√°til e equilibrado, adequado para v√°rias situa√ß√µes de combate.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 30
              },
              "SVD": {
                "nome": "SVD",
                "descri√ß√£o": "Rifle de precis√£o semi-autom√°tico, com √≥timo alcance e dano significativo.",
                "dano": "Alto",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 10
              },
              "MP5": {
                "nome": "MP5",
                "descri√ß√£o": "Submetralhadora compacta e precisa, adequada para combates em espa√ßos confinados.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 30
              },
              "SPAS12": {
                "nome": "SPAS12",
                "descri√ß√£o": "Uma espingarda de a√ß√£o por bombeamento, eficaz a curta dist√¢ncia com alto dano.",
                "dano": "Alto",
                "alcance": "Curto",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 6
              },
              "KAR98K": {
                "nome": "KAR98K",
                "descri√ß√£o": "Rifle de precis√£o de a√ß√£o por ferrolho, com excelente precis√£o e dano letal.",
                "dano": "Extremo",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 5
              },
              "M249": {
                "nome": "M249",
                "descri√ß√£o": "Metralhadora leve com grande capacidade de muni√ß√£o, ideal para controle de √°rea.",
                "dano": "Alto",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 100
              },
              "Thompson": {
                "nome": "Thompson",
                "descri√ß√£o": "Submetralhadora cl√°ssica de alta cad√™ncia de tiro e bom controle de recuo.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 30
              },
              "VSS": {
                "nome": "VSS",
                "descri√ß√£o": "Rifle de assalto silencioso com escopo integrado e baixo recuo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 15
              },
              "MP40": {
                "nome": "MP40",
                "descri√ß√£o": "Submetralhadora de alta cad√™ncia de tiro e bom controle de recuo.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Muito alta",
                "capacidade_do_pente": 30
              },
              "AUG": {
                "nome": "AUG",
                "descri√ß√£o": "Rifle de assalto com excelente precis√£o, alcance e taxa de disparo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 30
              },
              "G18": {
                "nome": "G18",
                "descri√ß√£o": "Pistola autom√°tica com alta taxa de disparo, ideal para combate pr√≥ximo.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Muito alta",
                "capacidade_do_pente": 20
              },
              "P90": {
                "nome": "P90",
                "descri√ß√£o": "Submetralhadora de alta cad√™ncia de tiro e capacidade de muni√ß√£o elevada.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Muito alta",
                "capacidade_do_pente": 50
              },
              "Desert Eagle": {
                "nome": "Desert Eagle",
                "descri√ß√£o": "Pistola de alta pot√™ncia e precis√£o, com uma grande parada de energia.",
                "dano": "Alto",
                "alcance": "Curto",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 7
              },
              "Vector": {
                "nome": "Vector",
                "descri√ß√£o": "Submetralhadora compacta com alta cad√™ncia de tiro e boa precis√£o.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Muito alta",
                "capacidade_do_pente": 30
              },
              "M14": {
                "nome": "M14",
                "descri√ß√£o": "Rifle semiautom√°tico de alta precis√£o, ideal para combates de longa dist√¢ncia.",
                "dano": "Alto",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 10
              },
              "CG15": {
                "nome": "CG15",
                "descri√ß√£o": "Rifle de sinaliza√ß√£o que causa dano explosivo aos inimigos.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 1
              },
              "USP": {
                "nome": "USP",
                "descri√ß√£o": "Pistola de m√©dio alcance com boa precis√£o e taxa de disparo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 12
              },
              "M1873": {
                "nome": "M1873",
                "descri√ß√£o": "Rev√≥lver de a√ß√£o simples com alto dano, mas taxa de disparo baixa.",
                "dano": "Alto",
                "alcance": "Curto",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 2
              },
              "AN94": {
                "nome": "AN94",
                "descri√ß√£o": "Rifle de assalto com um modo de disparo especial que aumenta a taxa de disparo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 30
              },
              "M79": {
                "nome": "M79",
                "descri√ß√£o": "Lan√ßador de granadas que causa danos em √°rea com alto poder de explos√£o.",
                "dano": "Extremo",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 1
              },
              "M14": {
                "nome": "M14",
                "descri√ß√£o": "Rifle semiautom√°tico de alta precis√£o, ideal para combates de longa dist√¢ncia.",
                "dano": "Alto",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 10
              },
              "CG15": {
                "nome": "CG15",
                "descri√ß√£o": "Rifle de sinaliza√ß√£o que causa dano explosivo aos inimigos.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 1
              },
              "USP": {
                "nome": "USP",
                "descri√ß√£o": "Pistola de m√©dio alcance com boa precis√£o e taxa de disparo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 12
              },
              "M1873": {
                "nome": "M1873",
                "descri√ß√£o": "Rev√≥lver de a√ß√£o simples com alto dano, mas taxa de disparo baixa.",
                "dano": "Alto",
                "alcance": "Curto",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 2
              },
              "AN94": {
                "nome": "AN94",
                "descri√ß√£o": "Rifle de assalto com um modo de disparo especial que aumenta a taxa de disparo.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "Alta",
                "capacidade_do_pente": 30
              },
              "M79": {
                "nome": "M79",
                "descri√ß√£o": "Lan√ßador de granadas que causa danos em √°rea com alto poder de explos√£o.",
                "dano": "Extremo",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 1
              },
              "M82B": {
                "nome": "M82B",
                "descri√ß√£o": "Rifle de precis√£o de a√ß√£o por ferrolho com alto dano e capacidade de penetra√ß√£o.",
                "dano": "Extremo",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 5
              },
              "P90": {
                "nome": "P90",
                "descri√ß√£o": "Submetralhadora de alta cad√™ncia de tiro e capacidade de muni√ß√£o elevada.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Muito alta",
                "capacidade_do_pente": 50
              },
              "Desert Eagle": {
                "nome": "Desert Eagle",
                "descri√ß√£o": "Pistola de alta pot√™ncia e precis√£o, com uma grande parada de energia.",
                "dano": "Alto",
                "alcance": "Curto",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 7
              },
              "M1887": {
                "nome": "M1887",
                "descri√ß√£o": "Espingarda de a√ß√£o por ferrolho com alto dano em combates de curta dist√¢ncia.",
                "dano": "Extremo",
                "alcance": "Curto",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 2
              },
              "XM8": {
                "nome": "XM8",
                "descri√ß√£o": "Rifle de assalto com boa precis√£o e cad√™ncia de tiro.",
                "dano": "Moderado",
                "alcance": "M√©dio",
                "taxa_de_disparo": "M√©dia",
                "capacidade_do_pente": 30
              },
              "KAR98K": {
                "nome": "KAR98K",
                "descri√ß√£o": "Rifle de precis√£o de a√ß√£o por ferrolho com alto dano e precis√£o.",
                "dano": "Extremo",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 5
              },
              "M79": {
                "nome": "M79",
                "descri√ß√£o": "Lan√ßador de granadas que causa danos em √°rea com alto poder de explos√£o.",
                "dano": "Extremo",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 1
              },
              "MP40": {
                "nome": "MP40",
                "descri√ß√£o": "Submetralhadora de alta cad√™ncia de tiro e bom controle de recuo.",
                "dano": "Moderado",
                "alcance": "Curto",
                "taxa_de_disparo": "Muito alta",
                "capacidade_do_pente": 30
              },
              "M14": {
                "nome": "M14",
                "descri√ß√£o": "Rifle semiautom√°tico de alta precis√£o, ideal para combates de longa dist√¢ncia.",
                "dano": "Alto",
                "alcance": "Longo",
                "taxa_de_disparo": "Baixa",
                "capacidade_do_pente": 10
              }
            }


            const armaPesquisada = args.join(" "); // Substitua pelo valor desejado
            let resultado = null;

            for (const arma in bancoDeDados) {
              if (arma.toLowerCase() === armaPesquisada.toLowerCase()) {
                resultado = bancoDeDados[arma];
                break;
              }
            }

            if (resultado) {
              reply(`*${resultado.nome}*\n*${resultado.descri√ß√£o}*\n\n*Dano: ${resultado.dano}*\n\n*Alcance: ${resultado.alcance}*\n\n*Taxa de Disparo: ${resultado.taxa_de_disparo}*\n\n*Capacidade do Pente: ${resultado.capacidade_do_pente}*`);
            } else {
              reply('Erro: Arma n√£o encontrada no banco de dados.');
            }
          } break
          
         case 'bc': case 'bcgroup': case 'transmitir': case 'transmiss√£o':
         reply(`esse comando causa ban infelizmente n√£o pode ser usado`)
            break
            
                    case 'walpaperanime':
            {
              json = JSON.parse(fs.readFileSync('./arquivos/wall.json').toString())
              random = json[Math.floor(Math.random() * json.length)]
              /*
              let proximo = [
                {buttonId: `${prefix + command}`, buttonText: {displayText: 'üçâPROXIMOüçâ'}, type: 1},
                ]
                */
              templateMassage = {
                image: {
                  url: random,
                  quoted: info
                },
                caption: `${command}`,
                footer: `${botName}`,
              }
              loli.sendMessage(from, templateMassage)
            }
            break
            
                    case 'animememe':
            {
              json = JSON.parse(fs.readFileSync('./arquivos/animememe.json').toString())
              random = json[Math.floor(Math.random() * json.length)]
              /*
              let proximo = [
                {buttonId: `${prefix + command}`, buttonText: {displayText: 'üçâPROXIMOüçâ'}, type: 1},
                ]
                */
              templateMassage = {
                image: {
                  url: random,
                  quoted: info
                },
                caption: `${command}`,
                footer: `${botName}`,
              }
              loli.sendMessage(from, templateMassage)
            }
            break
            
          case "adivinha√ß√£o": case 'advh':
            if (!isGroup) return reply(`Comando s√≥ para grupos.`)
            if (args.length < 1) return reply(`Exemplo: ${prefix} adivinhacao 50`)
            const num = Math.floor(Math.random() * 100) + 1
            const guess = parseInt(args[0])
            if (isNaN(guess)) return reply('Digite um n√∫mero v√°lido.')
            if (guess < 1 || guess > 100) return reply('O n√∫mero deve estar entre 1 e 100.')
            if (guess === num) {
              const premio = Math.floor(Math.random() * 50) + 1
              reply(`Parab√©ns, voc√™ acertou! O n√∫mero era ${num}.\nVoc√™ ganhou ${premio} em dinheiro.`)
            } else {
              reply(`Que pena, voc√™ errou. n√∫mero era ${num}. Tente novamente.`)
            }
            break
            
            case 'apps':
loli.sendMessage(from, {image: fs.readFileSync('./loli/image/menu.jpg'), caption: `



1¬∞ ENCONTREI TV
https://encontrei.tv/assistir/filmes-online-2/


‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚ÜóÔ∏è‚ÜòÔ∏è



2¬∞ REDE CANAIS
https://redecanais.zip/eu-sou-franky-dublado-lista-de-episodios_3ef81a600.html

(ESSE E MELHOR NO COMPUTADOR)


‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚ÜóÔ∏è‚ÜòÔ∏è


2¬∞ TOP-FLIX
 https://m.topflix.fm/


‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è‚ÜóÔ∏è‚ÜòÔ∏è



3¬∞ FILMELIER
https://www.filmelier.com/br/

‚ú∞‚ú∞‚ú∞‚ú∞‚ú∞




`},{quoted: info})

break

case 'gpofc':
loli.sendMessage(from, { react: { text: `‚≠ê`, key: m.key }})
reply(`https://chat.whatsapp.com/IiBxOEZcwHkG5G9FsYdJ2u`)
break

          case 'ddd':
            if (!isPremium) return reply(msg.vip)
            if (args.length < 1) return reply(`Use ${prefix + command} 21`)
            ddd = body.slice(5)
            ddds = await axios.get(`https://brasilapi.com.br/api/ddd/v1/${ddd}`)
            dddlist = `LISTA DE CIDADES ${ddds.data.state} COM ESTE DDD ${q}~\n\n`
            for (let i = 0; i < ddds.data.cities.length; i++) { dddlist += `${i + 1} ‚™ß *${ddds.data.cities[i]}*\n` }
            loli.sendMessage(from, { text: dddlist }, { quoted: info })
            break        
 
          case "imgpralink":
            try {
              if (isQuotedImage) {
                boij = isQuotedImage || isQuotedVideo ? JSON.parse(JSON.stringify(info).replace("quotedM", "m")).message.extendedTextMessage.contextInfo.message.imageMessage : info
                const fetch = require('node-fetch');
                const FormData = require('form-data');
                const fs = require('fs');
                async function uploadImageToTelegraph(imageBuffer) {
                  const form = new FormData();
                  form.append('file', imageBuffer, { filename: 'image.jpg' });

                  const response = await fetch('https://telegra.ph/upload', {
                    method: 'POST',
                    body: form,
                  });
                  const data = await response.json();
                  if (data && data[0] && data[0].src) {
                    return 'https://telegra.ph' + data[0].src;
                  } else {
                    throw new Error('Failed to retrieve the image URL from the response.');
                  }
                }
                const owgi = await getFileBuffer(boij, "image");
                const imageUrl = await uploadImageToTelegraph(owgi);
                reply(imageUrl);
              } else {
                reply('marque a ft')
              }
            } catch (e) {
              console.log(e)
              reply('error...')
            }
            break
       
          case 'fotobot':
            if (!isCreator) return reply(msg.dono)
            if (!isQuotedImage) return reply(`Envie fotos com legendas ${prefix}fotobot ou tags de imagem que j√° foram enviadas`)
            buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, 'image')
            await loli.updateProfilePicture(numeroBot, buff)
            reply('Obrigado pelo novo perfil vlw')
            break        

case 'ct1':
if (!isGroup) return reply(msg.grupo)
if (!isCreator && !isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
if (isAntiCtt) return reply('Ja esta ativo')
antictt.push(from)
fs.writeFileSync('./arquivos/antis/antictt.json', JSON.stringify(antictt))
reply('üåÄ Ativou com sucesso o recurso de anticontato neste grupo üìù')
break 

          case 'antilinkgp':
          case 'antilink':
            if (!isGroup) return reply(msg.grupo)
            if (!isGroupAdmins) return reply(msg.adm)
            if (!isBotGroupAdmins) return reply(msg.botadm)
            if (Number(args[0]) === 1) {
              if (isAntilinkgp) return reply('Ja esta ativo')
              antilinkgp.push(from)
              fs.writeFileSync('./arquivos/antis/antilinkgp.json', JSON.stringify(antilinkgp))
              reply('Ativou com sucesso o recurso de antilinkgp')
            } else if (Number(args[0]) === 0) {
              if (!isAntilinkgp) return reply('Ja esta Desativado')
              pesquisar = from
              processo = antilinkgp.indexOf(pesquisar)
              while (processo >= 0) {
                antilinkgp.splice(processo, 1)
                processo = antilinkgp.indexOf(pesquisar)
              }
              fs.writeFileSync('./arquivos/antis/antilinkgp.json', JSON.stringify(antilinkgp))
              reply('Desativou com sucesso o recurso de antilink de grupo')
            } else {
            }
            break
case 'ct0':
if (!isGroup) return reply(msg.grupo)
if (!isCreator && !isGroupAdmins) return reply(msg.adm)
if (!isBotGroupAdmins) return reply(msg.botadm)
if (!isAntiCtt) return reply('Ja esta Desativado')
pesquisar = from
processo = antictt.indexOf(pesquisar)
while(processo >= 0){
antictt.splice(processo, 1)
processo = antictt.indexOf(pesquisar)
}
fs.writeFileSync('./arquivos/antis/antictt.json', JSON.stringify(antictt))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anticontato neste grupo‚úîÔ∏è')
break

case 'noticias': 
try {
if (!q) return reply(`informe um tema para realizar a pesquisa de suas not√≠cias!`)
theNews = await axios.get(`https://newsapi.org/v2/everything?q=${encodeURIComponent(q)}&sortBy=publishedAt&language=pt&apiKey=9dc1dde158804756ae9b33dd8d71f7a1`);
newsSends = theNews.data.articles.map(d => `${d.publishedAt.split('T').join(' - ').split('Z')[0]}\n\n${d.title} - ${d.author} [${d.source.name}]\n\n${d.description}\n\n${d.url}\n\n${d.content}\n\n--------------------------- * ---------------------------\n\n`).join('');
msgSemQuoted(newsSends).catch(() => {
return console.log(e)
})
} catch (e) {
return console.log(e)
}
break

case 'conselhobiblico':
case 'conselhosbiblico':  
case 'conselhosb':   
case 'conselhob':  
var conselhosb = conselhob[Math.floor(Math.random() * conselhob.length)]   
jr = `
‚ï≠‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üóØ]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïÆ
‚ïø‚ïë‚Ä¢ ${hora} ${pushname} 
‚ïø‚ïë
‚ïø‚ïë‚Ä¢ Conselhos B√≠blico para voc√™: 
‚ïø‚ïë
‚ïø‚ïë‚Ä¢ ${conselhosb} 
‚ïø‚ïë
‚ïø‚ïë‚Ä¢ Bot: ${botName}
‚ïø‚ïë‚Ä¢ ${!isGroup ? `ùó®ùòÄùòÇùóÆ??ùó∂ùóº: ${pushname}` :  `ùóöùóøùòÇùóΩùóº: ${groupName}`}
‚ï∞‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üí´]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïØ`
await loli.sendMessage(from, {text: jr}, {quoted: info, contextInfo: {"mentionedJid": jr}})
break

            case 'avalie':
                if (!q) return reply(`Ex: ${prefix} avalia√ß√£o bot muito top..`)
                reply(`Avaliac√£o enviada com sucesso.`)
                let templateMeesssage = {
                    image: {
                        url: imagemdomenu,
                        quoted: info
                    },
                    caption: `*üëªAvalia√ß√£oüëª*\nDo N√∫mero: @${sender.split('@')[0]},\nAvaliac√£o:\n${q}`,
                    footer: 'Noelle_md'
                }
                loli.sendMessage(`${donoNumber}@s.whatsapp.net`, templateMeesssage)
                break

case 'status':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins && !isCreator  && !m.key.fromMe) return reply(msg.adm)

reply(`‚ï≠‚ïº‚ïº‚ïæ‚ù≤ S T A T U S ‚ù≥‚ïº‚ïº‚ïæ‚ïÆ
‚îÇ‚û± Anti √°udios: ${isAntiAudio? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti documentos: ${Antidoc ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti fake: ${isAntifake ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti img: ${isAntiImg? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti sticker: ${isAntiSticker ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti liga√ß√£o: ${isAnticall ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti Notas: ${isAntiNotas ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti catalogo: ${isAnticatalogo ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti video: ${isAntiVid ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti localiza√ß√£o: ${Antiloc ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti link grupo: ${isAntiLink ? '‚úÖ' : '‚õî'}
‚îÇ‚û± AutoReact: ${isAutoReact ? '‚úÖ' : '‚õî'}
‚ï∞‚ïº‚ïæ‚ù≤ ${botName} ‚ù≥‚ïº‚ïæ‚ïØ`)
break
                  
            case "!massacote":
            case '!mascote':
                var mascoteFotoURL = "https://i.imgur.com/mVwa7q4.png"
                await loli.sendFileFromUrl(chatId, mascoteFotoURL, 'mascote.jpeg', 'Whatsapp Jr.', id)
                break 

case 'amongus': 
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Voc√™ precisa mencionar algu√©m')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pro = '.\n'
for (let _ of mentioned) {
pro += `@${_.split('@')[0]}\n`
}
sus = 
`.      „ÄÄ„ÄÇ„ÄÄ„ÄÄ„ÄÄ„ÄÄ‚Ä¢„ÄÄ    „ÄÄÔæü„ÄÄ„ÄÄ„ÄÇ
„ÄÄ„ÄÄ.„ÄÄ„ÄÄ„ÄÄ.„ÄÄ„ÄÄ„ÄÄ  „ÄÄ„ÄÄ.„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÇ„ÄÄ„ÄÄ   „ÄÇ„ÄÄ.
„ÄÄ.„ÄÄ„ÄÄ      „ÄÇ„ÄÄ        ‡∂û   „ÄÇ„ÄÄ    .    ‚Ä¢
‚Ä¢            @${mentioned[0].split('@')[0]} was E j e c t e d
                  1 impostor remain   „ÄÇ„ÄÄ.
„ÄÄ „ÄÄ„ÄÄ„ÄÇ„ÄÄ„ÄÄ „ÄÄ„ÄÄ„ÄÄ„ÄÄÔæü„ÄÄ„ÄÄ„ÄÄ.„ÄÄ      „ÄÄ„ÄÄ„ÄÄ.
,„ÄÄ„ÄÄ„ÄÄ„ÄÄ.                  .`
mentions(`${sus}`, mentioned, true)

break           

   case 'tiktok':
try {
if(!q) return reply("Cad√™ o link?")
reply(`enviando`)
if (!q.includes('tiktok')) return reply(`Link Invalido..!!`)
thumbnail: fs.readFileSync(`./settings/logo.jpg`),
require('./arquivos/lib/tiktok').Tiktok(q).then( data => {
loli.sendMessage(from, { video: { url: data.nowm }}, { quoted: info })
})
} catch {
reply("Deu erro esse link nao e do tik tok...")
}
break

case 'tiktokaudio':
case 'ttk2':
try {
if(!q) return reply("Cad√™ o link?")
if (!q.includes('tiktok')) return reply(`Link Invalido..!!`)
reply(`enviando`)
require('./arquivos/lib/tiktok').Tiktok(q).then( data => {
loli.sendMessage(from, { audio: { url: data.audio }, mimetype: 'audio/mp4' }, { quoted: info })
})
} catch {
reply("Deu erro üòî")
}
break

case 'togif':
if(!isQuotedSticker) return reply('Marque a figurinha animada!')
try {
if((isMedia && !info.message.videoMessage || isQuotedSticker) && !q.length <= 1) {
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
reply('Aguarde, estou convertendo a figurinha para o formato gif.')
a = await webp_mp4(buff)
loli.sendMessage(from, {video: {url: a}, gifPlayback: true, fileName: `stick.gif`}, {quoted: live}).catch(e => {
reply("Erro ao realizar o envio do sticker!") 
})
DLT_FL(buff)
}
} catch {
reply(mess.erro())
}
break

case 'contar':
if (args.length == 0) return reply( 'Tem Nada, Voc√™ N√£o Colocou Nada')
const count = body.slice(8).length
if (count === 1) {
reply(`O texto possui ${count} caractere.`)
} else if (count > 1) {
reply(`O texto possui ${count} caracteres.`)
}
break

case 'gerarcpf':
if(!isPremium) return reply(msg.premium)
cp1 = `${Math.floor(Math.random() * 300) + 600}`
cp2 = `${Math.floor(Math.random() * 300) + 600}`
cp3 = `${Math.floor(Math.random() * 300) + 600}`
cp4 = `${Math.floor(Math.random() * 30) + 60}`
cpf = `${cp1}.${cp2}.${cp3}-${cp4}`
loli.sendMessage(from, {text: `CPF gerado com sucesso : ${cpf}`}, {quoted: info})
break

case 'esquilo':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.7,asetrate=65100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'nick':
case 'gerarnick':
case 'fazernick22':
try {
nick = args.join(' ')
if(!q) return reply('Escreva o Nick ou nome que voc√™ quer personalizar.')
axios.get(`http://yurimodz-apis.xyz:3006/api/fazernick?nome=Rooh&apikey=YuriModz2025`)
.then(dados => {
var emojis = `‚î†‚ùØ ‚ùí  `
nicks = dados.data
txt = `${botName}`
for (let i = 0; i < nicks.length; i++) {
txt += `${emojis} ${nicks[i]}\n`
}
txt += `\nCopyright
@Licht.Offc
@AquaBot.Wpp`
reply(`${txt.trim()}`)
}).catch(e => {
reply('N√£o pode incluir letras modificadas nem emojis, ou pode ser que a api caiu, mas volta logo logo...')  
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break

case 'shadow':
case 'angelwing':
case 'efeitoneon':
case 'cemiterio':
case 'metalgold':
case 'fire':
case 'romantic':
case 'smoke':  
case 'papel':
case 'lovemsg':
case 'lovemsg2':
case 'lovemsg3':
case 'coffecup':
case 'coffecup2':  
case 'cup':
case 'florwooden':
case 'madeira':
case 'neon2':
case 'lobometal':
case 'harryp':
case 'txtborboleta':
case 'blackpink':
case 'girlmascote': 
case 'logogame':
case 'equipemascote':
case 'fpsmascote':
case 'hackneon':
case 'ffavatar':
case 'mascotegame':
case 'wingeffect':
case 'angelglx':
case 'gizquadro':
case 'txtquadrinhos':
case 'starballons':
case 'frozen':
case '3dsilver':
case 'goldtext':
textin = args.join(" ")
if (!q) return reply(`Qual o nome ?`)
reply('enviando...')
bla = await fetchJson(`http://kayserapis.tech:4197/api/${command}?texto=${textin}&apikey=`+API_KEY_SHADOW)
blabla = await getBuffer(bla.resultado.imageUrl)
loli.sendMessage(from, {image: blabla}, {quoted: info}).catch(e =>{
reply("erro ao criar sua logo! tente novamente mais tarde.")  
})
break  

case 'figubebe':
if (!q) return reply("Insira a quantidade de figurinhas que deseja que eu envie!")
if (!Number(args[0]) || Number(q.trim()) > 10) return reply("Digite a quantidade de figurinhas que deseja que eu envie.. n√£o pode mais de 10..")
async function lovepartidolovepartido() {
loli.sendMessage(from, { sticker: { url: `http://kayserapis.tech:4197/sticker/figu_bebe?apikey=`+API_KEY_SHADOW } })}
for (i = 0; i < q; i++) {
await sleep(680)
lovepartidolovepartido()
}
break

case 'figucoreana':
if (!q) return reply("Insira a quantidade de figurinhas que deseja que eu envie!")
if (!Number(args[0]) || Number(q.trim()) > 10) return reply("Digite a quantidade de figurinhas que deseja que eu envie.. n√£o pode mais de 10..")
async function lovepartidoee() {
loli.sendMessage(from, { sticker: { url: `http://kayserapis.tech:4197/sticker/figu_coreana?apikey=`+API_KEY_SHADOW } })}
for (i = 0; i < q; i++) {
await sleep(680)
lovepartidoee()
}
break

case 'nome':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 553172595934\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéBasta Informar Um Nome\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé ${prefix+ command} Jessica Oliveira \n‚îÇ‚ïé \n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/nome?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {
console.log(error)
}
break

case 'ranklixo':
if (!isGroup) return reply('*Isso parece um grupo animal?*')
try{
d = [] 
teks = 'üèîRank dos mais lixos do gp\n'
for(i = 0; i < 7; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `üöÆ ‚™º @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente')
}
break

case 'play': case 'play2': case 'play4':
try {
if(!q) return reply(`Exemplo:\n\n${prefix+command}poze desabafo`);
await reply(`Ola ${pushName} m√∫sica encontrada com sucesso enviando...`)
data = await fetchJson(`http://kayserapis.tech:4197/api/ytsrc/videos?q=${q}&apikey=`+API_KEY_SHADOW)
loli.sendMessage(from, {audio: {url: `http://kayserapis.tech:4197/api/dl/ytaudio?url=${data.resultado[0].url}&apikey=`+API_KEY_SHADOW}, mimetype: "audio/mp4",
headerType: 4,
contextInfo: {
externalAdReply: {
title: `${donoName}`,
body:  `0:00 ‚ùç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ2:36 ‚Üª ‚ä≤ ‚Ö° ‚ä≥ ‚Ü∫`,
showAdAttribution: true,
thumbnail: fs.readFileSync(`./settings/logo.jpg`),
mediaType: 2,
mediaUrl: `https://wa.me/554399827762?text=Slv%20sandro`,
sourceUrl: `https://wa.me/554399827762?text=Slv%20sandro`}}})
} catch (erro) {
console.log(erro)
}              
break

case 'play7': {
                if (!text) return reply(`‚ö†Ô∏è ùô¥ùö°ùöéùöñùöôùöïùöò ùöçùöé ùöûùöúùöò:\n\n${prefix + comando} Vale do reginaldo`)
                try {
                    let dataa = await fetchJson(`http://sabapi.tech:8090/api/ytsrc/videos?q=${text}&apikey=MrRootsFree`)
                   reply( `‚îÅ„Äå PLAY AUDIO „Äç
  ü•Ç‚àÜùêÅùêÑùêå‚ú∞ùêïùêàùêçùêÉùêé‚àÜü•Ç     ‚ô¨
‚∏∫ÕüÕûÍ™∂${pushname}      ‚ô™  
  
‚û§Õ°Õú€ú€ú€£üç≠ ùöÉùöíÃÅùöùùöûùöïùöò: ${dataa.resultado[0].title}
‚û§Õ°Õú€ú€ú€£üå®Ô∏è Tempo‚ßΩ${dataa.resultado[0].timestamp}
‚û§Õ°Õú€ú€ú€£üå∏ Descri√ß√£o‚ßΩ ${dataa.resultado[0].description}

 0:35 ‚îÅ‚ùç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ -5:32 ‚Üª ‚ä≤ ‚Ö° ‚ä≥ ‚Ü∫ VOLUME: ‚ñÅ‚ñÇ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá 100%

Buum diaaüíñ
ƒ±lƒ±.lƒ±llƒ±lƒ±.ƒ±llƒ±..ƒ±lƒ±.lƒ±llƒ±lƒ±.ƒ±llƒ±\n\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`)
                    loli.sendMessage(from, { audio: { url: `http://sabapi.tech:8090/api/dl/ytaudio?url=${dataa.resultado[0].url}&apikey=MrRootsFree` }, mimetype: "audio/mpeg", fileName: `${dataa.resultado[0].title}.mp4` }, { quoted: info })
                } catch (err) {
                    reply('‚ùå ùô¥ùöõùöõùöò ùöäùöò ùöòùöãùöùùöéùöõ ùöíùöóùöèùöòùöõùöñùöäùöåÃßùöòÃÉùöéùöú!')
                    console.log(err)
                }
            }
                break
                
case 'instamp4':
if (!q) return reply ("Adicione o link do v√≠deo do Instagram!")
if (!q.includes("instagram.com")) return reply("S√≥ pode ser link do Instagram!!")
fetchJson(`http://yurimodz-apis.xyz:3006/api/dl/igstory?usuario=alok&apikey=YuriModz2025`).then( knn => {
loli.sendMessage(from, {video: {url: knn.resultado.link}, caption: "Est√° ai üëç"}, {quoted: info})})
break

case 'play5': case 'musica': case 'tocar': {
                if (!text) return reply(`Asim que usa:\n\n${prefix + comando} Amar amei gosta gostei`)
                try {
                    let dataa = await fetchJson(`http://sabapi.tech:8090/api/ytsrc/videos?q=${text}&apikey=MrRootsFree`)
                    ytbrt = `‚îÅ„Äå PLAY AUDIO „Äç
  ü•Ç‚àÜùêÅùêÑùêå‚ú∞ùêïùêàùêçùêÉùêé‚àÜü•Ç     ‚ô¨
‚∏∫ÕüÕûÍ™∂${pushname}      ‚ô™  
  
‚û§Õ°Õú€ú€ú€£üìå ùöÉùöíÃÅùöùùöûùöïùöò: ${dataa.resultado[0].title}
‚û§Õ°Õú€ú€ú€£üéØ Tempo‚ßΩ${dataa.resultado[0].timestamp}
‚û§Õ°Õú€ú€ú€£ü¶ä Descri√ß√£o‚ßΩ ${dataa.resultado[0].description}

 0:35 ‚îÅ‚ùç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ -5:32 ‚Üª ‚ä≤ ‚Ö° ‚ä≥ ‚Ü∫ VOLUME: ‚ñÅ‚ñÇ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá 100%

Bom diaaü§ôüèª
ƒ±lƒ±.lƒ±llƒ±lƒ±.ƒ±llƒ±..ƒ±lƒ±.lƒ±llƒ±lƒ±.ƒ±llƒ±\n\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`
                    loli.sendMessage(from, { image: { url: `${dataa.resultado[0].image}` }, caption: ytbrt }, { quoted: info })
                    loli.sendMessage(from, { audio: { url: `http://sabapi.tech:8090/api/dl/ytaudio?url=${dataa.resultado[0].url}&apikey=MrRootsFree` }, mimetype: "audio/mpeg", fileName: `${dataa.resultado[0].title}.mp4` }, { quoted: info })
                } catch (err) {
                    reply('‚ùå ùô¥ùöõùöõùöò ùöäùöò ùöòùöãùöùùöéùöõ ùöíùöóùöèùöòùöõùöñùöäùöåÃßùöòÃÉùöéùöú!')
                    console.log(err)
                }
            }
                break
                
                
case 'play9':
if (!q) return reply(`${pushname} Cad√™ o nome da m√∫sica?\nExemplo: ${prefix}${command} Mc paiva`);
try {
data = await fetchJson(`http://45.126.210.24:5056/api/ytsrc/videos?q=${q}&apikey=`+API_KEY_YURI)
loli.sendMessage(from,{image: {url: `${data.resultado[0].image}`}, caption: mess.playResult(data)}, {quoted:info})
loli.sendMessage(from, {audio: {url: `http://45.126.210.24:5056/api/dl/ytaudio?url=${data.resultado[0].url}&apikey=`+API_KEY_YURI}, fileName: data.resultado[0].title+'.mp3', mimetype: "audio/mpeg"}, {quoted: info}).catch(e => {
return reply(mess.error())
})
} catch(error) {
reply("Seja mais espec√≠fico, n√£o deu pra encontrar com apenas isto...");
}
break
                
case 'sandro': case 'simi':
if(!isGroup) return reply(msg.grupo)
try {
datasimi = await fetchJson(`https://api.simsimi.vn/v1/simtalk`, {method: 'POST',
headers: {'content-type': "application/x-www-form-urlencoded"},
body: "text="+q+"&lc=pt"})
return reply(datasimi.message)
} catch (e){
return reply("Resposta n√£o encontrada..")
}
break

case 'infiel':
if(!isGroup) return reply(enviar.msg.grupo)
if(!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  
async function InfielMsg() {
random = `${Math.floor(Math.random() * 110)}`
traic = random
infiel = random
if(infiel <= 15 ) {var trai = 'Parab√©ns, voc√™ √© fiel üëèüëè'}
else if(infiel == 16 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 17 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 18 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 19 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 20 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 21 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 22 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 23 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 24 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 25 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 26 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 27 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 28 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 29 ) {var trai = 'tenho minha desconfian√ßa ü§®'}
else if(infiel == 30 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 31 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 32 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 33 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 34 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 35 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 36 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 37 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 38 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 39 ) {var trai = 'voc√™ √© infiel as vezes...üò∂'}
else if(infiel == 40 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 41 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 42 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 43 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 44 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 45 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 46 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 47 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 48 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 49 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 50 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 51 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 52 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 53 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 54 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 55 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 56 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 57 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 58 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 59 ) {var trai = 'voc√™ √© viciado(a) em trair ü´£'}
else if(infiel == 60 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 61 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 62 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 63 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 64 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 65 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 66 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 67 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}     
else if(infiel == 68 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}     
else if(infiel == 69 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}     
else if(infiel == 70 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}    
else if(infiel == 71 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}    
else if(infiel == 72 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}     
else if(infiel == 73 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}     
else if(infiel == 74 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}     
else if(infiel == 75 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 76 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 77 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 78 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 79 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 80 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 81 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 82 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 83 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel == 84 ) {var trai = 'que isso, quer bater o record de trai√ß√£o? üò≥'}
else if(infiel >= 85 ) {var trai = 'vish... voc√™ √© t√£o fiel quanto o neymar...'}
var sandrokjk = [
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã0%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã10%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã20%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã30%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã40%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí„Äã50%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí„Äã60%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí„Äã70%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí„Äã80%*`,
`*ùöôùöéùöúùööùöûùöíùöúùöäùöóùöçùöò...*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí„Äã90%*`,
`*ùöåùöòùöñùöôùöïùöéùöùùöò*\n*„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà„Äã100%*`,
`*O quanto voc√™ √© infiel?*\n\n*„Äå @${sender_ou_n.split("@")[0]} „Äçseu n√≠vel de infiel √©: ‚ù∞ ${random}% ‚ù±*\n\n*${trai}*`
]
let { key } = await loli.sendMessage(from, {text: `*‚ù∞Pesquisando a sua ficha de infiel: „Äå @${sender_ou_n.split("@")[0]} „Äç aguarde...  ‚ù±*`, mentions: [sender_ou_n]}, {quoted: info})
setTimeout(async() => {
for (let i = 0; i < sandrokjk.length; i++) 
await loli.sendMessage(from, {text: sandrokjk[i], mentions: [sender_ou_n], edit: key });
}, 1500)
}
InfielMsg()
break

case 'wallpapers4k': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpapers4k.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break
          case 'videopralink':
          case 'gerarvideo':
            try {
              if (isQuotedVideo) {
                boij = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage
                  : info.message.videoMessage;
                const fetch = require('node-fetch');
                const FormData = require('form-data');
                const fs = require('fs');
                async function uploadVideoToTelegraph(videoBuffer) {
                  const form = new FormData();
                  form.append('file', videoBuffer, { filename: 'media' });

                  const response = await fetch('https://telegra.ph/upload', {
                    method: 'POST',
                    body: form,
                  });
                  const data = await response.json();
                  if (data && data[0] && data[0].src) {
                    return 'https://telegra.ph' + data[0].src;
                  } else {
                    throw new Error('Failed to retrieve the image URL from the response.');
                  }
                }
                const owgi = await getFileBuffer(boij, "video");
                const imageUrl = await uploadVideoToTelegraph(owgi);
                reply(imageUrl);
              } else {
                reply('marque o video')
              }
            } catch (e) {
              console.log(e)
              reply('error...')
            }
            break

case 'simih':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi) return reply('O modo Simi est√° ativo')
samih.push(from)
fs.writeFileSync('./arquivos/usuarios/simi.json', JSON.stringify(samih))
reply('Ativado com sucesso o modo simi neste grupo üòó')
} else if (Number(args[0]) === 0) {
if(!isSimi) return reply('J√° est√° Desativado.')
samih.splice(from, 1)
fs.writeFileSync('./arquivos/usuarios/simi.json', JSON.stringify(samih))
reply('Desativado modo simi com sucesso neste grupo üò°Ô∏è')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em')
}
break

case 'simih2':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi2) return reply('O modo Simi est√° ativo')
samih2.push(from)
fs.writeFileSync('./arquivos/fun√ß√µes/simi.json', JSON.stringify(samih2))
reply('Ativado com sucesso o modo simi neste grupo üòó, Este simih2 ele aprende as respostas e perguntas das pessoas, conforme vai falando, por isso, s√≥ recomendo utilizar ele no termux, pois no site ou lugar diferente do termux que voc√™ utilizar, ele n√£o vai armazenar os dados nescessarios')
} else if (Number(args[0]) === 0) {
if(!isSimi2) return reply('J√° est√° Desativado.')
samih2.splice(from, 1)
fs.writeFileSync('./arquivos/fun√ß√µes/simi.json', JSON.stringify(samih2))
reply('Desativado modo simi com sucesso neste grupo üò°Ô∏è')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em')
}
break

case 'figumemes':
if (!q) return reply("Insira a quantidade de figurinhas que deseja que eu envie!")
if (!Number(args[0]) || Number(q.trim()) > 10) return reply("Digite a quantidade de figurinhas que deseja que eu envie.. n√£o pode mais de 10..")
reply('As figurinhas ent√£o sendo enviadas no pv por motivo de spam...')
async function nometoque() {
loli.sendMessage(sender, { sticker: { url: `http://kayserapis.tech:4197/sticker/figu_memes?apikey=`+API_KEY_SHADOW } })}
for (i = 0; i < q; i++) {
await sleep(680)
nometoque()
}
break

case 'pornovid':{
if(!isPremium) return reply(msg.premium)
reply(`J√° estou enviando no pv ${pushname}`)
await loli.sendMessage(from, {react: { text: "üîû", key: info.key }})
  bla = JSON.parse(fs.readFileSync("./arquivos/sexv.json")) 
button = [
  {buttonId: `${prefix}pornovid`, buttonText: {displayText: 'üòà[suivant]üòà'}, type: 1}
]
buttonMessage = {
 video: {url: bla[Math.floor(Math.random() * bla.length)],
 quoted: info},
 caption: 'üîû',
 footer: `@${pushname}`,
 button: button,
 headerType: 1
}
loli.sendMessage(sender, buttonMessage)
}
break


case "art1":
loli.sendMessage(from, {text: `
 . ___________________
 ‚ñï‚ïÆ‚ï≠‚îª‚îª‚ïÆ‚ï≠‚îª‚îª‚ïÆ‚ï≠‚ñï‚ïÆ‚ï≤
 ‚ñï‚ïØ‚îÉ‚ï≠‚ïÆ‚îÉ‚îÉ‚ï≠‚ïÆ‚îÉ‚ï∞‚ñï‚ïØ‚ï≠‚ñè
 ‚ñï‚ï≠‚îª‚îª‚îª‚îõ‚îó‚îª‚îª‚îõ   ‚ñï  ‚ï∞‚ñè
 ‚ñï‚ï∞‚îÅ‚îÅ‚îÅ‚îì‚îà‚îà‚îà‚ï≠‚ïÆ‚ñï‚ï≠‚ïÆ‚ñè
 ‚ñï‚ï≠‚ïÆ‚ï∞‚î≥‚î≥‚î≥‚î≥‚ïØ‚ï∞‚ïØ‚ñï‚ï∞‚ïØ‚ñè
 ‚ñï‚ï∞‚ïØ‚îà‚îó‚îõ‚îó‚îõ‚îà‚ï≠‚ïÆ‚ñï‚ïÆ‚îà‚ñè`, quoted: info})
break

case "art2":
loli.sendMessage(from, {text: `
‚ñë‚ñë‚ïî‚ïê‚ïê‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïî‚ïê‚ïê‚ïó‚ñë‚ñë
 ‚ñë‚ïö‚ï£‚ñê‚ñê‚ï†‚ïù‚ñë‚ñë‚ïî‚ïê‚ïê‚ïó‚ñë‚ñë‚ïö‚ï£‚ñê‚ñê‚ï†‚ïù‚ñë
 ‚ñë‚ñë‚ïö‚ï¶‚ï¶‚ïù‚ñë‚ñë‚ïö‚ï£‚ñå‚ñå‚ï†‚ïù‚ñë‚ñë‚ïö‚ï¶‚ï¶‚ïù‚ñë‚ñë
 ‚ñë‚ñë‚ñë‚ïö‚ïö‚ñë‚ñë‚ñë‚ñë‚ïö‚ï¶‚ï¶‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïö‚ñë‚ñë‚ñë
 ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïù‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë `, quoted: info})
break

case "art3":
loli.sendMessage(from, {text: `
‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå
 ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñå
 ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñå
 ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñí‚ñê‚ñë‚ñÄ‚ñÄ‚ñÑ‚ñÄ‚ñÄ‚ñë‚ñå‚ñí‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñÑ
 ‚ñå‚ñå‚ñå‚ñå‚ñê‚ñí‚ñÑ‚ñå‚ñë‚ñÑ‚ñÑ‚ñÑ‚ñë‚ñê‚ñÑ‚ñí‚ñå‚ñê‚ñê‚ñê‚ñê `, quoted: info})
break

case "art4":
loli.sendMessage(from, {text: `
‚ñë‚ñÑ‚ñë‚ñà‚ñë‚ñë‚ñë‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñà‚ñë‚ñÑ‚ñë
 ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñà‚îÄ‚ñÄ‚îÄ‚ñÄ‚îÄ‚ñà‚ñë‚ñë‚ñë‚ñÑ‚ñÄ‚ñÑ‚ñÑ
 ‚ñë‚ñë‚ñë‚ñë‚ñÄ‚ñÑ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñÄ‚ñë‚ñë‚ñë‚ñë
 ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë
 ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë   `, quoted: info})
break

case "art5":
loli.sendMessage(from, {text: `
 ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí
 ‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí
 ‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí
 ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí
 ‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí
 ‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí
 ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí`, quoted: info})
break

case "art6":
loli.sendMessage(from, {text: `
‚îà‚îà‚îà‚ï±‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ï≤‚îà‚ï≠‚îÅ‚îÅ‚îÅ‚ïÆ‚îà‚îà
 ‚îà‚îà‚ñï‚îà‚ï≠‚îÅ‚ïÆ‚ï≠‚îÅ‚ïÆ‚îà‚ñè‚îÉZALTS.‚îÉ‚îà‚îà
 ‚îà‚îà‚ñï‚îà‚îÉ‚ï≠‚ïØ‚ï∞‚ïÆ‚îÉ‚îà‚ñè‚ï∞‚î≥‚îÅ‚îÅ‚ïØ‚îà‚îà
 ‚îà‚îà‚ñï‚îà‚ï∞‚ïØ‚ï≠‚ïÆ‚ï∞‚ïØ‚îà‚ñè‚îà‚îÉ‚îà‚îà‚îà‚îà‚îà
 ‚îà‚îà‚ñï‚îà‚îà‚îà‚îÉ‚îÉ‚îà‚îà‚îà‚ñè‚îÅ‚ïØ‚îà‚îà‚îà‚îà‚îà
 ‚îà‚îà‚ñï‚îà‚îà‚îà‚ï∞‚ïØ‚îà‚îà‚îà‚ñè‚îà‚îà‚îà‚îà‚îà‚îà‚îà
 ‚îà‚îà‚ñï‚ï±‚ï≤‚ï±‚ï≤‚ï±‚ï≤‚ï±‚ï≤‚ñè‚îà‚îà‚îà‚îà‚îà‚îà‚îà`, quoted: info})
break

case "art7":
loli.sendMessage(from, {text: `
‚îÄ‚îÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ‚îÄ‚ñí‚îÄ‚ñÑ‚ñí‚îÄ‚ñÑ‚ñí‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñÑ‚ñà‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ‚îÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚îÄ‚ñê‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ
 ‚îÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ‚îÄ‚ñí‚îÄ‚ñí‚îÄ‚ñí‚îÄ‚ñí‚îÄ‚îÄ‚îÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 `, quoted: info})
break

case "art8":
loli.sendMessage(from, {text: `
‚ï≤‚ï≤‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ‚ï±‚ï±
 ‚ï≤‚ï≠‚ïØ‚ï≠‚îÅ‚ïÆ‚îà‚ï≠‚îÅ‚ïÆ‚ï∞‚ïÆ‚ï±
 ‚ï≤‚îÉ‚îà‚îÉ‚îà‚ñä‚îà‚îÉ‚îà‚ñä‚îà‚îÉ‚ï±
 ‚ï≤‚îÉ‚îà‚îó‚îÅ‚îõ‚îà‚îó‚îÅ‚îõ‚îà‚îÉ‚ï±
 ‚ï±‚îÉ‚îà‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì‚îà‚îÉ‚ï≤
 ‚ï±‚îÉ‚îà‚îÉ‚îà‚îà‚ï≠‚îÅ‚ïÆ‚îÉ‚îà‚îÉ‚ï≤
 ‚ï±‚ï∞‚ïÆ‚ï∞‚îÅ‚îÅ‚îª‚îÅ‚îª‚ïØ‚ï≠‚ïØ‚ï≤
 ‚ï±‚ï±‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ‚ï≤‚ï≤`, quoted: info})
break

case "art9":
loli.sendMessage(from, {text: `
    ‚ï≠‚îÅ‚îÅ‚ïÆ‚îà‚îà‚îà‚ï≠‚îÅ‚îÅ‚ïÆ‚îà‚îà‚îà‚îà‚îà
 ‚îÉ‚ï≠‚ïÆ‚î£‚îÅ‚îÅ‚îÅ‚î´‚ï≠‚ïÆ‚îÉ‚îà‚ï≠‚î≥‚î≥‚ïÆ
 ‚ï∞‚îÅ‚î≥‚ïØ‚ñÜ‚îà‚ñÜ‚ï∞‚î≥‚îÅ‚ïØ‚îà‚îÉ‚îÉ‚îÉ‚îÉ
 ‚îà‚îà‚îÉ‚îì‚îà‚óØ‚îà‚îè‚îÉ‚îà‚îà‚ï≠‚î´‚îó‚îó‚îÉ
 ‚îà‚îà‚îÉ‚ï∞‚î≥‚î≥‚î≥‚ïØ‚îÉ‚îà‚îà‚îÉ‚îÉ‚ï≠‚îÅ‚îÉ
 ‚ï≠‚îÅ‚îª‚ïÆ‚îó‚îª‚îõ‚ï≠‚îª‚îÅ‚ïÆ‚ï∞‚î≥‚îÅ‚î≥‚ïØ
 ‚îÉ‚îà‚îà‚ï∞‚îÅ‚îÅ‚îÅ‚ïØ‚îà‚îà‚ï∞‚îÅ‚îõ‚îà‚îÉ‚îà`, quoted: info})
break

case "art10":
loli.sendMessage(from, {text: `
‚óã ÔºøÔºøÔºøÔºø
 „ÄÄ„ÄÄ   ‚à•„ÄÄ„ÄÄ„ÄÄ„ÄÄ|
 „ÄÄ„ÄÄ   DANIELüë®‚Äçüíª
 „ÄÄ„ÄÄ   ‚à•„ÄÄ„ÄÄ„ÄÄ„ÄÄ|
 „ÄÄ„ÄÄ   ‚à•Ôø£Ôø£Ôø£Ôø£
  ‚àßÔºø‚àß
 ( ÔΩ•œâÔΩ•‚à•
 ‰∏∂„ÄÄ„Å§Ôºê
  „Åó„ÉºÔº™ `, quoted: info})
break

case "art11":
loli.sendMessage(from, {text: `
A____A
 |„Éª„ÖÖ„Éª|
 |„Å£„ÄÄÔΩÉ|
 |„ÄÄ„ÄÄ„ÄÄ|
 |„ÄÄ„ÄÄ„ÄÄ|
 |„ÄÄ„ÄÄ„ÄÄ|
 |„ÄÄ„ÄÄ„ÄÄ|
 |„ÄÄ„ÄÄ„ÄÄ|
 UÔø£Ôø£U`, quoted: info})
break

case "art12":
loli.sendMessage(from, {text: `
‚ïÆ‚ï∞‚ïÆ‚ïÆ‚ñï‚ï≤‚ï∞‚ïÆ‚ï≠‚ïØ‚ï±‚ñè‚ï≠‚ï≠‚ï≠‚ï≠
 ‚ï∞‚ï∞‚ïÆ‚ï∞‚ï≠‚ï±‚ñî‚ñî‚ñî‚ñî‚ï≤‚ïÆ‚ïØ‚ï≠‚ïØ
 ‚îè‚îÅ‚îì‚îè‚î´‚ï≠‚ñÖ‚ï≤‚ï±‚ñÖ‚ïÆ‚î£‚îì‚ï≠‚ïë‚ïë‚ïë
 ‚ï∞‚î≥‚ïØ‚ï∞‚î´‚îó‚îÅ‚ï≠‚ïÆ‚îÅ‚îõ‚î£‚ïØ‚ïØ‚ïö‚ï¨‚ïù
 ‚ï≠‚îª‚ïÆ‚ï±‚ï∞‚ïÆ‚ï∞‚îÅ‚îÅ‚ïØ‚ï≠‚ïØ‚ï≤‚îä   ‚ïë
 ‚ï∞‚î≥‚î´‚ñî‚ï≤‚ï∞‚î≥‚îÅ‚îÅ‚î≥‚ïØ‚ï±‚ñî‚îä   ‚ïë
 ‚îà‚îÉ‚ï∞‚îÅ‚îÅ‚ï≤‚ñï‚ï≤‚ï±‚ñè‚ï±‚îÅ‚îÅ‚îÅ‚î¨‚ï®‚ïÆ
 ‚îà‚ï∞‚îÅ‚îÅ‚ïÆ‚îä‚ñï‚ï±‚ï≤‚ñè‚îä‚ï≠‚îÅ‚îÅ‚î¥‚ï•‚ïØ `, quoted: info})
break

case "art13":
loli.sendMessage(from, {text: `
.    ‚ñºÔø£Ôºû-‚Äï-ÔºúÔø£‚ñº
 „ÄÄ„ÄÄÔºπ„ÄÄ            Ôºπ
   /\   / „ÄÄ ‚óè    o  ‚óèÔºâ
 Ôºº  ÔΩú„ÄÄ „Å§„ÄÄ    „ÉΩ`, quoted: info})
break

case "art14":
loli.sendMessage(from, {text: `
üëäüèøüëáüèøüëáüèøüëáüèøüëáüèøüëáüèøüëáüèøüëáüèøüëáüèøüëáüèøüëäüèø
üëâüèøüëäüèæüëáüèæüëáüèæüëáüèæüëáüèæüëáüèæüëáüèæüëáüèæüëäüèæüëàüèø
üëâüèøüëâüèæüëäüèΩüëáüèΩüëáüèΩüëáüèΩüëáüèΩüëáüèΩüëäüèΩüëàüèæüëàüèø
üëâüèøüëâüèæüëâüèΩüëäüèºüëáüèºüëáüèºüëáüèºüëäüèºüëàüèΩüëàüèæüëàüèø
üëâüèøüëâüèæüëâüèΩüëâüèºüëäüèªüëáüèªüëäüèªüëàüèºüëàüèΩüëàüèæüëàüèø
üëâüèøüëâüèæüëâüèΩüëâüèºüëâüèªüè≥Ô∏è‚Äçüåà?üëàüèªüëàüèºüëàüèΩüëàüèæüëàüèø
üëâüèøüëâüèæüëâüèΩüëâüèºüëäüèªüëÜüèªüëäüèªüëàüèºüëàüèΩüëàüèæüëàüèø
üëâüèøüëâüèæüëâüèΩüëäüèºüëÜüèºüëÜüèºüëÜüèºüëäüèºüëàüèΩüëàüèæüëàüèø
üëâüèøüëâüèæüëäüèΩüëÜüèΩüëÜüèΩüëÜüèΩüëÜüèΩüëÜüèΩüëäüèΩüëàüèæüëàüèø
üëâüèøüëäüèæüëÜüèæüëÜüèæüëÜüèæüëÜüèæüëÜüèæüëÜüèæüëÜüèæüëäüèæüëàüèø
üëäüèøüëÜüèøüëÜüèøüëÜüèøüëÜüèøüëÜüèøüëÜüèøüëÜüèøüëÜüèøüëÜüèøüëäüèø`, quoted: info})
break

case "art15":
  loli.sendMessage(from, {text: `
  ‚îà‚îà‚ñï‚ï≤‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ï±‚ñè‚îà‚îà‚îà‚îà‚îà‚îà
‚îà‚îà‚îà‚ï≤‚ï±‚ï≠‚ï±‚ï≤‚ï±‚ï≤‚îà‚îà‚îà‚îà‚îà‚îà
‚îà‚ï±‚ñî‚ñî‚îà‚îä‚ñè‚ñï‚ñè‚ñï‚îà‚îà‚îà‚îà‚îà‚îà
‚ñï‚ñÇ‚ï±‚ñî‚ï≥‚ñî‚ï≤‚ñä‚ñè‚ñä‚ï±‚ñî‚ï≤‚ñî‚ï≤‚îà
‚îà‚îà‚îà‚îà‚ñè‚ñï‚ñè‚ñî‚ñî‚ñî‚ñï‚ñã‚ñï‚ñï‚ñã‚ñè
‚îà‚îà‚îà‚îà‚ï≤‚îà‚ï≤‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ï±‚îà
‚îà‚îà‚îà‚îà‚ñï‚ï≤‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ï±‚îà‚îà‚îà‚îà
‚îà‚îà‚îà‚ï±‚ñî‚ï≤‚ñï‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà
‚îà‚îà‚îà‚ï±‚ñè‚îà‚îà‚îà‚îà‚îà‚ï±‚ñî‚ñî‚ñî‚ñî‚ï≤‚îà‚îà‚îà‚îà
‚îà‚îà‚îà‚ñè‚ñè‚îà‚îà‚îà‚îà‚îà‚ñè‚ï≤‚ñï‚ñã‚ñï‚ñã‚ñè‚îà‚îà‚îà
‚îà‚îà‚îà‚ï≤‚ï≤‚îà‚îà‚îà‚îà‚îà‚ñè‚îà‚ñè‚îà‚ñî‚ñî‚ñî‚ñÜ‚îà‚îà
‚îà‚îà‚îà‚îà‚ï≤‚ñî‚ñî‚ñî‚ñî‚ñî‚ï≤‚ï±‚îà‚ï∞‚î≥‚î≥‚î≥‚ïØ‚îà‚îà
‚îà‚ï±‚ï≤‚ï±‚ï≤‚ñè‚îà‚îà‚îà‚îà‚îà‚îà‚ñï‚ñî‚ï∞‚îÅ‚ïØ‚îà‚îà‚îà
‚îà‚ñî‚ï≤‚ï≤‚ï±‚ï±‚ñî‚ï±‚ñî‚ñî‚ï≤‚ï≤‚ï≤‚ï≤‚îà‚îà‚îà‚îà‚îà‚îà
‚îà‚îà‚îà‚ï≤‚ï±‚ï≤‚ï±‚îà‚îà‚îà‚îà‚ï≤‚ï≤‚ñÇ‚ï≤‚ñÇ‚îà‚îà‚îà‚îà
‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚ï≤‚ï±‚ï≤‚ï±‚îà‚îà‚îà‚îà
  `, quoted: info})
break

case 'edit1': 

					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_api.jpg?text.0.text=${teks}&text.0.color=000000&text.0.font.family=Pacifico&text.0.font.weight=600&text.0.background.color=ffffff&text.0.outline.color=ffffff&text.0.outline.width=10&text.0.outline.blur=17`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break

case 'edit2':
                           
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis2.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=1%25&text.0.position.y=16%25&text.0.size=80&text.0.color=ff2772&text.0.opacity=67&text.0.font.family=Bangers&text.0.font.style=italic&text.0.background.opacity=50&text.0.outline.width=6`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break

case 'edit3':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis3.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=59%25&text.0.size=89&text.0.color=000000&text.0.opacity=71&text.0.font.family=Changa%20One&text.0.font.style=italic&text.0.background.opacity=10&text.0.outline.color=ffffff&text.0.outline.width=3`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break	
					
					case 'edit4':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=11%25&text.0.position.y=22%25&text.0.size=20&text.0.color=241b1b&text.0.opacity=33&text.0.font.family=Rock%20Salt&text.0.font.style=italic&text.0.background.opacity=49`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break	
					
					case 'edit5':
                   
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis5.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=1%25&text.0.position.y=22%25&text.0.align=left&text.0.size=59&text.0.font.family=Permanent%20Marker&text.0.outline.color=df00ff&text.0.outline.width=2&text.0.outline.blur=18`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break

case 'edit6':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis6.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.x=1%25&text.0.position.y=50%25&text.0.size=68&text.0.color=464646&text.0.opacity=51&text.0.font.family=Sigmar%20One&text.0.background.opacity=2&text.0.outline.color=ffffff&text.0.outline.width=2&text.0.outline.opacity=61`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break	
					
					case 'edit7':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis7.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.x=1%25&text.0.position.y=58%25&text.0.size=69&text.0.color=00ffea&text.0.opacity=37&text.0.font.family=Bangers&text.0.background.opacity=77&text.0.outline.color=ffffff&text.0.outline.width=2&text.0.outline.blur=20`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break

case 'edit8':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					//venomk = await getvenomk(`https://lollityp.sirv.com/venom_apis.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=47%25&text.0.size=99&text.0.color=ff0000&text.0.opacity=50&text.0.font.family=Cookie&text.0.font.style=italic&text.0.background.opacity=92&text.0.outline.width=23&text.0.outline.blur=24&text.0.outline.opacity=87`)
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis.jpg?w=640&h=640&text.0.text=Venom&text.0.position.gravity=north&text.0.position.y=53%25&text.0.size=96&text.0.color=ff0000&text.0.opacity=46&text.0.font.family=Shadows%20Into%20Light&text.0.font.style=italic&text.0.background.opacity=70&text.0.outline.width=9&text.0.outline.blur=52`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break					
					
					case 'edit9':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis9.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=50%25&text.0.size=68&text.0.color=ffffff&text.0.opacity=61&text.0.font.family=Tangerine&text.0.font.style=italic&text.0.background.opacity=61&text.0.outline.color=ff6f00&text.0.outline.width=9`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break

case 'edit10':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis10.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=62%25&text.0.size=63&text.0.color=004124&text.0.opacity=99&text.0.font.family=Permanent%20Marker&text.0.font.style=italic&text.0.background.color=feff00&text.0.outline.color=ffe8a3&text.0.outline.width=9&text.0.outline.blur=21`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break

case 'edit11':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis11.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=60%25&text.0.size=64&text.0.color=0071ff&text.0.font.family=Old%20Standard%20TT&text.0.font.style=italic&text.0.background.opacity=55&text.0.outline.color=00d0ff&text.0.outline.width=19&text.0.outline.blur=30`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break	
					
					case 'edit12':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis12.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=65%25&text.0.size=61&text.0.color=ff00e6&text.0.opacity=32&text.0.font.family=Chewy&text.0.font.style=italic&text.0.outline.width=6`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break	
					
					case 'edit13':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis13.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=63%25&text.0.size=68&text.0.color=ffffff&text.0.opacity=92&text.0.font.family=Permanent%20Marker&text.0.font.weight=800&text.0.outline.color=5dff00&text.0.outline.width=13&text.0.outline.blur=21`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break		
					
					case 'edit14':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis14.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=68%25&text.0.size=60&text.0.color=ffffff&text.0.font.family=Sigmar%20One&text.0.font.style=italic&text.0.background.opacity=17&text.0.outline.color=a99cff&text.0.outline.width=9&text.0.outline.blur=16`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break	
					
					case 'edit15':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis15.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=62%25&text.0.size=63&text.0.color=000000&text.0.font.family=Audiowide&text.0.font.style=italic&text.0.background.opacity=15&text.0.outline.color=ffffff&text.0.outline.width=9&text.0.outline.blur=33`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
					break	
					
					case 'edit16':
                    
					if (args.length < 1) return reply('qual o nome?')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					reply('*Estou fazendo, se der erro tente novamente ‚úì*')
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis16.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=58%25&text.0.size=99&text.0.color=fffefe&text.0.font.family=Permanent%20Marker&text.0.background.color=000000&text.0.outline.color=000000&text.0.outline.width=19&text.0.outline.blur=66`)
					loli.sendMessage(m.chat, { image: venomk }, { quoted: info})
			                break	
			               

          case 'antipv':
            if (!isCreator) return reply(`Apenas dono pode ativar/desativar essa fun√ß√£o..`)
            if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
            if (Number(args[0]) === 1) {
              if (isAntiPv) return reply('Ja esta ativo')
              antipv.push('Ativado')
              fs.writeFileSync('./arquivos/usuarios/antipv.json', JSON.stringify(antipv))
              reply('üåÄ Ativou com sucesso o recurso de Anti Privado üìù')
            } else if (Number(args[0]) === 0) {
              if (!isAntiPv) return reply('Ja esta Desativado')
              pesquisar = 'Ativado'
              processo = antipv.indexOf(pesquisar)
              while (processo >= 0) {
                antipv.splice(processo, 1)
                processo = antipv.indexOf(pesquisar)
              }
              fs.writeFileSync('./arquivos/usuarios/antipv.json', JSON.stringify(antipv))
              reply('‚ÄºÔ∏è Desativou com sucesso o recurso De ANTIPV‚úîÔ∏è')
            } else {
              enviar('1 para ativar, 0 para desativar')
            }
            break

case 'ttp':
if (!q) return reply(`*_‚ùïColoque o texto que voc√™ quiser!_*\n- *üßë‚Äçüè´ Por exemplo:* ${prefix + command} sandro`)
reagir(from, "üëª")
await sleep(1000)
reply('fazendo')
string = args.join(' ') || 'Texto indefinido'
post = `http://yurimodz-apis.xyz:44040/api/ttp?texto=${string}&apikey=Yurizinn200`
sendStickerFromUrl(from, post, {quoted: sasah}).catch(e => {
reply(mess.error())  
})
break


case 'attp':
if(!q.trim()) return reply(`*_‚ùïColoque o texto que voc√™ quiser!_*\n- *üßë‚Äçüè´ Por exemplo:* ${prefix + command} sandro`)
reagir(from, "üëª")
reply(`fazendo`)
loli.sendMessage(from, {sticker: {url: `http://yurimodz-apis.xyz:44040/api/attp?texto=${q}&apikey=Yurizinn200`}}, {quoted: info}).catch(e => {
return reply(mess.error());
})
break;

 
case 'attp1': 
case 'attp2': 
case 'attp3': 
case 'attp4': 
case 'attp5': 
case 'attp6': 
case 'attp7': 
case 'attp8': 
case 'attp9': 
case 'attp10': 
if(!q) return reply(`*_‚ùïColoque o texto que voc√™ quiser!_*\n- *üßë‚Äçüè´ Por exemplo:* ${prefix + command} sandro`)
reagir(from, "üëª")
reply('fazendo')
att = await getBuffer(`http://yurimodz-apis.xyz:1093/api/${command}?texto=${q}&apitoken=Yurizinn200`)
loli.sendMessage(from, {sticker: att}, {quoted: info})
break

case 'nome': // YURI MODZ DOMINA 
case 'cpf1': // YURI MODZ DOMINA 
case 'cpf2': // YURI MODZ DOMINA 
case 'cpf3': // YURI MODZ DOMINA 
case 'cpf4': // YURI MODZ DOMINA 
case 'cns': // YURI MODZ DOMINA 
case 'pai': // YURI MODZ DOMINA 
case 'mae': // YURI MODZ DOMINA 
case 'nascimento': // YURI MODZ DOMINA 
case 'telefone': // YURI MODZ DOMINA 
case 'telefone2': // YURI MODZ DOMINA 
case 'placa': // YURI MODZ DOMINA 
case 'cnpj': // YURI MODZ DOMINA 
case 'cep': // YURI MODZ DOMINA 
case 'ip': // YURI MODZ DOMINA 
case 'pis': // YURI MODZ DOMINA 
case 'titulo': // YURI MODZ DOMINA 
case 'email': // YURI MODZ DOMINA 
case 'moradores': // YURI MODZ DOMINA 
case 'score': // YURI MODZ DOMINA 
case 'rg': // YURI MODZ DOMINA 
case 'logs': // YURI MODZ DOMINA 
case 'parentes': // YURI MODZ DOMINA 
case 'bin': // YURI MODZ DOMINA 
case 'bank': // YURI MODZ DOMINA 
case 'gerar-cc': // YURI MODZ DOMINA 
if(!isPremium) return reply(enviar.msg.premium)
if (!q) return reply('Vai continuar sem a requisi√ß√£o?')
	api = await fetchJson(`http://yurimodz-apis.xyz:1093/api/consultas?type=${command}&query=${q}&apitoken=Yurizinn200`)
    loli.sendMessage(from, {text: `üìÑ *AKAME PUXADAS*\n\n${api.resultado}\n\n‚Ä¢ By: YURI MODZ\n‚Ä¢ User: ${pushname}`}, {quoted: info})
break

case 'play3':
try {
if(!q.trim()) return reply(`${prefix+command} link ou nome`);
reply("ENVIANDO!üéº..");
loli.sendMessage(from, {audio: {url:`https://api.bronxyshost.com.br/api-bronxys/play?nome_url=${q}&apikey=${API_KEY_DANIEL}`}, mimetype: "audio/mpeg"}, {quoted: info}).catch(e => {
ABC = `${"-\t".repeat(13)}\n\n`
for (var i of AB) {
ABC += `Titulo: ${i.titulo}\nUrl: ${i.url}\nTempo: ${i.tempo}\nPostado: ${i.postado}\n\nDescri√ß√£o: ${i.desc}\n\n`;
ABC += `${"-\t".repeat(13)}\n\n`
}
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break;

case 'playvideo':
loli.sendMessage(from, { react: { text: `üé•`, key: info.key }}) 
try {
if(!q.trim()) return reply(`${prefix+command} link ou nome`);
reply("ENVIANDO..V√çDEOüé•");
loli.sendMessage(from, {video: {url:`https://api.bronxyshost.com.br/api-bronxys/play_video?nome_url=${q}&apikey=${API_KEY_DANIEL}`}, mimetype: "video/mp4"}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break;


case 'criargp':          //case by: Bielzinho-bot
if (!isCreator) return reply(`Apenas dono pode ativar/desativar essa fun√ß√£o..`)
const gp = args.join(' ')
if (!gp) return reply('*Escreva o nome do grupo que vc quer criar....*')
var group = await loli.groupCreate(`${gp}`, [sender])
reply(`*Grupo criado com sucesso*\n*Nome do grupo :* *${gp}*`)
loli.sendMessage(group.gid, `Bem vindo ao grupo amigo(a)`, MessageType.text, {quoted: info})
break

          case 'walpaperanime':
            {
              json = JSON.parse(fs.readFileSync('./arquivos/wall.json').toString())
              random = json[Math.floor(Math.random() * json.length)]
              /*
              let proximo = [
                {buttonId: `${prefix + command}`, buttonText: {displayText: 'üçâPROXIMOüçâ'}, type: 1},
                ]
                */
              templateMassage = {
                image: {
                  url: random,
                  quoted: info
                },
                caption: `${command}`,
                footer: `${botName}`,
              }
              loli.sendMessage(from, templateMassage)
            }
            break
            
          case 'vazados':
            if (!isPremium) return reply(msg.premium)
            reply(`${pushname} enviando no seu pv olha la`)
            {
              json = JSON.parse(fs.readFileSync('./arquivos/sex/sex.json').toString())
              random = json[Math.floor(Math.random() * json.length)]
              /*
              let proximo = [
                {buttonId: `${prefix + command}`, buttonText: {displayText: 'üçâPROXIMOüçâ'}, type: 1},
                ]
                */
              templateMassage = {
                video: {
                  url: random,
                  quoted: info
                },
                caption: `${command}`,
                footer: `${botName}`,
              }
              loli.sendMessage(sender, templateMassage)
            }
            break
            
                      case 'editfreefire': case 'editefreefire': case 'editff':
            reply(`${pushname} enviando`)
            {
              json = JSON.parse(fs.readFileSync('./arquivos/freefire.json').toString())
              random = json[Math.floor(Math.random() * json.length)]
              /*
              let proximo = [
                {buttonId: `${prefix + command}`, buttonText: {displayText: 'üçâPROXIMOüçâ'}, type: 1},
                ]
                */
              templateMassage = {
                video: {
                  url: random,
                  quoted: info
                },
                caption: `${command}`,
                footer: `${botName}`,
              }
              loli.sendMessage(from, templateMassage)
            }
            break
            
            case 'freefire':
            reply(`${pushname} enviando no seu pv olha la`)
            {
              json = JSON.parse(fs.readFileSync('./arquivos/sex/freefire.json').toString())
              random = json[Math.floor(Math.random() * json.length)]
              /*
              let proximo = [
                {buttonId: `${prefix + command}`, buttonText: {displayText: 'üçâPROXIMOüçâ'}, type: 1},
                ]
                */
              templateMassage = {
                video: {
                  url: random,
                  quoted: live
                },
                caption: `${command}`,
                footer: `${botName}`,
              }
              loli.sendMessage(sender, templateMassage)
            }
            break


case 'audiolento': 
case 'slow':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'audiorapido':  
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=95100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Erro')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'grave2':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=1.6,asetrate=22100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'grave':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'estourar': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=90:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'bass': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=20:width_type=o:width=2:g=15 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'bass2': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=94:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'vozmenino':  
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('espere')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a atempo=1.06,asetrate=44100*1.25 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
loli.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
break

case 'tabela':
if(verificado === true) {
reply(`Enviando no Privado...`)
await loli.sendMessage(sender, {text: tabela(prefix, botName)}, {quoted: info})
} else {
await loli.sendMessage(sender, {text: tabela(prefix, botName)}, {quoted: info})  
}
break 

case 'checkativo':
case 'check':
if (!isGroup) return reply(msg.grupo)
if(groupIdscount.indexOf(from) < 0) return reply('O bot n√£o tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque o n√∫mero que deseja puxar a atividade')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(numbersIds.indexOf(mentioned[0]) >= 0) {
var indnum = numbersIds.indexOf(mentioned[0])
mentions(`ñ£ò‚Éü·óí Consulta das atividade de\nñ£ò‚Éü·óí @${mentioned[0].split('@')[0]} no grupo\nñ£ò‚Éü·óí Mensagens: ${countMessage[ind].numbers[indnum].messages}\nñ£ò‚Éü·óí Comandos dados: ${countMessage[ind].numbers[indnum].cmd_messages}`, mentioned, true)
}
else {
mentions(`‚ãÜ‚Éü€ú€£·≠™‚û£ Consulta da atividade de ‚ãÜ‚Éü€ú€£·≠™‚û£ @${mentioned[0].split('@')[0]} no grupo\n‚ãÜ‚Éü€ú€£·≠™‚û£ Mensagens: 0\n‚ãÜ‚Éü€ú€£·≠™‚û£ Comandos dados: 0`, mentioned, true)
}
break

case 'atividades':  
try{
if(!isGroupAdmins) return reply(msg.adm)
if(isGroup && groupIdscount.indexOf(from) >= 0) {
var ind = groupIdscount.indexOf(from)
teks = `*Atividade dos membros do grupo:*\n\n`
mem = []
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.id) >=0) {
var indnum = numbersIds.indexOf(obj.id)
teks += `*‚Ä¢ Membro:* @${countMessage[ind].numbers[indnum].id.split('@')[0]}\n*‚Ä¢ Comandos:* ${countMessage[ind].numbers[indnum].cmd_messages}\n*‚Ä¢ Mensagens:* ${countMessage[ind].numbers[indnum].messages}\n\n----------------------------------\n\n`
} else {
teks += `*‚Ä¢ Membro:* @${obj.id.split('@')[0]}\n*‚Ä¢ Comandos:* 0\n*‚Ä¢ Mensagens:* 0\n\n----------------------------------\n\n`
}
mem.push(obj.id)
}
loli.sendMessage(from, {text: teks, contextInfo:{mentionedJid: mem}}, {quoted: info})
} else return reply('*Nada foi encontrado*')
} catch (e){
console.log(e)
}
break

case 'cases':
if(!isCreator) return reply("Voc√™ n√£o √© dono para utilizar este comando...")
try {
const listCases = () => {
const fileContent = fs.readFileSync("index.js").toString();
const caseNames = fileContent.match(/case\s+'(.+?)'/g);
if (caseNames) {
return caseNames.map((caseName, index) => `${index + 1}. ${caseName.match(/'(.+?)'/)[1]}`).join('\n');
} else {
reply("nenhuma case encontrada.") } }
loli.sendMessage(from, { text: listCases() }, { quoted: live });
} catch (e) {
console.log(e)
reply('ocorreu um erro ao obter as cases.') }
break

case 'regraspp':  
if(!isGroupAdmins) return reply('Qual foi membro comum?')
txtz = `„Äê·ØΩíã®üì∑:ùëÜùëí ùëéùëùùëüùëíùë†ùëíùëõùë°ùëíùëö ùëôùëñùë•ùëúùë†üåö¬ª¬∞„Äë
íã®Œá‡£≠‡£™Ãáüî•…¥·¥è·¥ç·¥á:
íã®Œá‡£≠‡£™Ãáüî•…™·¥Ö·¥Ä·¥Ö·¥á:
íã®Œá‡£≠‡£™Ãáüî• Ä·¥Ä ô·¥Ä:
*A·¥ò Ä·¥ás·¥á…¥·¥õ·¥á-s·¥á s·¥á «´·¥ú…™s·¥á Ä.*
ùôèùòºùôÇùôé‚û≠◊Ç·úî‡†≠
 ‚îÄ‚îÄ‚ïå‚ïå‚ïå‚îà‚ä∞‚òÖ‚ä±‚îà‚ïå‚ïå‚ïå‚îà‚îÄ
‚ùå ENTROU NO 
GRUPO INTERAJA, N√ÉO PRECISAMOS DE ENFEITES,INATIVOS SERAO REMOVIDOS ‚ùå* 

/Ôπã<,Ô∏ª‚ï¶‚ï§‚îÄ “â - -----üí• 
/Ôπã üÖ¥ üÖ±üÖ¥üÖº üÜÖüÖ∏üÖΩüÖ≥üÖæ üÜÇüÖ¥üÜÑüÜÇ üÖµüÖ∏üÖªüÖ∑üÖæüÜÇ üÖ≥üÖ∞ üÖøüÜÑüÜÉüÖ∞`
loli.sendMessage(from, {text: txtz}, {quoted: info})
break

          case 'roubar': case 'rename':
            {
              (async function () {
                var legenda = q ? q?.split("/")[0] : ` `
                var autor = q ? q?.split("/")[1] : q?.split("/")[0] ? '' : `  `
                if (isMedia && !info.message.videoMessage || isQuotedImage) {
                  var encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
                  rane = getRandom('.' + await getExtension(encmedia.mimetype))
                  buffimg = await getFileBuffer(encmedia, 'image')
                  fs.writeFileSync(rane, buffimg)
                  rano = getRandom('.webp')
                  exec(`ffmpeg -i ${rane} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${rano}`, (err) => {
                    fs.unlinkSync(rane)
                    // "android-app-store-link": "https://play.google.com/store/search?q=%2B55%2094%209147-2796%20%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5&c=apps",
                    var json = {
                      "sticker-pack-name": legenda,
                      "sticker-pack-publisher": autor
                    }
                    var exifAttr = Buffer.from([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x57, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00])
                    var jsonBuff = Buffer.from(JSON.stringify(json), "utf-8")
                    var exif = Buffer.concat([exifAttr, jsonBuff])
                    exif.writeUIntLE(jsonBuff.length, 14, 4)
                    let nomemeta = Math.floor(Math.random() * (99999 - 11111 + 1) + 11111) + ".temp.exif"
                    fs.writeFileSync(`./${nomemeta}`, exif)
                    exec(`webpmux -set exif ${nomemeta} ${rano} -o ${rano}`, () => {
                      loli.sendMessage(from, { sticker: fs.readFileSync(rano) }, { quoted: info })
                      fs.unlinkSync(nomemeta)
                      fs.unlinkSync(rano)
                    })
                  })
                } else if (isMedia && info.message.videoMessage.seconds < 11 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 35) {
                  var encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
                  rane = getRandom('.' + await getExtension(encmedia.mimetype))
                  buffimg = await getFileBuffer(encmedia, 'video')
                  fs.writeFileSync(rane, buffimg)
                  rano = getRandom('.webp')
                  await ffmpeg(`./${rane}`)
                    .inputFormat(rane.split('.')[1])
                  exec(`ffmpeg -i ${rane} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 200:200 ${rano}`, (err) => {
                    fs.unlinkSync(rane)
                    let json = {
                      "sticker-pack-name": legenda,
                      "sticker-pack-publisher": autor
                    }
                    let exifAttr = Buffer.from([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x57, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00])
                    let jsonBuff = Buffer.from(JSON.stringify(json), "utf-8")
                    let exif = Buffer.concat([exifAttr, jsonBuff])
                    exif.writeUIntLE(jsonBuff.length, 14, 4)
                    let nomemeta = "temp.exif"
                    fs.writeFileSync(`./${nomemeta}`, exif)
                    exec(`webpmux -set exif ${nomemeta} ${rano} -o ${rano}`, () => {
                      loli.sendMessage(from, { sticker: fs.readFileSync(rano) }, { quoted: info })
                      fs.unlinkSync(nomemeta)
                      fs.unlinkSync(rano)
                    })
                  })
                } else {
                  reply(`MARQUE ALGUMA FOTO OU VIDEO DE ATE 9 SEGUNDOS\n\nEXEMPLO:\n\n.roubar Sandro/MD`)
                }
              })().catch(e => {
                console.log(e)
                reply("Hmm deu erro")
                try {
                  if (fs.existsSync("temp.exif")) fs.unlinkSync("temp.exif");
                  if (fs.existsSync(rano)) fs.unlinkSync(rano);
                  if (fs.existsSync(media)) fs.unlinkSync(media);
                } catch { }
              })
            }
            break
                       
case 'banco': { //bay; ALEMAO BAY: ZENITSU//

var salldo = checkATMuser(sender)


loli.sendMessage(from, {image: fs.readFileSync('./loli/image/banco.jpg'), caption: `
„Äé üë§ „Äè *NOME: ${pushname}*
„Äé üèõÔ∏è „Äè *BANCO: NUBANK*
„Äé üíµ „Äè *DINHEIRO: ${salldo}*
„Äé üè° „Äè *CASA: ${iscasa? "SIM ‚úÖ" : "N√ÉO ‚ùå"}*
„Äé ü§ë „Äè *RICO: ${istagrico? "SIM ‚úÖ" : "N√ÉO ‚ùå"}*
`},{quoted: info})
}
break

	case 'minerar': {
		// Verificar se o arquivo JSON existe, e criar se n√£o existir
		if (!fs.existsSync('./loli/rpg/pescarCooldown.json')) {
			fs.writeFileSync('./loli/rpg/pescarCooldown.json', JSON.stringify({}));
		}
	
		// Carregar o objeto pescarCooldown do arquivo JSON
		const pescarCooldown = JSON.parse(fs.readFileSync('./loli/rpg/pescarCooldown.json', 'utf8'));
	
		const currentTimePescar = Date.now();
		const lastPescarTime = pescarCooldown[sender] || 0;
		const timeSinceLastPescar = currentTimePescar - lastPescarTime;
		const pescarCooldownTime = 5 * 60 * 1000; // 5 minutos em milissegundos
	
		if (timeSinceLastPescar < pescarCooldownTime) {
			const remainingTime = (pescarCooldownTime - timeSinceLastPescar) / 1000;
			return reply(`Aguarde ${remainingTime.toFixed(0)} segundos antes de minerar novamente.`);
		}
	
		reply(`*OL√Å ${pushname}, AGUARDE AGUARDE 5 SEGUNDA PARA CONCLU√çR A MINERA√á√ÉO**`);
			// Atualizar o tempo da √∫ltima pescaria no arquivo JSON
		pescarCooldown[sender] = currentTimePescar;
		fs.writeFileSync('./loli/rpg/pescarCooldown.json', JSON.stringify(pescarCooldown));
		await sleep(5000);
		lagoostas = Math.floor((Math.random() * 150) + 40);
		carranguejos = Math.floor((Math.random() * 150) + 30);
		camaroes = Math.floor((Math.random() * 150) + 40);
		mexilhao = Math.floor((Math.random() * 150) + 50);
		var resultadoresultadoo = lagoostas + carranguejos + camaroes + mexilhao;
	
		addFilter(from);
	
		try {
			picc = await loli.profilePictureUrl(m.chat, "image");
		} catch(e) {
			picc = 'https://telegra.ph/file/9651f2a3a24c15ef71dd1.mp4';
		}
	
		ds = await getBuffer(picc);
	
		let thumbInfo = `
	*‚îè‚îÅ‚îÄ‚îÄ *„ÄåÔ∏è üî∞  M I N E  üî∞ „Äç*  ‚îÄ‚îÅ‚îì*
	*‚îÇ‚ñ¢ Total de PEDRAS: ${lagoostas}*
	*‚îÇ‚ñ¢ Total de DIAMANTES: ${carranguejos}*
	*‚îÇ‚ñ¢ Total de OUROS: ${camaroes}*
	*‚îÇ‚ñ¢ Total de FERRO: ${mexilhao}*
	*‚îÇ‚ñ¢ *Resultado Final: ${resultadoresultadoo}*
	*‚îó‚îÅ‚îÄ‚îÄ *„ÄåÔ∏è üî∞  M I N E  üî∞ „Äç*  ‚îÄ‚îÅ‚îõ*
	[„ïö] *Isso significa que foi adicionado em sua carteira R$${resultadoresultadoo},00 em coins!*
	`;
	
 loli.sendMessage(from,  {image: ds, caption: `${thumbInfo}`}, {quoted: info});
		addKoinUser(sender, +resultadoresultadoo);
	
	
	
		break;
	}
	
case 'trabalhar':
minerag = Math.floor((Math.random() * 10) * 150);
loli.sendMessage(from, {image: fs.readFileSync('./loli/image/trabalhar.jpg'), caption: `

*VC TRABALHOU E GANHA ${minerag}*

`},{quoted: info})
addKoinUser(sender, + minerag)
break

case 'money':
 loli.sendMessage(from, {react: {text: `üíµ`, key: info.key}}) 
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/7d1a76c9d628836f27e8d.mp4`}, gifPlayback: true, caption: `
‚ï≠‚îÅ‚û™_MONEY_
‚îÇ‚ó¶‚ûõùó°ùóºùó∫ùó≤ : ${pushname}
‚îÇ‚ó¶‚ûõùó°ùòÇùó∫ùó≤ùóøùóº : ${sender.split("@")[0]}
‚îÇ‚ó¶‚ûõùóóùó∂ùóªùóµùó≤ùó∂ùóøùóº : ${checkATMuser(sender)}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
`
},{quoted: info})
 break
 
case 'fundomenu':
if(!Creator) return reply(msg.dono)
if(!isQuotedImage) return reply("Marque uma imagem")
if((isMedia && !info.message.videoMessage || isQuotedImage) && !q.length <= 1) { 
reply(`opa, cria! j√° estou trocando a foto do menu para voc√™..`)
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info.message.imageMessage
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
logoslink.logo.splice([])
fs.writeFileSync('./loli/image/menu.jpg', JSON.stringify(logoslink, null, 2))
setTimeout(() => {
logoslink.logo.push(res)
fs.writeFileSync('./loli/image/menu.jpg', JSON.stringify(logoslink, null, 2))
reply(`a foto do menu foi alterada com sucesso para: ${logoslink.logo}`)
}, 1000)
} else {
reply(`mande uma imagem com o comando ${prefix + command} para trocar a foto de todos os menus..`)
}
break

case 'fuguete':{
if (!isGroup) return reply('Comando apenas para grupo!') 
const doublez = Math.floor(Math.random() * 5) + 1
const prolxxp = doublez + Number(args[0])
const ganhardidinho = Math.floor(Math.random() * 50) * 100
const perdidinho = Math.floor(Math.random() * 50) * 100
const perda = Math.floor(Math.random() * 7) + 1
const ganha = Math.floor(Math.random() * 7) + 1
const dinheiro_ = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro_) 
const quantidader = `50`
if (checkxpr <= quantidader) return reply(`tu ta sem dinheiro`(quantidader, checkxpr))
if (Number(args[0]) < 1) return reply(`Qual o valor que voc√™ deseja apostar?`)
if (isNaN(args[0])) return reply(`Digite "${prefix}fuguete 100" (desse jeito sem nenhuma v√≠rgula ou letras por favor.`)
if (doublez == 1) {
valoh3 = Number(args[0])
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/02aee2582cf5c3485b239.mp4`}, gifPlayback: true, caption: `
*VC PERDEU 00.${perda}.X TENTE MAIS UMA VEZ*

*DINHEIRO PERDIDO:* *${valoh3}*
`,
})
confirmATM(sender, valoh3)
} else if (doublez == 2) {
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/f2aa6670076884015f862.mp4`}, gifPlayback: true, caption: `
*POR POUCO VC NAO PERDE VC GANHOU 00.${ganha}.X*

*DINHEIRO GANHO:* *${prolxxp}*
`,
})
addKoinUser(sender, prolxxp, dinheiro_) 
} else if (doublez == 3) {
valoh4 = Number(args[0])
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/02aee2582cf5c3485b239.mp4`}, gifPlayback: true, caption: `
*VC OTARIO VC PERDEU 00.${perda}.X*

*DINHEIRO PERDIDO:* *${valoh4}*
`,
})
confirmATM(sender, valoh4)
} else if (doublez == 4) {
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/f2aa6670076884015f862.mp4`}, gifPlayback: true, caption: `
*SORTE VC GANHOU 00.${ganha}.X*

*DINHEIRO GANHO:* *${prolxxp}*
`,
})
addKoinUser(sender, prolxxp, dinheiro_) 
} else if (doublez == 5) {
valoh5 = Number(args[0])
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/02aee2582cf5c3485b239.mp4`}, gifPlayback: true, caption: `
*ACONSELHO VC A NAO JOGAR MAIS* *VC PERDEU 00.${perda}.X*

*DINHEIRO PERDIDO:* *${valoh5}*
`,
})
confirmATM(sender, valoh5)
} else if (doublez == 6) {
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/f2aa6670076884015f862.mp4`}, gifPlayback: true, caption: `
*OLHA SORTE MAIS UMA VEZ VC GANHOU 00.${ganha}.X*

*DINHEIRO GANHO:* *${prolxxp}*
`,
})
addKoinUser(sender, prolxxp, dinheiro_)

}
}
break 

case 'anime1':
    if (args.length < 1) return reply(`${prefix}${command} e digite o seu nome`)
    teks = body.slice(6)
    if (teks.length > 18) return reply('O texto √© longo, at√© 18 caracteres') //maximo de caracteres
    buffer =(`https://lollityp.sirv.com/venom_apis2.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=1%25&text.0.position.y=16%25&text.0.size=80&text.0.color=ff2772&text.0.opacity=67&text.0.font.family=Bangers&text.0.font.style=italic&text.0.background.opacity=50&text.0.outline.width=6`)
    loli.sendMessage(sender, {image: {url: buffer }, caption: ' *Plaquinha feita COM SUCESSO*'})
    await loli.sendMessage(from, { react: { text: `üòö`, key: info.key }})
    reply (`olha seu pv hehe`)
    break


case 'pescar':
pescando = Math.floor((Math.random() * 10) * 150);
const lagostas = `${Math.floor(Math.random() * 105)}`
const caranguejos = `${Math.floor(Math.random() * 105)}`
const mexilh√£o = `${Math.floor(Math.random() * 105)}`
const peixe = `${Math.floor(Math.random() * 105)}`

loli.sendMessage(from, {image: fs.readFileSync('./loli/image/pescar.jpg'), caption: `
‚îè‚îÅ‚îÄ‚îÄ *„ÄåÔ∏è üé£Ô∏è ùêè ùêÑ ùêí ùêÇ ùêÄ üé£ „Äç*  ‚îÄ‚îÅ‚îì
‚îÇ‚ñ¢ Total de Lagostas: ${lagostas}
‚îÇ‚ñ¢ Total de Caranguejos: ${caranguejos}
‚îÇ‚ñ¢ Total de peixe:${peixe}
‚îÇ‚ñ¢ Total de Mexilh√£o: ${mexilh√£o}
‚îó‚îÅ‚îÄ‚îÄ *„ÄåÔ∏è üé£Ô∏è ùêè ùêÑ ùêí ùêÇ ùêÄ üé£ „Äç*  ‚îÄ‚îÅ‚îõ



E GANHOU ${pescando}R$ üòâ üé£ `},{quoted: info})

addKoinUser(sender, + pescando)

break

	case 'churrasco': {
	// Verificar se o arquivo JSON existe, e criar se n√£o existir
		if (!fs.existsSync('prenderCooldown.json')) {
			fs.writeFileSync('prenderCooldown.json', JSON.stringify({}));
		}
	
		// Carregar o objeto prenderCooldown do arquivo JSON
		const prenderCooldown = JSON.parse(fs.readFileSync('prenderCooldown.json', 'utf8'));
	
		const currentTimeprender = Date.now();
		const lastprenderTime = prenderCooldown[sender] || 0;
		const timeSinceLastprender = currentTimeprender - lastprenderTime;
		const prenderCooldownTime = 5 * 60 * 1000; // 5 minutos em milissegundos
	
		if (timeSinceLastprender < prenderCooldownTime) {
			const remainingTime = (prenderCooldownTime - timeSinceLastprender) / 1000;
			return reply(`Aguarde ${remainingTime.toFixed(0)} segundos vc estar preso`);
		}
		// Verificar se o arquivo JSON existe, e criar se n√£o existir
		if (!fs.existsSync('./loli/rpg/churrascoCooldown.json')) {
			fs.writeFileSync('./loli/rpg/churrascoCooldown.json', JSON.stringify({}));
		}
	
		// Carregar o objeto churrascoCooldown do arquivo JSON
		const churrascoCooldown = JSON.parse(fs.readFileSync('./loli/rpg/churrascoCooldown.json', 'utf8'));
	
		const currentTimeChurrasco = Date.now();
		const lastChurrascoTime = churrascoCooldown[sender] || 0;
		const timeSinceLastChurrasco = currentTimeChurrasco - lastChurrascoTime;
		const churrascoCooldownTime = 5 * 60 * 1000; // 5 minutos em milissegundos
	
		if (timeSinceLastChurrasco < churrascoCooldownTime) {
			const remainingTime = (churrascoCooldownTime - timeSinceLastChurrasco) / 1000;
			return reply(`Aguarde ${remainingTime.toFixed(0)} segundos antes de fazer outro churrasco.`);
		}
	
		reply(`*OL√Å [ ${pushname} ] AGUARDE 5 SEGUNDOS*`)
		await sleep (5000);
		contrafile = Math.floor((Math.random() * 150) + 50);
		assinhadefrango = Math.floor((Math.random() * 150) + 30);
		filebigno = Math.floor((Math.random() * 150) + 40);
		pikanha = Math.floor((Math.random() * 150) + 50);
		var resultado1 = contrafile + assinhadefrango + filebigno + pikanha;
	
		addFilter(from);
	
		try {
			picc = await zenitsu.profilePictureUrl(m.chat, "image");
		} catch(e) {
			picc = 'https://telegra.ph/file/2bf2e198407f9b8bfbcd0.jpg';
		}
	
		ds = await getBuffer(picc);
	
		let thumbInfo = `
	*‚îè *„ÄåÔ∏èüçñ ùêÇ ùêá ùêî ùêë ùêë ùêÄ ùêí ùêÇ ùêé üçñ„Äç  ‚îì*
	*‚îÇ‚ñ¢ Carne - Picanha Argentina: ${contrafile}*
	*‚îÇ‚ñ¢ Carne - Contra Fil√©: ${assinhadefrango}*
	*‚îÇ‚ñ¢ Carne - Asinhas de Frango: ${filebigno}*
	*‚îÇ‚ñ¢ Carne - Fil√© Mignon: ${pikanha}*
	*‚îó „ÄåÔ∏èüçñ ùêÇ ùêá ùêî ùêë ùêë ùêÄ ùêí ùêÇ ùêé üçñ„Äç  ‚îõ*
	[„ïö] *Foram vendidas hoje por voc√™ em nosso a√ßougue: ${resultado1} pe√ßas de carne por voc√™. Parab√©ns!*
	[„ïö] *Isso significa que foi adicionado em sua carteira R$${resultado1},00 em coins!*
	`;
	
		loli.sendMessage(from,  {image: ds, caption: `${thumbInfo}`}, {quoted: info});
		addKoinUser(sender, +resultado1);
	
		// Atualizar o tempo do √∫ltimo churrasco no arquivo JSON
		churrascoCooldown[sender] = currentTimeChurrasco;
		fs.writeFileSync('./loli/rpg/churrascoCooldown.json', JSON.stringify(churrascoCooldown));
	
		break;
	}

case 'alugarcasa':
if(!JSON.stringify(casa).includes(sender)) return reply(`VOCE NAO TEM UMA CASA USE  ${prefix}casa`)
casaluge = Math.floor((Math.random() * 10) * 30);
casapronta = Math.floor((Math.random() * 10) * 500);
reply(`VOCE ALUGOU A CASA POR ${casaluge} DIAS\n\nVOCE GANHOU  R$${casapronta}`)
addKoinUser(sender, + casapronta)
break

case 'casa':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `300000`
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR CASA*\n\n*PRE√áO: ${quantidader}*`)
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
casa.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/casa/casa.json', JSON.stringify(casa))
addKoinUser(sender, - quantidader)
reply(`*CASA COMPRADO COM SUCESSO* üòÉ\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'hero': case 'lot':
try {
ppimg = await zenitsu.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://telegra.ph/file/b5427ea4b8701bc47e751.jpg'
}
try {
var conselho = palavras[Math.floor(Math.random() * palavras.length)]
const nivelgado = ['1','2','3','4','5','6','7','8','9']
const nivelgado2 = ['1','2','3','4','5','6','7','8','9'] 
const nivelgador = nivelgado[Math.floor(Math.random() * (nivelgado.length))]
const nivelgado2r = nivelgado2[Math.floor(Math.random() * (nivelgado2.length))] 
const puta = ['1','2','3','4','5','6','7','8','9']
const puta2 = ['1','2','3','4','5','6','7','8','9'] 
const putar = puta[Math.floor(Math.random() * (puta.length))]
const putar2 = puta2[Math.floor(Math.random() * (puta2.length))] 
const gostosura = ['1','2','3','4','5','6','7','8','9']
const gostosura2 = ['1','2','3','4','5','6','7','8','9'] 
const gostosurar = gostosura[Math.floor(Math.random() * (gostosura.length))]
const gostosurar2 = gostosura2[Math.floor(Math.random() * (gostosura2.length))] 
gadop = `${Math.floor(Math.random() * 100)}`
const programa = Math.ceil(Math.random() * 10000)
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/b1febb2db7a727eee9d7d.mp4`}, gifPlayback: true, caption: ` 
‚îè‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„Äåüï¥Ô∏è„Äç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îì
‚îÇ          *SEU INVENT√ÅRIO*
‚îÇ
‚îÇ *${isCarab? "‚õëÔ∏è" : "‚ùå"} : CAPACETE*
‚îÇ
‚îÇ *${isRoupab? "üëî" : "‚ùå"} : PALITOR*
‚îÇ
‚îÇ *${iscasa? "üè°" : "‚ùå"} : CASA*
‚îÇ
‚îÇ *${isCaussa? "üëñ" : "‚ùå"} : CAL√áA*
‚îÇ
‚îÇ *${isaguacoco? "üíß" : "‚ùå"} : AGUA DE COCO*
‚îÇ
‚îÇ *${isSapato? "üëû" : "‚ùå"} : SAPATO*
‚îÇ
‚îÇ *${isespada? "‚öî" : "‚ùå"} : ESPADA*
‚îÇ
‚îÇ
‚îÇ
‚ï†‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÇ             *TAGS*
‚ï†‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÇ
‚îÇ
‚îÇ> RICO: ${istagrico? "SIM ‚úÖ" : "N√ÉO ‚ùå"}
‚îÇ
‚îÇ
‚îó‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„Äåüï¥Ô∏è„Äç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îõ
`},{quoted: info})
} catch (e) {
console.log(e)
}
break

case 'tomaraguacoco':
if(!JSON.stringify(aguacoco).includes(sender)) return reply(`VOCE NAO TEM AGUA DE COCO INFINITO USE  ${prefix}aguacoco`)
aguadd = Math.floor((Math.random() * 4) * 3);
reply(`VOCE TOMOU UMA AGUA DE COCO\n\nMATOU [ ${aguadd}% ] DA SUA SEDE `)
break

case 'aguacoco':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `30000`
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR AGUA DE COCO INFINITO*\n\n*PRE√áO: ${quantidader}*`)
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
aguacoco.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/agua/aguacoco.json', JSON.stringify(aguacoco))
addKoinUser(sender, - quantidader)
reply(`AGUA DE COCO COMPRADA COM SUCESSO* üåç\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'pornovidd':{
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss')
const dattaa = moment.tz('America/Sao_Paulo').format('DD/MM/YY');
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `4000`
if (checkxpr <= quantidader) return reply(`*[‚ùó] Desculpe ${pushname} voc√™ n√£o tem dinhero suficiente para efetuar a compra de $4000*`)
if(!isPremium) return reply(enviar.msg.premium)
reply(`J√° estou enviando no pv ${pushname}`)
await loli.sendMessage(from, {react: { text: "üòà", key: info.key }})
  bla = JSON.parse(fs.readFileSync("./loli/sexv.json")) 
loli.sendMessage(sender, {video: {url: bla[Math.floor(Math.random() * bla.length)]}},{quoted: info})
addKoinUser(sender, - quantidader)
}
break

case 'capacete':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `30000`
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR A CAPACETE DE TRABALHO*\n\n*PRE√áO: ${quantidader}*`)
carab.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/carab/carab.json', JSON.stringify(carab))
addKoinUser(sender, - quantidader)
reply(`*CAPACETE COMPRADO COM SUCESSO*\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'calssa':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `3000`
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR CAL√áA DE TRABALHO*\n\n*PRE√áO: ${quantidader}*`)
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
caussa.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/caussa/caussa.json', JSON.stringify(caussa))
addKoinUser(sender, - quantidader)
reply(`*CAL√áA COMPRADA COM SUCESSO*\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'sapatos':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `3000`
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR SAPATOS DE TRABALHO*\n\n*PRE√áO: ${quantidader}*`)
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
sapato.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/sapato/sapato.json', JSON.stringify(sapato))
addKoinUser(sender, - quantidader)
reply(`*SAPATO COMPRADO COM SUCESSO*\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'palitor':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `3000`
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR PALITOR DE TRABALHO*\n\n*PRE√áO: ${quantidader}*`)
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
palitor.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/palitor/palitor.json', JSON.stringify(palitor))
addKoinUser(sender, - quantidader)
reply(`*PALITOR COMPRADO COM SUCESSO*\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'totag':
case 'cita':
case 'hidetag':
if(!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if (!isGroupAdmins && !SoDono) return reply('Voc√™ precisa ser ADM pra utilizar este comando')
membros = (groupId, membros1) => {
array = []
for (let i = 0; i < membros1.length; i++) {
array.push(membros1[i].id)
}
return array
}
var yd = membros(from, groupMembers)
if((isMedia && !m.message.videoMessage || isQuotedSticker) && args.length == 0) {
media = isQuotedSticker ? m.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage : m.message.stickerMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'sticker')
fs.writeFileSync(rane,img)
fig = fs.readFileSync(rane)
var options = {
sticker: fig,  
mentions: yd
}
loli.sendMessage(from, options)
} else if ((isMedia && !m.message.videoMessage || isQuotedImage) && args.length == 0) {
media = isQuotedImage ? m.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : m.message.imageMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'image')
fs.writeFileSync(rane,img)
buff = fs.readFileSync(rane)
loli.sendMessage(from, {image: buff, mentions: yd}, {quoted: info})
} else if ((isMedia && !m.message.videoMessage || isQuotedVideo) && args.length == 0) {
media = isQuotedVideo ? m.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : m.message.videoMessage
rane = getRandom('.'+await getExtension(media.mimetype))
vid = await getFileBuffer(media, 'video')
fs.writeFileSync(rane,vid)
buff = fs.readFileSync(rane)
loli.sendMessage(from, {video: buff, mimetype: 'video/mp4',mentions: yd}, {quoted: info})
} else if ((isMedia && !m.message.videoMessage || isQuotedAudio) && args.length == 0) {
media = isQuotedAudio ? m.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : m.message.audioMessage
rane = getRandom('.'+await getExtension(media.mimetype))
aud = await getFileBuffer(media, 'audio')
fs.writeFileSync(rane,aud)
buff = fs.readFileSync(rane)
loli.sendMessage(from, {audio: buff, mimetype: 'audio/mp4', ptt:true,mentions: yd}, {quoted: info})
} else if ((isMedia && !m.message.videoMessage || isQuotedDocument) && args.length == 0) {
media = isQuotedDocument ? m.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : m.message.documentMessage
rane = getRandom('.'+await getExtension(media.mimetype))
doc = await getFileBuffer(media, 'document')
fs.writeFileSync(rane,doc)
buff = fs.readFileSync(rane)
loli.sendMessage(from, {document: buff, mimetype : 'text/plain',mentions: yd},{quoted: info})
} else if(body){
if(q.length < 1) return reply('Citar oq vey?')
loli.sendMessage(from, {text: body.slice(command.length + 2), mentions: yd})
} else {
reply(`Responder imagem/documento/gif/adesivo/√°udio/v√≠deo com legenda ${prefix + command}`)
}
break

case 'tagrico':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `6000`
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR TAG DE RICO*\n\n*PRE√áO: ${quantidader}*`)
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
tagrico.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/tagrico/tagrico.json', JSON.stringify(tagrico))
addKoinUser(sender, - quantidader)
reply(`*TAG RICO COMPRADO  COM SUCESSO* üí∞üí≤üíµ\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'gerarcpff':
const dinheiropi = checkATMuser(sender)
const checkxprpi = checkATMuser(sender, dinheiropi) 
const quantidaderpi = `4000`
if (checkxprpi < quantidaderpi) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR*\n\n*PRE√áO: ${quantidaderpi}*`)
cp1 = `${Math.floor(Math.random() * 300) + 600}`
cp2 = `${Math.floor(Math.random() * 300) + 600}`
cp3 = `${Math.floor(Math.random() * 300) + 600}`
cp4 = `${Math.floor(Math.random() * 30) + 60}`
cpf = `${cp1}.${cp2}.${cp3}-${cp4}`
await loli.sendMessage(from, {text: `CPF gerado com sucesso : ${cpf}`}, {quoted: info})
addKoinUser(sender, - quantidaderpi)
break

case 'animal':
  if (!q) {
    reply(`Desculpe, parece que voc√™ n√£o forneceu o nome do animal. Voc√™ pode usar como exemplo: *${prefixo + comando} gato*`);
     } else {
    const animais = [{ "nome": "C√£o", "especie": "Canis lupus familiaris", "habitat": "Dom√©stico", "dieta": "Carn√≠voro" }, { "nome": "Gato", "especie": "Felis catus", "habitat": "Dom√©stico e selvagem", "dieta": "Carn√≠voro" }, { "nome": "Cavalo", "especie": "Equus ferus caballus", "habitat": "Dom√©stico e selvagem", "dieta": "Herb√≠voro" },
  {
    "nome": "Lobo",
    "especie": "Canis lupus",
    "habitat": "Florestas, tundras, montanhas e campos abertos",
    "dieta": "Carn√≠voro"
  },
  {
    "nome": "√Åguia",
    "especie": "Aquila chrysaetos",
    "habitat": "Florestas, montanhas e √°reas costeiras",
    "dieta": "Carn√≠voro"
  },
  {
    "nome": "Macaco",
    "especie": "Macaca fascicularis",
    "habitat": "Florestas tropicais e subtropicais",
    "dieta": "On√≠voro"
  },
  {
    "nome": "Canarinho",
    "especie": "Serinus canaria",
    "habitat": "Ilhas Can√°rias e Madeira",
    "dieta": "Gran√≠voro"
  },
  {
    "nome": "Tubar√£o",
    "especie": "Carcharodon carcharias",
    "habitat": "Oceanos tropicais e subtropicais",
    "dieta": "Carn√≠voro"
  },
  {
    "nome": "Formiga",
    "especie": "Formicidae",
    "habitat": "Todos os continentes, exceto a Ant√°rtida",
    "dieta": "On√≠voro"
  },
  {
  "nome": "Tartaruga",
  "especie": "Testudines",
  "habitat": "Aqu√°tico e terrestre",
  "dieta": "On√≠voro"
},
{
  "nome": "Corvo",
  "especie": "Corvus corax",
  "habitat": "Florestas, campos e cidades",
  "dieta": "Carn√≠voro"
},
{
  "nome": "Girafa",
  "especie": "Giraffa camelopardalis",
  "habitat": "√Åfrica",
  "dieta": "Herb√≠voro"
},
{
  "nome": "Elefante",
  "especie": "Elephas maximus",
  "habitat": "√Åsia e √Åfrica",
  "dieta": "Herb√≠voro"
},
{
  "nome": "Golfinho",
  "especie": "Delphinus delphis",
  "habitat": "Oceanos e mares",
  "dieta": "Carn√≠voro"
},
    {
      "nome": "Le√£o",
      "especie": "Panthera leo",
      "habitat": "√Åfrica subsaariana",
      "dieta": "Carn√≠voro"
    },
    {
      "nome": "Tigre",
      "especie": "Panthera tigris",
      "habitat": "√Åsia",
      "dieta": "Carn√≠voro"
    },
    {
      "nome": "Gorila",
      "especie": "Gorilla gorilla",
      "habitat": "√Åfrica Central e Ocidental",
      "dieta": "Herb√≠voro"
    },
    {
      "nome": "Papagaio",
      "especie": "Psittaciformes",
      "habitat": "Am√©rica do Sul, Am√©rica Central, √Åfrica e Oceania",
      "dieta": "On√≠voro"
    },
    {
      "nome": "Coelho",
      "especie": "Oryctolagus cuniculus",
      "habitat": "Europa, √Åfrica e Austr√°lia",
      "dieta": "Herb√≠voro"
    },
      { "nome": "Vaca", "especie": "Bos taurus", "habitat": "Dom√©stico", "dieta": "Herb√≠voro" }, { "nome": "Porco", "especie": "Sus scrofa domestica", "habitat": "Dom√©stico", "dieta": "On√≠voro" }, { "nome": "Galinha", "especie": "Gallus gallus domesticus", "habitat": "Dom√©stico", "dieta": "On√≠voro" }, { "nome": "Pato", "especie": "Anas platyrhynchos domesticus", "habitat": "Dom√©stico e selvagem", "dieta": "On√≠voro" }, { "nome": "Ganso", "especie": "Anser anser domesticus", "habitat": "Dom√©stico e selvagem", "dieta": "Herb√≠voro" }, { "nome": "Peru", "especie": "Meleagris gallopavo", "habitat": "Dom√©stico", "dieta": "On√≠voro" }, { "nome": "Coelho", "especie": "Oryctolagus cuniculus", "habitat": "Dom√©stico e selvagem", "dieta": "Herb√≠voro" }];
    const animal = animais.find(a => a.nome.toLowerCase() === q.toLowerCase());
       if (animal) {
       reply(`*‚Ä¢ Nome:* ${animal.nome}\n*‚Ä¢ Esp√©cie:* ${animal.especie}\n*‚Ä¢ Habitat:* ${animal.habitat}\n*‚Ä¢ Dieta:* ${animal.dieta}`);
       } else {
       reply("Animal n√£o encontrado.")}}
       break;
       
case 'wallpapers4k': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpapers4k.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperanimes': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpaperanimes.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperbranco': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpapersbranco.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break
l
case 'wallpapervermelho': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpapervermelho.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapervermelho`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperverde': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpaperverde.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperverde`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperazul': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpaperazul.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperazul`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperroxo': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpaperoxo.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperoxo`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperamarelo': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpaperamarelo.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperamarelo`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperrosa': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/wallpaperosa.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperosa`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break


case 'wallpapershinobu': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/shinobu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapershinobu`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/SHINOBU/fb10ed54c286b52d7e5f22f5b465274c.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperobanai': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/obanai.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperobanai`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/OBANAI/f437d7615e55a1804f637f7151769ee9.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'telefone':
case 'telefone2':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ FRANKY BOT  - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 5511959391525\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ FRANKY BOT  - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéO Telefone Deve Conter 11 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé ${prefix+ command} 73999197974\n‚îÇ‚ïé \n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`http://nexus.vortexuscloud.com:4283/api/consultas?type=tel1&query=73999197974&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {//By: Licht San
console.log(error)
}
break

case 'wallpapergyutaro': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/gyutaro.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapergyutaro`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/GYUTARO/fdcde69d36595bfd6b7671adcd510761.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpapertomioka': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/tomioka.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertomioka`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TOMIOKA/f9572e842eb8b67f089c259459394b35.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperuzui': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/uzui.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperuzui`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/UZUI/f67c5a0a822808ac770ad49472ccc14f.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpapermitsuri': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/mitsuri.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapermitsuri`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/MITSURI/fd16399b5c80072c8deee4f87bf5993e.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperdaki': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/daki.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperdaki`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/DAKI/fb8d18f68edd43d1ef752337784cf98f.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperkanao': {
//by Daniel >\<
if (!dinheiros) return reply(enviar.msg.dinheiro)
data = fs.readFileSync('./loli/mais/kanao.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperkanao`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/KANAO/fbe10876319abaabc0a63f53f2121904.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpapergyenia': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/gyenia.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapergyenia`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/GYENIA/fe251cb53add17e1aa7509d59d8490f9.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright By Sigma-MD`
, buttons: buttons, headerType: 4}
loli.sendMessage(info.chat, buttonMessage,{quoted: info})
}
break

case 'wallpapertamayo': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/tamayo.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertamayo`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TAMAYO/ffb690c3d847c4e7bd539b5bd81d2271.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperdouma': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/douma.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperdouma`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/DOUMA/f75946301ba1edd8934d50aa8b1ffc58.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpapersanemi': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/sanemi.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapersanemi`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/SANEMI/ffcb83d47e6fcaad697077c139a37890.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpapertokito': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/tokito.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertokito`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TOKITO/ffac2e76c9de3818aca9c4032a109084.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperSigma': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/zenitsu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperSigma`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/Sigma/e4f78ec55881a632e4e1cc3948a970c9.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperenmu': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/enmu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperenmu`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/ENMU/ff9f048986711075883534c60efb3787.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperinosuke': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/inosuke.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperinosuke`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/INOSUKE/f8ecfcc2bb254000ad05f83586517adc1.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpapermuzan': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/muzan.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapermuzan`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/MUZAN/f4c5e0ea5adc28e758506648e1f08107.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperkokushibou': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/kokushibou.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperkokushibou`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/KOKUSHIBOU/fdebc314e66ab36f00eb5f8705f21d2b.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperzenitsu': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/zenitsu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperzenitsu`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/ZENITSU/fda6066353d57465fac5b029a6afa082.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright By Sigma-MD`
, buttons: buttons, headerType: 4}
loli.sendMessage(info.chat, buttonMessage,{quoted: info})
}
break

case 'wallpapertanjiro': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/tanjiro.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertanjiro`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TANJIRO/0ee8d9c8ab5e795f4cc6d96dd5c65e8f.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpaperakaza': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/akaza.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperakaza`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/AKAZA/f637dd31731a8117a33ec5da8e335352.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'wallpapergyomei': {
//by Daniel >\<
data = fs.readFileSync('./loli/mais/gyomei.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapergyomei`, buttonText: {displayText: '‚òî ùêèùêëùêéÃÅùêóùêàùêåùêé ‚òî'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/GYOMEI/f4369b05134a1b3c2da0b548b876c112.jpg`);
loli.sendMessage(from, {image: imagem, caption: `${thumbInfo}`},{quoted: info})
}
break




case 'narutoedits': {
data = fs.readFileSync('./loli/mais/editsnaruto.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`‚ÇäÀö.‡≥É‡≥Äùë¨ùë´ùë∞ùëªùë∫‚ú∞ùëµùë®ùëπùëºùëªùë∂·çù÷Ø÷ü‚ãÜ‚Å∫Àñ‚∏ôÃ≠‚ùõ‚óå*Ã•‚Çä\nüë§ ùòöùò∞ùò≠ùò™ùò§ùò™ùòµùò¢ùò•ùò∞ ùò±ùò∞ùò≥: ${pushname}\n`]
var taikin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
tst = await getBuffer(randKey.result)
let thumbInfo = `${taikin}`;
loli.sendMessage(from, {video: tst, caption: `${thumbInfo}`},{quoted: info})
}
break			       


case 'jujutsuedits': {
data = fs.readFileSync('./loli/mais/editsjujutsu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`‚ÇäÀö.‡≥É‡≥Äùë¨ùë´ùë∞ùëªùë∫ ùêâùêîùêâùêîùêìùêíùêî·çù÷Ø÷ü‚ãÜ‚Å∫Àñ‚∏ôÃ≠‚ùõ‚óå*Ã•‚Çä\nüë§ ùòöùò∞ùò≠ùò™ùò§ùò™ùòµùò¢ùò•ùò∞ ùò±ùò∞ùò≥: ${pushname}\nDeseja mais? Clica em pr√≥xima-edit`]
var taikin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
tst = await getBuffer(randKey.result)
let thumbInfo = `${taikin}`;
loli.sendMessage(from, {video: tst, caption: `${thumbInfo}`},{quoted: info})
}
break

case 'itachiedits': {
data = fs.readFileSync('./loli/mais/edits.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`‚ÇäÀö.‡≥É‡≥Äùë¨ùë´ùë∞ùëªùë∫·çù÷Ø÷ü‚ãÜ‚Å∫Àñ‚∏ôÃ≠‚ùõ‚óå*Ã•‚Çä\nüë§ ùòöùò∞ùò≠ùò™ùò§ùò™ùòµùò¢ùò•ùò∞ ùò±ùò∞ùò≥: ${pushname}\nDeseja mais? Clica em pr√≥xima-edit`]
var taikin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
tst = await getBuffer(randKey.result)
let thumbInfo = `${taikin}`;
loli.sendMessage(from, {video: tst, caption: `${thumbInfo}`},{quoted: info})
}
break         

case 'imunes':
loli.sendMessage(from, {image: fs.readFileSync('./loli/image/menu.jpg'), caption: `


ùôíùôÉùòºùôèùôéùòºùôãùôã ùôÑùôâùôàùôêùôâùôÄS


Whatsapp Taggima v3 Database
Database :
http://www.mediafire.com/file/yk8juklr067pbcf/Database_Taggima-1.zip/file
GB Pro Inmune
Download:
https://www.mediafire.com/file/6d8ubkmzpucz9g8/GB_Pro_iMUNE.apk/file

WhatsApp 2.20.152 Inmune
Download :
https://www.mediafire.com/file/lutjayzytetgrxv/WhatsApp_2.20.152_sign.apk/file

WA Fsociety V1
Download :
https://www.mediafire.com/file/zk313rzp23atavu/WA%25E2%2580%25A2Fsociety_V1_IMUNE.apk/file

WA Fsociety V2
Download :
https://www.mediafire.com/file/lutjayzytetgrxv/WhatsApp_2.20.152_sign.apk/file

TAGGIMA V19
Download :
https://www.mediafire.com/file/lutjayzytetgrxv/WhatsApp_2.20.152_sign.apk/file

Âª¥„Å≥’á”É‚º¨_·ú†‚ùπ‚ÜØü•Äüî• 2.20.164
Download :
https://www.mediafire.com/file/e411qdku6onc5zv/%E5%BB%B4%E3%81%B3%D5%87%D3%83%E2%BC%AC_%E1%9C%A0%E2%9D%B9%E2%86%AF%F0%9F%A5%80%F0%9F%94%A5+2.20.164.apk/file

KAWhatsApp Inumne
Download :
https://drive.google.com/file/d/1h1jeIP6R-hN-P0LtgWz8pAFFG0i_ntg4/view

XO WhatsApp Inmune
Download :
https://www.mediafire.com/file/24587ex7gn7rx4g/XQ_WhatsApp.apk/file

‚ú™‡Æì‡ØÄ‚Äå„É†‚ÄåÍô≥·∞Ø‚É™‚úµ‚É™‡∏™‡£ºùñìùñâùñä·∑ù‡£ºùñó·∑ßùñò·∑üùñîùñì‚Äå‚úµ·∞Ø‚É™Íô≥.whatsapp2017.apk
Download :
https://drive.google.com/file/d/1GXIH38yUJ1ilBHFpC9LwzhT3DrZtcVp6/view

‚áù‚Äå‡øá‡Æì‡ØÄ‚Äå„É†ÍßÅÍâ£Íã´Íè∏-ÍÅíÍã´ÍÅπ ‚≠êÔ∏è‚óè·¥ò·∑Æ·¥Ä‚Äå·¥Ñ‚Äå·¥ç‚Äå·¥Ä‚Äå…¥·∑†‚öñÔ∏è ‚óè‚ö†Ô∏èüö∏ÍßÇWhatspp antiban whatspp
Download :
https://drive.google.com/file/d/175TB6sUelm_0oYlW1T7N6TouT0pirohn/view

2.20.193 INFO MODS
Download :
https://www.mediafire.com/file/btt4jkipnjtffv2/AHMANET+INFOMODS.apk/file

‚úû ÷Ü‰πà‰∫á‰πà·ú∞‚∑Ä’á ·üú‚Ñô‚Ç≥‚±≤∆ù ‚úû
Download :
https://www.mediafire.com/file/a7ssr0fdp4m23dp/%25E2%259C%259E_%25D6%2586%25E4%25B9%2588%25E4%25BA%2587%25E4%25B9%2588%25E1%259C%25B0%25E2%25B7%2580%25D5%2587_%25E1%259F%259C%25E2%2584%2599%25E2%2582%25B3%25E2%25B1%25B2%25C6%259D_%25E2%259C%259E.apk/file

MFC WhatsApp Imune V6_2.20.135 + Databases
Download :
http://www.mediafire.com/file/83xtf82q8m9mwrg/MFC_WhatsApp_Imune_V6_2.20.135.apk/file

`},{quoted: info})

break

case 'netflix':
const netflix = require('./loli/mais/netflix.json')
if (netflix.length === 0) {
    loli.sendMessage(from, 'Desculpe, n√£o h√° mais contas dispon√≠veis no momento.');
  } else {
    const randomIndex1 = Math.floor(Math.random() * netflix.length);
    const conet = netflix[randomIndex1];
    netflix.splice(randomIndex1, 1);
    fs.writeFileSync('./loli/mais/netflix.json', JSON.stringify(netflix, null, 2));
    loli.sendMessage(from, { image: { url: 'https://telegra.ph/file/ea66a4b0e47f3bcccebfd.jpg' }, caption: `
    > Lembre-se: teste a conta para ver se tem acesso ou n√£o, algumas contas n√£o t√™m mais acesso v√°lido, mas voc√™ pode solicita propriet√°rio para uma base de uma nova conta, boa sorte.

    
    > Estoque: ${netflix.length} contas restantes
    
    > Login: ${conet.login}
    
    > Senha: ${conet.senha}
    
    *CREDITOS*: Mamede Carlos
    `, mentions: [sender] }, { quoted: info });
  }
break

case 'puxarcase':
try{
if (!isCreator) return loli.sendMessage(from, {text: 'somente dono'})
reply('- Calma ae amigo(a), j√° estou enviando o comando / case para voc√™..')
const getCase = (cases) => {
return 'case '+`'${cases}'`+fs.readFileSync("./index.js").toString().split('case \''+cases+'\'')[1].split("break")[0]+"break"
}
await sleep(500)
msgSemQuoted(`${getCase(q)}`)
} catch(e) {
console.log("[GETCASE] - ‚ùåÔ∏è Comando n√£o encontrado! ‚ùå")
reply('‚ùåÔ∏è Comando n√£o encontrado! ‚ùåÔ∏è')
}
break

case 'cpf11':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ AQUA BOT - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé ñ¢àUse: ${prefix}BuyPrem\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ AQUA BOT - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéCpf Deve Conter 11 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé${prefix+ command} 03244275222\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
cpf = await fetchJson(`http://nexus.vortexuscloud.com:4283/api/consultas?type=cpf1&query=${q}&apitoken=Dkp2ubeJP6`)
loli.sendMessage(from, {image: {url: `${logocapa}`}, caption: `‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ AQUA BOT - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n\n${cpf.resultado}\n\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`}, {quoted: info})
} catch (error) {//By: Licht San
console.log(`Vish Acho que Broxou`)
}
break

case 'minerardima':
case 'minerardiamante':
const minerardima = `${Math.floor(Math.random() * 105)}`

loli.sendMessage(from, {image: fs.readFileSync('./loli/image/diamante.jpg'), caption: `

	*‚îè „ÄåÔ∏è ‚õèÔ∏è MINERIOS ‚õèÔ∏è* „Äç  
	*‚îÇ*
	*‚îÇ‚ñ¢ üíé DIAMANTE* ${minerardima}
  *‚îÇ*
	*‚îó „ÄåÔ∏è‚õèÔ∏è MINERIOS ‚õèÔ∏è*„Äç  
	`},{quoted: info})


break

case 'lava':
case 'thunder': 
case 'thunderv2':  
case 'neongreen':	
case 'neon':  
case 'neon1':  
case 'neon3d':  
case 'demongreen':   
case 'metalfire':  
case 'rainbow':	  
case 'gelo':
case 'halloween':  
case 'lapis':  
case 'glitch':  
case 'glitch2':   
case '3dgold': 
case 'neon3d':   
case 'transformer':  
case '3dstone':
case 'fiction':
case 'cattxt':
case 'neondevil':
case 'demonfire':
case 'colaq':
case 'luxury':
case 'berry':
case 'matrix':
case 'horror':
case 'nuvem':
case 'neon3':
case 'neve':
case 'areia':
case 'vidro':
case 'style':
case 'blood':
case 'pink':
case 'carbon':
case 'metalblue': 
case 'jeans':  
case 'jokerlogo':   
case 'natal': 
case 'ossos':  
case 'asfalto':	
case '3ddragon':
case 'esmeralda':
case 'break':  
case 'hologram':  
case 'deepsea':
case 'narutologo2':
textin = args.join(" ")
if(!textin) return reply(mess.syntaxLogos())
reply('enviando')
bla = await fetchJson(`http://45.126.210.24:5056/api/${command}?texto=${textin}&apikey=YuriModz2025`)
dllink = await getBuffer(bla.resultado)
loli.sendMessage(from, {image: dllink}, {quoted: info}).catch(e =>{
reply("Erro ao criar sua logo! Tente novamente mais tarde.")  
})
break

case "watercolor":
case "1917":
case "multicolor":
case "generator":
case "naturalleaves":
case "candycane":
case "christmas":
case "merrychristmas":
case "3ddeep":
case "drug":
case "americanflag":
case "scifi":
case "wonderful":
case "holiday":
case "technology":
case "winter":
case "sandsummer":
case "sandwriting":
case "sandengraved":
case "summerysand":
case "glue":
case "dark":
case "galaxystyle":
case "minion":
case "horrorgift":
case "holographic":
case "deluxe":
case "glossyblue":
case "deluxegold":
case "glossycarbon":
case "fabric":
case "neontext":
case "halloweenfire":
case "metaldark":
case "darkgold":
case "joker":
case "wicker":
case "firework":
case "steeltext":
case "goldfoil":
case "ultragloss":
case "denimtext":
case "stargreen":
case "captain":
case "toxic":
case "ninjalogo":
case "rainbowequalizer":
case "peridot":
case "rock":
case "purpleshiny":
case "robotr2":
textin = args.join(" ")
if(!textin) return reply(mess.syntaxLogos())
reply('enviando')
bla = await fetchJson(`http://45.126.210.24:5056/api/textpro/${command}?texto=${textin}&apikey=YuriModz2025`)
dllink = await getBuffer(bla.resultado)
loli.sendMessage(from, {image: dllink}, {quoted: info}).catch(e =>{
reply("Erro ao criar sua logo! Tente novamente mais tarde.")  
})
break

case 'pig':
case 'urso':
case 'seta':
case 'papel':
case 'grafit4':
case 'blackpinkepo':
case 'areia':
case 'balckpingv2':
case 'brotoluz':
case 'borracha':
case 'brilhante':
case 'diabo': 
case 'crack':
case 'vietnam':
case 'goldt':
case 'biscoito':
if(!q) return reply("Ei, Cad√™ o Texto?")
reply("Estou Gerando, Aguarde um Pouquinho...")
loli.sendMessage(from,
 {image: {url: `https://tohsaka.onrender.com/api/ephoto/${command}?nome=${q}&apikey=tohsaka`}}, 
{quoted: info})
break

case 'autoban':
if (!isGroup) return reply(msg.grupo)
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if(isAdeusCara) return reply("J√° est√° ativado.")
var ind = dbids.indexOf(from)
if(isAdeusCara) {
adeuscara[ind].actived = true
} else {
adeuscara.push({
groupId: from,
actived: true,
number: []
})
}
fs.writeFileSync('./arquivos/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`Ativou com sucesso o recurso de autoban neste grupo‚úîÔ∏è`)
} else if (Number(args[0]) === 0) {
if(!isAdeusCara) return reply("J√° est√° Desativado.")  
var ind = dbids.indexOf(from)		
if(isAdeusCara) {
adeuscara[ind].actived = false
} else {
adeuscara.push({
groupId: from,
actived: false,
number: []
})
}
fs.writeFileSync('./arquivos/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`Desativou com sucesso o recurso de autoban neste grupo‚úîÔ∏è`)
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'pix'://by Daniel
if (args.length < 1) return reply(`Modo certo de se usar ${prefix}pix @ | valor`)
      
                    if (!q.includes('/')) return reply(`Voc√™ precisa colocar o valor que deseja transferir.\n\nExemplo:\n\n*${prefix}Pix @pessoa / 3000*`)
                const tujuan = q.substring(0, q.indexOf('/') - 1)
                const jumblah = q.substring(q.lastIndexOf('/') + 1)
                if(isNaN(jumblah)) return await reply('O valor precisa est√° em n√∫meros...')
                if (jumblah < 50 ) return reply(`transfr√™ncia m√≠nima e de 50 Coins`)
                if (checkATMuser(sender) < jumblah) return reply(`Voc√™ n√£o tem Coins suficiente para fazer uma transfer√™ncia, voc√™ precisa ter no min√≠mo 1000 de Coins`)
                const tujuantf = `${tujuan.replace("@", '')}@s.whatsapp.net`
                fee = 0.00 *  jumblah //IMPOSTO CADA 1 DE DINHERO, ALMENTA E CAI NA SUA CONTA, TODA VEZ QU√ä ALGU√âM FAZER TRANSFERENCIA
                hasiltf = jumblah - fee
                addKoinUser(tujuantf, hasiltf)
                confirmATM(sender, jumblah)
                addKoinUser('553172595934@s.whatsapp.net', fee)
                
                pingaa = `*TRANSFER√äNCIA REALIZADA*

[üöπ]> ORIGEM: *${sender.split("@")[0]}*
[üóΩ]> DESTINARIO: *${tujuan}*
[üíµ]> VALOR DA TRANSFER√äNCIA: *${jumblah}*
[üóí]> BANCO: *SANDRO BANK*
[‚ö†]> TARIFA: *0,00*
`;
              
                loli.sendMessage(from, {text: pingaa}, {quoted: info})
break    

case 'addautorm':
case 'addautoban':
case 'listanegra':  
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Cade o n√∫mero?')
var ind = dbids.indexOf(from)
if(isAdeusCara) {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")  
var numind = adeuscara[ind].number.indexOf(listng)
if(numind >= 0) return reply('*Esse N√∫mero ja esta incluso*')
adeuscara[ind].number.push(listng)
} else {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")    
adeuscara.push({
groupId: from,
actived: false,
number: [listng]
})
}
fs.writeFileSync('./arquivos/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*N√∫mero adicionado a lista de autoban*`)
break

case 'botoff':
case 'boton':
case 'bot':
if (!isGroup) return reply(msg.grupo)
if (!isCreator) return reply("S√≥ dono pode executar esta a√ß√£o...")
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (botoff.includes(from)) return reply('Ja esta ativo')
botoff.push(from)
fs.writeFileSync('./arquivos/grupos/botoff.json', JSON.stringify(botoff))
reply('Desativando fun√ß√µes e parando a execu√ß√£o de comandos por membros com sucesso...')
} else if (Number(args[0]) === 0) {
if (!botoff.includes(from)) return reply('Ja esta Desativado')
pesquisar = from
processo = botoff.indexOf(pesquisar)
while(processo >= 0){
botoff.splice(processo, 1)
processo = botoff.indexOf(pesquisar)
}
fs.writeFileSync('./arquivos/grupos/botoff.json', JSON.stringify(botoff))
reply(`Ativando todos os funcionamentos do bot novamente...`)
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'marvel': 
case 'glitch':   
case 'stone':   
case 'space':
case 'pornhub':
case 'america':   
case 'steel':  
case 'grafity':  
case 'glitch3':
case 'thorstyle':  
textooo = args.join(' ')
texto1 = textooo.split('/')[0] || 'Indefinido'
texto2 = textooo.split('/')[1] || 'Indefinido'
if(!textooo.includes("/")) return reply(`Cade a /\nExemplo: ${prefix + command} sad/sad`)
reply(`AGUARDE...`)
blaaablaa = await fetchJson(`http://sabapi.tech:8090/api/${command}?texto=${texto1}&texto2=${texto2}&apikey=alemao-key`)
loli.sendMessage(from, { image: { url: `${blaaablaa.resultado}` }, caption: blaaablaa }, { quoted: info })
break

case 'qrcode': case 'qr-qr-code': case 'qr-code':
if(!q) return reply(`Digite o a palavra que deseja transformar em qr code\nExemplo: ${prefix + command} ${botName}`)
reply(`enviando aguarde 15 segundos se nao ir a api caiu`)


loli.sendMessage(from, {image: {url: `https://api.qrserver.com/v1/create-qr-code/?size=500x500&data=${q}`}, gifPlayback: false, caption: 'AQUI ESTA SEU QR - CODE'
},{quoted: info})
break

case 'gerarpessoa':
gerarpessoa = await fetchJson(`http://nexus.vortexuscloud.com:4214/api/pessoa?apikey=keybx`)
monaco(`
\nü§†    ${pushname} AQUi EST√Å üëç\n\nüë• „Ö§- NOME: ${gerarpessoa.Nome} 
üõú „Ö§- CPF: ${gerarpessoa.CPF} 
üåê „Ö§- RG: ${gerarpessoa.RG} 
üëÅÔ∏è‚Äçüó®Ô∏è „Ö§- DATA DE NASCIMENTO: ${gerarpessoa["Data de Nascimento"]} 
üî• „Ö§- SEXO: ${gerarpessoa.Sexo} 
‚ôà „Ö§- SIGNO: ${gerarpessoa.Signo} 
‚ûñ   - FILIA√á√ÉO: ${gerarpessoa.Filia√ß√£o} 
üëæ „Ö§- M√ÉE: ${gerarpessoa.M√£e} 
üêÇ „Ö§- PAI: ${gerarpessoa.Pai} 
üîÜ „Ö§- ONLINE: ${gerarpessoa.Online} 
üî∞ „Ö§- E-MAIL: ${gerarpessoa["E-Mail"]} 
‚öúÔ∏è „Ö§- SENHA: ${gerarpessoa.Senha} 
‚û∞ „Ö§- CEP: ${gerarpessoa.Endere√ßo.CEP} 
‚ûø „Ö§- ENDERE√áO: ${gerarpessoa.Endere√ßo.Endere√ßo} 
üî¢ „Ö§- N√öMERO: ${gerarpessoa.Endere√ßo.N√∫mero} 
üÜñ „Ö§- BAIRRO: ${gerarpessoa.Endere√ßo.Bairro} 
„Ä∞Ô∏è „Ö§- CIDADE: ${gerarpessoa.Endere√ßo.Cidade} 
‚ôæÔ∏è „Ö§- ESTADO: ${gerarpessoa.Endere√ßo.Estado} 
üìû „Ö§- TELEFONES: ${gerarpessoa.Telefones} 
üóø „Ö§- ALTURA: ${gerarpessoa["Caracter√≠sticas F√≠sicas"].Altura} 
üò± „Ö§- PESO: ${gerarpessoa["Caracter√≠sticas F√≠sicas"].Peso} 
‚≠ï „Ö§- TIPO SANGU√çNEO: ${gerarpessoa["Caracter√≠sticas F√≠sicas"]["Tipo Sangu√≠neo"]} 
üü• „Ö§- COR FAVORITA: ${gerarpessoa["Cor Favorita"]} \n
`)
break;

case 'calendario':
case 'dados':
var getGroups = await loli.groupFetchAllParticipating()
var groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
var ingfoo = groups.map(v => v)
ingfoo.sort((a, b) => (a[0] < b.length))
hora16 = moment.tz('America/Sao_Paulo').format('HH:mm')
date16 = moment.tz('America/Sao_Paulo').format('DD/MM')
reply(`
*${tempo.toUpperCase()}*
üë§ ${pushname}

üë• *GRUPO:* ${isGroup ? groupName : "privado"}
üìÜ *DATA:* ${date16}
‚è∞ *HORA:* ${hora16}H
ü§ñ *BOT:* ${botName}
üëë *DONO:* ${donoName}


`)
break

case 'data': case 'Data':
reply(`Hoje e ${data} mn`)
break

case 'Hora': case 'hora':
reply(`agora s√£o ${hora} mn`)
break

case 'cpf2':
case 'cpf3':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ${botName} - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 553172595934\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName}  - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéCpf Deve Conter 11 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé${prefix+ command} 03244275222\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/${command}?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {
console.log(error)
}
break

case 'gerarsenha':
const netflixx = ['A', 'B', 'CC', 'C', 'D', 'AD' , 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8', 'i9', 'j10', 'k11', 'l12', 'm13', 'n14', 'o15', 'p16', 'q17', 'r18', 's19', 't20', 'u21', 'v22', 'w23', 'x24', 'y25', 'z26', 'pB24', 'XC9P', 'T#;S', ';1H)', '0e7O', 'mGmE', 'v4g7k2q8', 'c1r9h3x6', 'n8u7z4m2', 'i8j9p4o2', 'k2r9q6d1', 'z4y5s2u7', 't3v1o2f4','n8x6w3c6', 'o2y1i8s5', 'g7q6z2m9', 'h3t4r9j8', 'f4s2u7o2', 'w3x6i8p4', 'y1z4n9l6', 'c6o2q8r9' , 'x7q2', 'f4s9', 'm2o8', 'y1t6', 'z4u7', 'j8i2', 'p4w3', 'c6n9','h3r1', 'k2l6', 's5g7', 'o2v9', 'q8x6', 'u7d1', 'w5f4', 'i8z2', 'r9y0', 't3m7','n1j9', '6a2s', 'dxb', 'ncw', 'DX', 'hp' ,'.E','3z','.m','xO','Xm','I3','Yd' ,'Nmm','3A@','z0y','MLs','E8o','0#r','Qo6','wY^' ,'4<','rD','MG',':d','6$','O4','H.','dc','9y','<A','q#','<Q' , ']','@','}','&','-', 'nc7','2NE','4nc','b55','u5l','bps' ]
gosto = body.slice(3)
const nettflx = netflixx[Math.floor(Math.random() * (netflixx.length))]
loli.sendMessage(from, {video: {url: `https://telegra.ph/file/42e6cbb931ba9e8307bad.mp4`}, gifPlayback: true, caption:`




CRIADOR DE SENHAS;


CODIGO GERADO:   ${nettflx}

`},{quoted: info})
break

case 'cartao':
case 'cart√£o':
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, LICHT SAN\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Gerar Cart√µes\n‚îÇ‚ïéVoc√™ Deve Possuir um Bin\n‚îÇ‚ïéBin Deve Conter 7 N√∫meros \n‚îÇ‚ïé\n‚îÇ‚ïé/Cartao 1234567\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/gerar-cc?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {//By: Licht San
console.log(error)
}
break

case 'score':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ${botName} ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 553172595934\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéCpf Deve Conter 11 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé${prefix+ command} 03244275222\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/score?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {
console.log(error)
}
break

case 'bank':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 553172595934\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéBasta Informar o C√≥digo\n‚îÇ‚ïéDo Banco\n‚îÇ‚ïé\n‚îÇ‚ïé${prefix+ command} 21\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/bank?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {
console.log(error)
}
break

case 'moradores':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 553172595934\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ${botName}‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéO Cep Deve Conter 8 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé ${prefix+ command} 69060160\n‚îÇ‚ïé \n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/moradores?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {//By: Licht San
console.log(error)
}
break

case 'hack': reply(JSON.stringify(info.message.extendedTextMessage.contextInfo, null, 50));
break;

case 'rg':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName} ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 553172595934\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName} ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéRG Deve Conter 8 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé ${prefix+ command} 15205495\n‚îÇ‚ïé \n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/rg?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {
console.log(error)
}
break

case 'cnpj':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName} ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 5511959391525\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ ${botName} ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéCnpj Deve Conter 14 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé ${prefix+ command} 13347016000117\n‚îÇ‚ïé \n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/cnpj?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {
console.log(error)
}
break

case 'cll':
case 'fone':
if(!isPremium) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ FRANKY BOT  - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò AVISO „Äô\n‚îÇ‚ïé\n‚îÇ‚ïé ñ¢àDesculpe ${pushname}\n‚îÇ‚ïé ñ¢àVoc√™ N√£o √© um Usu√°rio \n‚îÇ‚ïé ñ¢àPremium, Compre Agora \n‚îÇ‚ïé dono: 5511959391525\n‚îÇ‚ïé\n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
if (!q) return reply(`‚ï≠‚îÅ‚îÅ‚îÅ‚ùÄ FRANKY BOT  - OFICIAL ‚ùÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ï≠‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚îÇ‚ïé\n‚îÇ‚îÇ‚ùØ              „Äò ùêìùêîùêìùêéùêëùêàùêÄùêã  „Äô\n‚îÇ‚ïé\n‚îÇ‚ïéOl√°, ${pushname}\n‚îÇ‚ïéAqui Irei Lhe Ensinar\n‚îÇ‚ïéA Puxar Os Dados \n‚îÇ‚ïéO Telefone Deve Conter 11 N√∫meros\n‚îÇ‚ïéSem Ponto e Espa√ßos \n‚îÇ‚ïé\n‚îÇ‚ïé ${prefix+ command} 73999197974\n‚îÇ‚ïé \n‚îÇ‚ï∞‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚ïØ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`)
loli.sendMessage(from, { react: { text: `üë®‚Äçüíª`, key: info.key }})
reply(`üë®‚Äçüíª Puxando Dados, Aguarde ${pushname}`)
try {
tohsakapuxadas = await fetchJson(`https://nyox.wtf/api/consultas/${command}?query=${q}&apitoken=LICHTZIN`)
loli.sendMessage(from, {image: {url: `https://telegra.ph/file/433a224bc555edc4d55f1.jpg`}, caption: `${tohsakapuxadas.resultado}`}, {quoted: info})
} catch (error) {//By: Licht San
console.log(error)
}
break

case 'gtasan':
loli.sendMessage(from, {image: fs.readFileSync('./loli/image/menu.jpg'), caption: `

„Åç‚Éü‚ùóÔ∏èMEDIAFIRE DOWNLOAD‚ùó‚Éü „Åç

‚û±üìÅ Nome : GTA SAN
‚û±üìä Tamanho : 2 GB
‚ûØüßß Link : https://www.mediafire.com/file/ln6r3kx0ie77r9t/GTA_San_Andreas_2021.zip/file

_*Aguarde o processo de upload de m√≠dia......*_

`},{quoted: info})

break

case 'play6':
if(!q) return reply(`nome da musica`)
data = await fetchJson(`http://sabapi.tech:8090/api/ytsrc/videos?q=${text}&apikey=MrRootsFree`)
ytbrt = `‚îÅ„Äå PLAY AUDIO „Äç
‚∏∫ÕüÕûÍ™∂${pushname}      ‚ô™  
  
‚û§Õ°Õú€ú€ú€£üèÅ ùöÉùöíÃÅùöùùöûùöïùöò: ${data.resultado[0].title}
‚û§Õ°Õú€ú€ú€£üèÅ Tempo‚ßΩ${data.resultado[0].timestamp}
‚û§Õ°Õú€ú€ú€£üèÅ Descri√ß√£o‚ßΩ ${data.resultado[0].description}

`
loli.sendMessage(from, { image: { url: `${data.resultado[0].image}` }, caption: ytbrt }, { quoted: info })
loli.sendMessage(from, { audio: { url: `http://sabapi.tech:8090/api/dl/ytaudio?url=${data.resultado[0].url}&apikey=MrRootsFree` }, mimetype: "audio/mpeg",
headerType: 4,
contextInfo: {
externalAdReply: {
title: `${botName}`,
body: `${data.resultado[0].title}`,
showAdAttribution: true,
thumbnail: await getBuffer(`${data.resultado[0].image}`),
mediaType: 2,
mediaUrl: `https://www.instagram.com/sandsx_krl?igsh=c2x4bGJtbTFqN2t5`,
sourceUrl: `http://Instagram.com/sandsx_krl`}}},{quoted: info}).catch(e => {
return reply(`erro`)
})
break

case 'espada':   case 'comprarespada':{
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `7000`
if (checkxpr < quantidader) return reply(`*${pushname} VC NAO TEM DINHEIRO SUFICIENTE PARA COMPRAR UMA ESPADA*\n\n*PRE√áO: ${quantidader}*`)
var [comprar] = q.split("")
if(!q.includes("")) return reply(`Cade a espa√ßo mano?\nExemplo: ${prefix + command} comprar`)  
espada.push(`${sender}`)
fs.writeFileSync('./fun√ß√µes_rpg/espada/espada.json', JSON.stringify(espada))
addKoinUser(sender, - quantidader)
reply(`*ESPADA COMPRADA COM SUCESSO*\n\n*CUSTO üí∞: ${quantidader}*`)
}
break

case 'pinterest': 
if(!q) return reply(`Digite o nome da imagem que vc quer buscar\nExemplo: ${prefix + command} cat`)
reply(`enviando aguarde 15 segundos se nao ir a api caiu`)
loli.sendMessage(from, {image: {url: `http://sabapi.tech:8090/api/pinterest?text=${q}&apikey=alemao-key`}, gifPlayback: false, caption: '‚úÖ'
},{quoted: info})
break;

case 'pinterest2':
if(!q) return reply(`EXEMPLO: ${prefix}pinterest2 zenitsu`)
reply(`enviando imagem... se nao ir tente mais tarde`)
loli.sendMessage(from, {image: {url: `http://kaicapis.online:5047/api/pinterest?text=${q}&apitoken=nunu-mnc`}, gifPlayback: false, caption: '‚úÖ'
},{quoted: info})
break

case 'figuroblox': case 'robloxfigu':
if (!q) return reply("Insira a quantidade de figurinhas que deseja que eu envie!")
if (!Number(args[0]) || Number(q.trim()) > 50) return reply("Digite a quantidade de figurinhas que deseja que eu envie.. n√£o pode mais de 10..")
async function eitamundom() {
loli.sendMessage(sender, { sticker: { url: `http://expr.sabapi.tech:4040/sticker/figu_roblox?apikey=alemao-key` } })}
for (i = 0; i < q; i++) {
await sleep(680)
eitamundom()
}
break

case 'figudesenho': case 'figudesenhos':
if (!q) return reply("Insira a quantidade de figurinhas que deseja que eu envie!")
if (!Number(args[0]) || Number(q.trim()) > 50) return reply("Digite a quantidade de figurinhas que deseja que eu envie.. n√£o pode mais de 10..")
async function eitaaamundoeitaaamundo() {
loli.sendMessage(from, { sticker: { url: `http://expr.sabapi.tech:4040/sticker/figu_desenho?apikey=alemao-key` } })}
for (i = 0; i < q; i++) {
await sleep(680)
eitaaamundoeitaaamundo()
}
break

case 'tel1':
if (!q) return reply('Vai continuar sem a requisi√ß√£o?')
	api = await fetchJson(`https://elnaposearch.vip/api/puxar?token=XouhINOf&&type=tel1&q=${q}`)
	reply(`AGUARDE`)
 loli.sendMessage(from, {text: `üìÑ *${botName}*\n\n${api.result}\n\n\n‚Ä¢ USER: ${pushname}`}, {quoted: info})
break

case 'peshub':
if(!isPremium) return reply(msg.premium)
if (!q) return reply("Escreva o que quer pesquisar!")
reply (`Realizando Pesquisa Aguarde...`)
pornL = await fetchJson(`https://tohsaka.onrender.com/api/pesquisa/pornhubsrc?nome=${q}&apikey=tohsaka`)
srcL = `              „Äé  P O R N  H U B  „Äè\n\n        `
for (let L of pornL) {
srcL += `
Titulo: ${L.titulo}\n
Link: ${L.link}
Autor: ${L.autor}
Hype: ${L.hype}
Enviado: ${L.data_upload}\n\n‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚ä∞·ØΩ‚ä±‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚ä∞·ØΩ‚ä±‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ\n\n`}
loli.sendMessage(sender, {text: srcL, },{quoted: info})
break

case 'gerargp':
if(!q) return reply("Ei, Qual o Tipo de Grupo?")
reply("Aguarde, Estou Gerando os Grupos")
 if(!isPremium) return reply(enviar.msg.premium)   
    swp = await fetchJson(`https://tohsaka.onrender.com/api/pesquisa/gpwhatsapp?nome=${q}&apikey=tohsaka`)
    teks = `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ùí„ÄéùêÄ ùêê ùêî ùêÄ  ùêÅ ùêé ùêì  ùêè ùêÑ ùêí ùêê ùêî ùêà ùêí ùêÄ„Äè‚ùí\n\n`;
    for(let i of swp) {
        teks += " *‚ùØ NOME:* " + i.nome+ "\n"
        teks += " *‚ùØ DESCRI√á√ÉO:* " + i.descri√ß√£o+ "\n"
        teks += " *‚ùØ LINK:* " + i.link+ "\n\n"
    }
    teks += `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê`
    img = `${swp[0].img}`
    loli.sendImage(from, img, teks, info)
   reply(teks)
    break
    
case 'inativo':  
if(!isGroup) return reply(Res_SoGrupo)
if(!isGroupAdmins) return reply(Res_SoAdm)
if(q.match(/[a-z]/i) || !q) return reply(`Exemplo: ${prefix+command} 0\nIsso mostrar√° quantas pessoas tem 0 mensagens no grupo, e se usar 5, vai mostrar quantos usu√°rios tem 5 mensagens ou menos..`)
await LIMPARDOCNT_QUEMJASAIU()
var i2 = countMessage?.map(x => x.groupId)?.indexOf(from)
blue = []; for (i of countMessage[i2].numbers) {
if(i.messages <= q.trim())
if(i.figus <= q.trim())
if(i.cmd_messages <= q.trim())
if(!groupAdmins.includes(i.id))
if(!numerodono.includes(i.id))
if(i.id != numeroBot)
if(groupMembers.map(i => i.id).includes(i.id))
blue.push(i.id)}; for ( i of countMessage[i2].numbers) {
if(!groupMembers.map(a => a.id == i.id))
if(i.id.length > 5)
blue.push(i.id)}
if(blue.length == 0) return reply(`N√£o tem pessoas com ${q}  mensagens..`)
bli = `Usu√°rios com ${q.trim()} mensagem(ns) pra baixo..\n\n`
for (ac = 0; ac < blue.length; ac++) {
bli += `${ac +1} - _ Usu√°rio: @${blue[ac].split("@")[0]}\n\n`
}
mention(bli)
break

case 'anotar':
case 'tirar_nota':
case 'rmnota':
if(!isGroup) return reply(msg.grupo)
if(!isGroupAdmins) return reply(msg.adm)
reagir(from, "üóíÔ∏è")
await sleep(1000)
if(command == "anotar") {
var [q5, q10] = q.trim().split("/")
if(!q5 || !q10 || !q.includes("/")) return reply(`*_‚ùïDigite o t√≠tulo da anota√ß√£o e o texto que deseja anotar..._*\n*_ü•∂ Exemplo:_* ${prefix}anotar Gatos/Gatinhos s√£o fofos...`)
if(JSON.stringify(anotar).includes(from)) {  
var i2 = anotar.map(i => i.grupo).indexOf(from)  
if(JSON.stringify(anotar[i2].puxar).includes(q5)) {
var i3 = anotar[i2].puxar.map(i => i.nota).indexOf(q5)  
if(anotar[i2].puxar[i3].nota == q5) return reply(`*_‚ùïEsta anota√ß√£o j√° est√° inclusa, utilize outro t√≠tulo..._*\n*_ü•∂ Ou voc√™ pode tirar com_* ${prefix}tirar_nota ${q5}`)
}
}
if(!JSON.stringify(anotar).includes(from)) {
anotar.push({grupo: from, puxar: [{nota: q5, anotacao: q10}]})
fs.writeFileSync("./database/func/tabela/anotar.json", JSON.stringify(anotar))
reply("Anota√ß√£o registrada com sucesso...")
} else {
anotar[i2].puxar.push({nota: q5, anotacao: q10})
fs.writeFileSync("./database/func/tabela/anotar.json", JSON.stringify(anotar))
reply("Anota√ß√£o registrada com sucesso...")  
}
} else {
if(!q) return reply("Digite qual anota√ß√£o deseja tirar pelo t√≠tulo..")
if(JSON.stringify(anotar).includes(from)) {  
var i2 = anotar.map(i => i.grupo).indexOf(from)  
if(JSON.stringify(anotar[i2].puxar).includes(q)) {
var i3 = anotar[i2].puxar.map(i => i.nota).indexOf(q)  
}
}
if(0 > anotar[i2].puxar.map(i => i.nota).indexOf(q)) return reply("Esta nota n√£o est√° inclusa, verifique com aten√ß√£o...")
anotar[i2].puxar.splice(i3, 1)
fs.writeFileSync("./database/func/tabela/anotar.json", JSON.stringify(anotar))
reply(`Anota√ß√£o ${q} tirada com sucesso...`)
}
break

case 'anotacao':
case 'anotacoes':  
case 'nota':
case 'notas':
if(!isGroup) return reply(msg.grupo)
reagir(from, "üìù")
await sleep(1000)
if(command == "anotacao" || command == "nota") {
if(!q) return reply("Digite o t√≠tulo da anota√ß√£o que deseja puxar..")
if(!JSON.stringify(anotar).includes(from)) return reply("Este grupo n√£o tem nenhuma anota√ß√£o...")
var i2 = anotar.map(i => i.grupo).indexOf(from)  
if(!JSON.stringify(anotar[i2].puxar).includes(q)) return reply("N√£o cont√©m nenhuma anota√ß√£o com este t√≠tulo.")
var i3 = anotar[i2].puxar.map(i => i.nota).indexOf(q)  
mentions(`„Äà ${anotar[i2].puxar[i3].anotacao} „Äâ`)
} else {
var i2 = anotar.map(i => i.grupo).indexOf(from)    
if(anotar[i2].puxar.length == 0) return reply("Este grupo n√£o tem nenhuma anota√ß√£o...")    
var i2 = anotar.map(i => i.grupo).indexOf(from) 
var antr = anotar[i2].puxar 
txtin = `*_üóíÔ∏è Aqui est√° todas as anota√ß√µes registradas nesse grupo üóíÔ∏è_*\n`
for ( i = 0; i < antr.length; i++) {
txtin += `\n‚Üù *_üìù Anota√ß√£o:_* ‚üÆ ${anotar[i2].puxar[i].nota} ‚üØ - „Äà ${anotar[i2].puxar[i].anotacao} „Äâ\n`
}
txtin += ""
mentions(txtin)
}
break

case 'deletar': case 'delete': case 'del':  case 'd': case 'apagar':
if(!isGroupAdmins) return reply(msg.adm)
if(!menc_prt) return reply("‚ùïMarque a mensagem do usu√°rio que deseja apagar...")
loli.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.message.extendedTextMessage.contextInfo.stanzaId, participant: menc_prt}})
await sleep(1000)
reagir(from, "üßØ")
break 

case 'mute': case 'm': case 'mutar':
if(!isGroup) return reply(msg.grupo)
if(!isGroupAdmins) return reply(msg.adm)
if(!isBotGroupAdmins) return reply(msg.botadm)
textin = args.join(" ")
if(!textin) return reply('*‚ùïMarque o n√∫mero que deseja mutar.*')
reagir(from, "ü§ê")
await sleep(1000)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(isMuted) {
var ind = GroupsMutedActived.indexOf(from)
for (let _ of mentioned) {
teks = `*_üîá Usu√°rio mutado:_* @${_.split('@')[0]}
*_üë§ A√ß√£o do adm:_* [ ${pushname} ]`
muted[ind].numbers.push(_)
}
fs.writeFileSync('./database/usuarios/muted.json', JSON.stringify(muted, null, 2))
teks += '\n-\n*ü§´ Caso voc√™ dar um piu, voc√™ vai ser banido do grupo.*'
mentions(teks, mentioned, true)
} else {
 const data = {
jid: from,
numbers: mentioned
}
muted.push(data)
fs.writeFileSync('./database/usuarios/muted.json', JSON.stringify(muted, null, 2) + '\n')
for (let _ of mentioned) {
teks = `*_üîá Usu√°rio mutado:_* @${_.split('@')[0]}
*_üë§ A√ß√£o do adm:_* [ ${pushname} ]`
}
teks += '\n-\n*ü§´ Caso voc√™ dar um piu, voc√™ vai ser banido do grupo.*'
mentions(teks, mentioned, true)
}
break

case 'desmute': case 'unmute': case 'desmutar':
if(!isGroup) return reply(msg.grupo)
if(!isGroupAdmins) return reply(msg.adm)
if(!isBotGroupAdmins) return reply(msg.botadm)
textin = args.join(" ")
if(!textin) return reply('*‚ùïMarque o n√∫mero que deseja desmutar.*')
reagir(from, "ü§™")
await sleep(1000)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
var ind = GroupsMutedActived.indexOf(from)
if(isMuted) {
for(let _ of mentioned) {
if(muted[ind].numbers.indexOf(_) >= 0) {
var rmind = muted[ind].numbers.indexOf(_)
muted[ind].numbers.splice(rmind, 1)
}
}
fs.writeFileSync('./database/usuarios/muted.json', JSON.stringify(muted, null, 2) + '\n')
for (let _ of mentioned) {
teks = `*_üîä Usu√°rio desmutado:_* @${_.split('@')[0]}
*_üë§ A√ß√£o do adm:_* [ ${pushname} ]`
}
teks += '\n-\n*ü§™ agora voc√™ pode falar a vontade no grupo!*'
mentions(teks, mentioned, true)
} else {
const data = {
jid: from,
numbers: []
}
muted.push(data)
fs.writeFileSync('./database/usuarios/muted.json', JSON.stringify(muted, null, 2) + '\n')
for (let _ of mentioned) {
teks = `*_üîä Usu√°rio desmutado:_* @${_.split('@')[0]}
*_üë§ A√ß√£o do adm:_* [ ${pushname} ]`
}
teks += '\n-\n*ü§™ Agora voc√™ pode falar a vontade no grupo!*'
mentions(teks, mentioned, true)
}
break

case 'rankzueiros': case 'rankzueiro':
if (!isGroup) return reply(msg.grupo);
if (!isModobn) return reply(`Este tipo de comando s√≥ pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se voc√™ for, apenas digite ${prefix}modobrincadeira 1`)  

  reagir(from, "ü§™");

  membrosZueiros = [];
  
  const zueiro1 = groupMembers;
  const zueiro2 = groupMembers;
  const zueiro3 = groupMembers;
  const zueiro4 = groupMembers;
  const zueiro5 = groupMembers;

  const zueiroMem1 = zueiro1[Math.floor(Math.random() * zueiro1.length)];
  const zueiroMem2 = zueiro2[Math.floor(Math.random() * zueiro2.length)];
  const zueiroMem3 = zueiro3[Math.floor(Math.random() * zueiro3.length)];
  const zueiroMem4 = zueiro4[Math.floor(Math.random() * zueiro4.length)];
  const zueiroMem5 = zueiro5[Math.floor(Math.random() * zueiro5.length)];

  const TMPZUEIRO = [
    "O rei da zoeira! üëë",
    "Mestre na arte do deboche. üòé",
    "Provocador nato. ü§£",
    "Conquistador de risadas. üéâ",
    "Doutor em piadas sem gra√ßa. üéì",
    "Especialista em memes. üöÄ",
    "Destruidor de momentos s√©rios. üí£",
    "Arquiteto da palha√ßada. üè∞",
    "O zueiro mais querido do grupo. ‚ù§Ô∏è",
    "Sorriso contagiante, zueira constante. üòÑ",
    "O palha√ßo oficial. ü§°",
    "Mestre do sarcasmo. üòè",
    "Sabe tudo de trollagem. üòú",
    "Alegria em forma de zueira. üéà",
    "Faz piada at√© com sombra. üåö",
    "Riso garantido com esse zueiro. üòÇ",
    "O mestre das pegadinhas. ü§™",
    "Transforma qualquer situa√ß√£o em com√©dia. üé≠",
    "Pai da zoeira, filho do riso. ü§£",
    "Zueiro 24 horas por dia. ‚è∞",
  ];

  rankZueiroImg = "https://telegra.ph/file/8de9823d4d2af40b530df.jpg";
  rankZueiro = `*_Os Zueiros do Grupo est√£o prontos para zoar:_*
*‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*
*‚îÇ* ü§™ @${zueiroMem1.id.split('@')[0]}
*‚îÇ‚û• ${TMPZUEIRO[Math.floor(Math.random() * TMPZUEIRO.length)]}*
*‚îÇ* ü§™ @${zueiroMem2.id.split('@')[0]}
*‚îÇ‚û• ${TMPZUEIRO[Math.floor(Math.random() * TMPZUEIRO.length)]}*
*‚îÇ* ü§™ @${zueiroMem3.id.split('@')[0]}
*‚îÇ‚û• ${TMPZUEIRO[Math.floor(Math.random() * TMPZUEIRO.length)]}*
*‚îÇ* ü§™ @${zueiroMem4.id.split('@')[0]}
*‚îÇ‚û• ${TMPZUEIRO[Math.floor(Math.random() * TMPZUEIRO.length)]}*
*‚îÇ* ü§™ @${zueiroMem5.id.split('@')[0]}
*‚îÇ‚û• ${TMPZUEIRO[Math.floor(Math.random() * TMPZUEIRO.length)]}*
*‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*`;

  membrosZueiros.push(zueiroMem1.id);
  membrosZueiros.push(zueiroMem2.id);
  membrosZueiros.push(zueiroMem3.id);
  membrosZueiros.push(zueiroMem4.id);
  membrosZueiros.push(zueiroMem5.id);

  mencionarIMG(rankZueiro, rankZueiroImg);
  break;

  case 'chato':
  if (!isGroup) return reply(msg.grupo);
  reagir(from, "üòí");
  setTimeout(async () => {
    const niveisDeChatice = [
      "um pouco chatinho...",
      "na m√©dia da chatice.",
      "chato, mas d√° para aguentar.",
      "muito chato, cuidado!",
      "ultra chato, ningu√©m merece!",
    ];
    const mensagemChata = niveisDeChatice[Math.floor(Math.random() * niveisDeChatice.length)];
    textchato = `üôÑ @${sender_ou_n.split("@")[0]} √© ${mensagemChata}`
    mention(textchato)
  }, 2000);
  break;

  // MENU JOGOS // 

case 'jogo1':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Minecraft:* https://www.mediafire.com/file/w9sms627ql2np6i/Minecraft_1.16.221.01_ByHT.apk/file`)
break
case 'jogo2':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *DragonBall Z - Dokkan:* https://www.mediafire.com/file/015ibjiljfkv7uo/Dokkan_v4_12_1_MOD.apk/file`)
break
case 'jogo3':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *GTA SanAndreas:* https://www.mediafire.com/file/ln6r3kx0ie77r9t/GTA_San_Andreas_2021.zip/file`)
break
case 'jogo4':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *GTA SA - Legendado em Portugu√™s:* http://www.mediafire.com/file/7op13aup1ll7m9y/GTA_SA_COM_TRADU%25C3%2587%25C3%2583O_PT-BR.zip/file`)
break
case 'jogo5':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *GTA SA com Mod Cleo:* http://www.mediafire.com/file/d8cfwzctx95x0dx/GTA_SA_v2.00_Mod_Cleo.zip/file`)
break
case 'jogo6':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *GTA SA Online:* https://www.mediafire.com/file/0xccd5m0zwqstag/GTA_SA_ONLINE_SAMP_ByHT.zip/file`)
break
case 'gpsamp':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu o grupo, espero que voc√™ goste!
-
üî• *Grupo Ofc:* https://chat.whatsapp.com/JDEH0eU70z2LLU4FywshzY`)
break
case 'jogo7':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *GTA SuperLite + Mod Cleo:* http://www.mediafire.com/file/wdkg8pmndtihil3/GTA_SA_super_lite_mod_cleo_ByHT.zip/file`)
break
case 'jogo8':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *LastDay on Eart Survival:* https://www.mediafire.com/file/k4pr6awvr5eb1ak/Last%20Day%20on%20Earth%201.17.7-mod.apk/file `)
break
case 'jogo9':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Bomber Friends MOD:* https://www.mediafire.com/file/dir8pwrb1mpm57w/Bomber_Friends_v4.10_MOD.apk/file`)
break
case 'jogo10':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Arcade Hunter:* https://www.mediafire.com/file/ugcdaclnpodtxxs/Arcade_Hunter-Sword%252CGun%252C_and_Magic_1.11.0-mod.apk/file`)
break
case 'jogo11':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Defesa de Zombie Ocioso:* https://www.mediafire.com/file/8422sjofw1cdnka/Zombie+Idle+Defense+1.5.79.229MOD-t.apk/file`)
break
case 'jogo12':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Pac-Man:* https://www.mediafire.com/file/gxwy01ni99pcur2/PAC-MAN+9.2.7.10150MOD-t.apk/file`)
break
case 'jogo13':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Car Driving School Simulator - APK:* https://www.mediafire.com/file/r6aps8mn6wqoabj/Car+Driving+School+Simulator+3.1.0.283MOD-t.apk/file
üé≥ _Obrigat√≥rio instalar o OBB:_
¬†https://www.mediafire.com/file/hcsb5tpr7byh8fg/com.boombitgames.DrivingSchoolParking.zip/file`)
break
case 'jogo14':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Cyber Fighters Premium:* https://www.mediafire.com/file/4tmv2cdahvqamlx/Cyber+Fighters+Premium+1.11.35.68MOD-t.apk/file`)
break
case 'jogo15':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Rag Racing:* https://www.mediafire.com/file/g88v399ks1fpnfq/drag-racing-mod_2.0.37.rar/file`)
break
case 'jogo16':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Mr. Brow:* https://www.mediafire.com/file/i0ii099sejk9fnk/Mr+Bow+4.15.75MOD-t.apk/file`)
break
case 'jogo17':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Airport City:* https://www.mediafire.com/file/vuupmpp3r03lso0/Airport+City+8.7.18.101418MOD-t.apk/file`)
break
case 'jogo18':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Crash Bandicoot:* https://www.mediafire.com/file/nyx8rjqn5m51o3r/Crash+Bandicoot+Mobile+v0.7.6242+Mod.apk/file `)
break
case 'jogo19':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Real Steel World Robot Boxing (APK+OBB):* https://www.mediafire.com/file/zcnsxb55mldn51e/Real+Steel+World+Robot+Boxing+v54.54.126+Mod.apk/file`)
break
case 'jogo20':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Anger of Sticker:* https://www.mediafire.com/file/zfmqmszkhbgoem2/anger-of-stick-5-mod_1.1.39.apk/file`)
break
case 'jogo21':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Angry Birds 2 (APK+OBB)*
https://www.mediafire.com/file/uwnurszwrdbv5ge/angrybirds2-2481.apk/file`)
break
case 'jogo22':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Especial Force Group 2 (CS):* https://www.mediafire.com/file/uwf5cq9u8tjg44x/specialforcesgroup2-421.apk/file`)
break
case 'jogo23':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Roblox:* https://apkadmin.com/k05ck2q6ioo1/ROBLOX_v2.459.415955_MOD_MENU.apk.html`)
break
case 'jogo24':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Critical Striker:* https://www.mediafire.com/file/7yqmk1gn4wrieri/CRITICAL_STRIKE.zip/file`)
break
case 'jogo25':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Dream League Soccer:* http://www.mediafire.com/file/yuw9n5d4phzz5wg/Dream_League_Soccer_2019_v6.13-mod.apk/file`)
break
case 'jogo26':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Clash of Clans:* http://www.mediafire.com/file/aoaem76tyg0hvfv/Clash_Of_Clans_v13.675.6_MOD.apk/file`)
break
case 'jogo27':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Criminal Case Paris:* http://www.mediafire.com/fil...e/i5pbv8d7yjbbtly/Criminal%20Case%20Paris%20v2.36.1-mod.apk/file`)
break 

case 'jogo28':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Drift Max World:* https://www.mediafire.com/file/hqui6asekutsocq/DRIFT+MAX+WORLD+DINHEIRO+INFINITO.zip/file`)
break

case 'jogo29':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Downhill Masters:* https://www.mediafire.com/file/9cdgreyc8amkto9/Downhill_Masters_v1.0.59_MOD.apk/file`)
break
case 'jogosamp':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
‚òï IP DO SERVIDOR DO MEU CRIADOR: 23.88.73.88:11627
-
üé≥ *SA-MP:* https://play.google.com/store/apps/details?id=ru.unisamp_mobile.launcher`)
break

case 'jogo30':
reagir(from, "üéÆ")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé≥ *Monopoly:* https://www.mediafire.com/file/q5jfi61xwbqiu2x/Monopoly-v1-7-11-mod.zip/file`)
break 

// S√âRIES //

case 'serie1':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Arcane:* https://overflix.online/series/arcane/`)
break

case 'serie2':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Stranger Things:* https://overflix.online/series/stranger-things-gratis-hd/`)
break

case 'serie3':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Soldados ou Zumbis:* https://overflix.online/series/s-o-z-soldados-ou-zumbis/`)
break

case 'serie4':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Senhor dos Aneis:* https://overflix.online/series/o-senhor-dos-aneis-os-aneis-de-poder-online-hd-gratis/`)
break

case 'serie5':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Riverdale:* https://overflix.online/series/riverdale-online-gratis-hd-full/`)
break

case 'serie6':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *A casa do drag√£o:* https://overflix.online/series/a-casa-do-dragao-online-gratis-hd/`)
break

case 'serie7':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Sintonia:* https://overflix.online/series/sintonia-online-gratis/`)
break

case 'serie8':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Chucky:* https://overflix.online/series/chucky-a-serie/`)
break

case 'serie9':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Flash:* https://overflix.online/series/flash-hd-online-gratis/`)
break

case 'serie10':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Game of Thrones:* https://overflix.online/series/game-of-thrones-hd-online-gratis/`)
break

case 'serie11':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Legados:* https://overflix.online/series/legados-gratis-hd-online/`)
break

case 'serie12':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *The Good Doctor:* https://overflix.online/series/the-good-doctor-o-bom-doutor-hd-online/`)
break

case 'serie13':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *The Walking Dead:* https://overflix.online/series/the-walking-dead/`)
break

case 'serie14':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Peaky Blinders:* https://overflix.online/series/peaky-blinders-sangue-apostas-e-navalhas/`)
break

case 'serie15':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Diarios de um vampiro:* https://overflix.online/series/diarios-de-um-vampiro/`)
break

case 'serie16':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Gavi√£o Arqueiro:* https://overflix.online/series/gaviao-arqueiro-full-online-gratis/`)
break 

case 'serie17':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Westworld:* https://overflix.online/series/westworld-hd-gratis-online/`)
break

case 'serie18':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *L√∫cifer:* https://overflix.online/series/lucifer-online-hd/`)
break

case 'serie19':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Lobo Adolecentes:* https://overflix.online/series/lobo-adolescente/`)
break

case 'serie20':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *La Casa de Papel:* https://overflix.online/series/la-casa-de-papel/`)
break

case 'serie21':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Cobra Kai:* https://overflix.online/series/cobra-kai-online-gratis-hd/`)
break

case 'serie22':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Love Victor:* https://overflix.online/series/love-victor-gratis-online-hd/`)
break

case 'serie23':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Vikings:* https://overflix.online/series/vikings-hd/`)
break

case 'serie24':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Cavaleiro da Lua:* https://overflix.online/series/cavaleiro-da-lua-online-gratis-hd-full/`)
break

case 'serie25':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Fear The Walking Dead:* https://overflix.online/series/fear-the-walking-dead/`)
break

case 'serie26':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Rick Morty:* https://overflix.online/series/rick-morty/`)
break

case 'serie27':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Round 6:* https://overflix.online/series/round-6-online-gratis-hd-full/`)
break

case 'serie28':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Carnival Row:* https://overflix.online/series/carnival-row-online-hd/`)
break

case 'serie29':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Dark:* https://overflix.online/series/dark/`)
break

case 'serie30':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Arqueiro:* https://overflix.online/series/arqueiro/`)
break 

case 'serie31':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Eu Nunca:* https://overflix.online/series/eu-nunca/`)
break

case 'serie32':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *The Last Kingdom:* https://overflix.online/series/the-last-kingdom/`)
break

case 'serie33':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *O livro de Boba Fett:* https://overflix.online/series/o-livro-de-boba-fett-hd-online-gratis-full/`)
break

case 'serie34':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Ragnarok:* https://overflix.online/series/ragnarok/`)
break 

case 'serie35':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *OS 100:* https://overflix.online/series/os-100/`)
break

case 'serie36':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *FBI:* https://overflix.online/series/fbi/`)
break

case 'serie37':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Extracurricular:* https://overflix.online/series/extracurricular/`)
break

case 'serie38':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Halo:* https://overflix.online/series/halo-online-gratis/`)
break

case 'serie39':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Warrior Nun:* https://overflix.online/series/warrior-nun-online-completo/`)
break

case 'serie40':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Anne With:* https://overflix.online/series/anne-with-an-e/`)
break

case 'serie41':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Patrulha do destino:* https://overflix.online/series/patrulha-do-destino-online/`)
break

case 'serie42':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Dinastia:* https://overflix.online/series/dinastia/`)
break

case 'serie43':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Watchmen:* https://overflix.online/series/watchmen/`)
break

case 'serie44':
reagir(from, "üéûÔ∏è")
await sleep(1000)
reply(`*_ü•∂ Ol√° , aqui est√° o seu pedido, espero que voc√™ goste!_*
-
üé• *Lovecraft Country:* https://overflix.online/series/lovecraft-country-dublado-legendado-online-hd-gratis/`)
break

case 'bemvindo':
case 'welcome':
if(!isGroup) return reply(msg.grupo)
if(!isGroupAdmins) return reply(msg.adm)
if(!isCreator) return reply(Res_SoDono)
if(!isBotGroupAdmins) return reply(msg.botadm)
if(args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if(Number(args[0]) === 1) {
if(isWelkom) return reply('Ja esta ativo')
dataGp[0].wellcome[0].bemvindo1 = true
setGp(dataGp)
reply('üåÄ Ativou com sucesso o recurso de bem vindo neste grupo üìù')
} else if(Number(args[0]) === 0) {
if(!isWelkom) return reply('Ja esta Desativado')
dataGp[0].wellcome[0].bemvindo1 = false
setGp(dataGp)
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de bemvindo neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'rankinativo':
case 'rankinativos':
if(!isGroup) return reply(msg.grupo)
if(!isGroupAdmins) return reply(msg.adm)
await LIMPARDOCNT_QUEMJASAIU()
bule = [];
bule2 = []
mentioned_jid = []
for(cag of countMessage[ind].numbers){
bule2.push(cag.id)
if(cag.messages <= 1){bule.push(cag)}}
bule.sort((a, b) => ((a.messages + a.cmd_messages) < (b.cmd_messages + b.messages)) ? 0 : -1)
boardi = 'Rank dos mais Ghosts do Grupo:\n\n'
if(bule.length == 0)boardi += 'Todos est√£o ativos'
for ( i = 0; i < (bule.length < 5 ? bule.length : 5); i++) {
if (i != null) boardi += `${i + 1}¬∫ : @${bule[i].id.split('@')[0]}\nMensagens: ${bule[i].messages}\nComandos dados: ${bule[i].cmd_messages}\nAparelho: ${bule[i].aparelho}\n\n`
mentioned_jid.push(bule[i].id)
} 
mentions(boardi, mentioned_jid, true)
break

case 'banativos':
if(!isCreator) return reply(mess.only.ownerB)
if(!isGroup) return reply(mess.only.group)
if(groupIdscount.indexOf(from) >= 0) {
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.jid) >=0) { 
var indnum = numbersIds.indexOf(obj.jid)
if(countMessage[ind].numbers[indnum].messages <= args[0]) {
if(groupAdmins.includes(obj.jid)) {
mentions(`@${obj.jid} ta liberado da inspe√ß√£o por ser admin`, [obj.jid], true)
} else {
loli.groupRemove(from, [obj.jid])
}
}
} else {
if(groupAdmins.includes(obj.jid)) {
mentions(`@${obj.jid} ta liberado da inspe√ß√£o por ser admin`, [obj.jid], true)
} else {
loli.groupRemove(from, [obj.jid])
}
}
}
}
break

case 'antifake':
try {
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(msg.adm)
if (args.length < 1) return reply(' 1 Para ativar/ 0 para desativar')
if (Number(args[0]) === 1) {
if (isAntifake) return reply('Ja esta ativo')
antifake.push(from)
fs.writeFileSync('./arquivos/antis/antifake.json', JSON.stringify(antifake))
reply('Ativou com sucesso o recurso de antifake neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
antifake.splice(from, 1)
fs.writeFileSync('./arquivos/antis/antifake.json', JSON.stringify(antifake))
reply('Desativou com sucesso o recurso de antifake neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Deu erro, tente novamente :/')
}
break

default:
if(isCmd) {
reply(
`
‚ï≠‚îÅ‚îÅ‚ùå‚Ä¢‡≥ã‡≥ã‚Ä¢ ‚ùå‚îÅ‚îÅ‚ïÆ
‚îù _‚ûõOla: ${pushname}
‚îù _‚ûõData: ${data}
‚îù _‚ûõHora: ${hora}
‚îù _‚ûõCmd: ${prefix}${command}
‚îù _‚ûõN√£o registrado. use ${prefix}menu
‚ï∞‚îÅ‚îÅ‚ùå‚Ä¢‡≥ã‡≥ã‚Ä¢ ‚ùå‚îÅ‚îÅ‚ïØ
`)

if (budy.includes('prefixo') || (budy.includes('Prefixo'))){
reply(`ùòñùò≠ùò¢ÃÅ "${pushname}" ùòòùò∂ùò¶ ùòìùò¶ùò®ùò¢ùò≠ ùòùùò¶ùò≥ ùòïùò∞ùò∑ùò¢ùò¥ ùòóùò¶ùò¥ùò¥ùò∞ùò¢ùò¥ ùòóùò∞ùò≥ ùòàùò≤ùò∂ùò™\nùòâùò∞ùòÆ ùòîùò¶ùò∂ ùòóùò≥ùò¶ùòßùò™ùòπùò∞ ùò¶ÃÅ "${prefix}" ùòãùò™ùò®ùò™ùòµùò¶ ùòåùòπùò¶ùòÆùò±ùò≠ùò∞ "${prefix}ùòÆùò¶ùòØùò∂"`)
}

}
if(isBotGroupAdmins && Antiloc && type === 'locationMessage') {
if(isGroupAdmins) return loli.sendMessage(from, {text: 'Localiza√ß√£o detectada, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await loli.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Localiza√ß√£o ou localiza√ß√£o comum, caso for um engano, fale com algum adm.'}, {quoted: info})
await loli.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
loli.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await loli.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:info})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ _L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä‚úÖ_`
loli.sendMessage(from, {text: clear}, {quoted: info, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await loli.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:info})
await sleep(5000);
await loli.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await loli.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:info})
}

if(fs.existsSync(`./Aqua-Functions/limite-c_${from}.json`)) {
var limitecaracteres_on = JSON.parse(fs.readFileSync(`./Aqua-Functions/limite-c_${from}.json`))
var limitefl = limitecaracteres_on.limite
} else {
var limitefl = limitefll.limitefl
}

if (body.loli >= limitefl) { 
if(!isAntiFlood) return
if(isAntiFlood) {
if(isBot) return 
reply('*Link detectado, por√©m usu√°rio √© admin*')
} else {
if(isGroupAdmins) return
var Kic = `${sender.split("@")[0]}@s.whatsapp.net`  
setTimeout( () => {
if(!m.key.fromMe && !isGroupAdmins) return reply('Muitas caracter√≠sticas enviadas, eu afirmo que pode ser trava, por precau√ß√µes, eu irei remover.')
console.log(color('deram Spam','red'))
}, 100)
setTimeout( () => {
loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
setTimeout( () => {
}, 0)
}
}

if(isBotGroupAdmins && isAnticatalogo && type === 'productMessage') {
if(isGroupAdmins) return loli.sendMessage(from, {text: 'Catalogo detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await loli.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Catalogo ou Catalogo comum, caso for um engano, fale com algum adm.'}, {quoted: info})
await loli.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
loli.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await loli.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:info})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n??Ô∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
loli.sendMessage(from, {text: clear}, {quoted: info, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await loli.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:info})
await sleep(5000);
await loli.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await loli.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:info})
}

if(isBotGroupAdmins && isAntiCtt && type === 'contactMessage') {
if(isGroupAdmins) return loli.sendMessage(from, {text: 'Contato detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await loli.sendMessage(from, {text: 'opa fechado pelo bot detectado trava contato ou vcard, caso for um engano, fale com algum adm.'}, {quoted: info})
await loli.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
loli.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await loli.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:info})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
loli.sendMessage(from, {text: clear}, {quoted: info, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await loli.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:info})
await sleep(5000);
await loli.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await loli.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:info})
}

var budy2 = body.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, "");
        
const isBot = info.key.fromMe ? true : false

        if (isUrl(body) && isAntilinkgp && isGroup && isBotGroupAdmins) {
          if (!isAntilinkgp) return
          if (!isUrl(body)) return
          if (body.includes("chat.whatsapp.com/")) {
            if (!budy2.includes("chat.whatsapp.com")) return
            if (isBot) return
            linkgpp = await loli.groupInviteCode(from)
            if (budy.match(`${linkgpp}`)) return reply('*Link do nosso grupo, n√£o irei remover.. *')
            if (isGroupAdmins) return reply("*Link detectado, por√©m usu√°rio √© admin*")
            if (!JSON.stringify(groupMembers).includes(sender)) return
            loli.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: [sender] } })
            loli.groupParticipantsUpdate(from, [sender], 'remove')
          }
        }

//========(ANTI-PV-QUE-BLOQUEIA)======\\
if(isAntiPv && !isGroup && !isPremium){ 
reply(`[üë§] _Ola ${pushname} nao estou autorizado a responder mensagem no privado, por tanto irei te bloquear`)
setTimeout(async () => {
loli.updateBlockStatus(sender, 'block')
}, 100)
return
}
//======================================\\

if(isBotGroupAdmins && isAntiCtt && type === 'contactsArrayMessage') {
if(isGroupAdmins) return loli.sendMessage(from, {text: 'Contato detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await loli.sendMessage(from, {text: 'opa fechado pelo bot detectado trava contatos'}, {quoted: info})
await loli.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
loli.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await loli.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:info})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
loli.sendMessage(from, {text: clear}, {quoted: info, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await loli.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
await sleep(2000);
await loli.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:info})
await sleep(5000);
await loli.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await loli.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:info})
}

if (budy.includes("https://")){
if (!isGroup) return
if (!isAntiLink) return
if (isGroupAdmins) return reply(`*${pushname}* vc √© admin por isso n√£o vou te banir`)
		   var Kick = `${sender.split("@")[0]}@s.whatsapp.net`
setTimeout( () => {
	    	reply(`*ùëíùëôùëñùëöùëñùëõùëéùëëùëú ùëëùëú ùëîùëüùë¢ùëùùëú*`)
	     	}, 100)
	     	reply(`*_„Äå link  detectado „Äç_*\n*${pushname}* Vc ser√° banido do grupo *${groupMetadata.subject}*`)
setTimeout( () => {
loli.groupParticipantsUpdate(from, [Kick], "remove").catch((e) => {reply(`*ERROR:* ${e}`)}) 
					}, 10)
 setTimeout( () => {
	          
	          }, 0)
 }
if (budy.includes("wa.me")){
if (!isGroup) return
if (!isAntiLink) return
if (isGroupAdmins) return reply(`*${pushname}* vc √© admin por isso n√£o vou te banir`)
		   var Kick = `${sender.split("@")[0]}@s.whatsapp.net`
setTimeout( () => {
	    	reply(`*ùëíùëôùëñùëöùëñùëõùëéùëëùëú ùëëùëú ùëîùëüùë¢ùëùùëú*`)
	     	}, 100)
	     	reply(`*_„Äå link  detectado „Äç_*\n*${pushname}* Vc ser√° banido do grupo *${groupMetadata.subject}*`)
setTimeout( () => {  
loli.groupParticipantsUpdate(from, [Kick], "remove").catch((e) => {reply(`*ERROR:* ${e}`)}) 
					}, 10)
 setTimeout( () => {
	          
	          }, 0)
 }
if (budy.includes("http://")){
if (!isGroup) return
if (!isAntiLink) return
if (isGroupAdmins) return reply(`*${pushname}* vc √© admin por isso n√£o vou te banir`)
		   var Kick = `${sender.split("@")[0]}@s.whatsapp.net`
setTimeout( () => {
	    	reply(`*ùëíùëôùëñùëöùëñùëõùëéùëëùëú ùëëùëú ùëîùëüùë¢ùëùùëú*`)
	     	}, 100)
	     	reply(`*_„Äå link  detectado „Äç_*\n*${pushname}* Vc ser√° banido do grupo *${groupMetadata.subject}*`)
setTimeout( () => {  
loli.groupParticipantsUpdate(from, [Kick], "remove").catch((e) => {reply(`*ERROR:* ${e}`)}) 
					}, 10)
 setTimeout( () => {
	          
	          }, 0)
 }
 
if(isAutoReact && isGroup && isCmd) {
if(!isAutoReact) return 
emojis = ["üòÄ", "üòÉ", "üòÅ", "üòÜ", "üòÇ", "üè¥Û†ÅßÛ†Å¢Û†Å∑Û†Å¨Û†Å≥Û†Åø", "üò≠", "üòâ", "üòò", "üòó", "ü•∞", "üòç", "ü§©", "ü•≥", "üôÉ", "üôÇ", "üåå", "üòã", "üòõ", "üòú", "üòù", "üòú", "üòá", "üòä", "‚ò∫Ô∏è", "üòè", "üòå", "üòî", "üòë", "üòê", "üò∂", "ü§î", "ü§´", "ü§≠", "ü•±", "ü§ó", "ü§®", "üßê", "üòí", "üôÑ", "üò§", "üò†", "ü§¨", "ü•∫", "üò•", "üòü", "‚òπÔ∏è", "üò¶", "üòß", "üò∞", "üò®", "üòï", "üòØ", "üò≤", "üò≥", "ü§Ø", "üò¨", "üòì", "üòì", "üòû", "üòñ", "ü•¥", "üòé", "ü§ì", "üòé", "ü•µ", "ü•∂", "üåû", "ü§¢", "ü§Æ", "ü§•", "ü§°", "üòà", "ü•µ", "üëΩ", "üò∑", "üí§", "üë∫", "üëπ", "üí®", "üò∏", "üòπ", "‚ù§Ô∏è", "‚õÖ", "üëÅÔ∏è", "‚ò†Ô∏è", "üíÄ", "üëÄ", "üòª", "üíã", "üåï", "üëÑ", "üëÖ", "üíÖ", "üôè", "ü§≥", "‚úçÔ∏è", "üôÖ", "üåÄ", "‚òÉÔ∏è", "üî•", "‚ö°", "üåà", "üíß", "üôà", "üçë", "üçí", "üçì", "üçå", "üå∂Ô∏è", "üçÜ", "üç¥", "üç∑", "üç¥", "üçΩÔ∏è", "üõ¢Ô∏è", "üö®", "üé§", "üé≠", "üìΩÔ∏è", "üé∞", "‚òéÔ∏è", "üìû", "üëë", "üíé", "üíç", "üíâ", "üóëÔ∏è", "üó°Ô∏è", "‚öîÔ∏è", "üö¨", "üí£", "‚ÅâÔ∏è", "‚úÖ", "üëÅÔ∏è‚Äçüó®Ô∏è", "‚ô•Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "ü§é", "üñ§", "ü§ç", "üáßüá∑", "üè≥Ô∏è‚Äçüåà", "üá≤üáΩ", "üá™üá∏", "üá≤üáø", "üá¶üá¥", "üá∫üá≤","ü§î","ü§´","üòè","üçÜ","üë∫","üôä"]
reassao = emojis[Math.floor(Math.random() * emojis.length)]
sendMsg = await loli.sendMessage(from, {react: {text: reassao, key: m.key}})
}

if(isAutoReact && isGroup && !isCmd) {
if(!isAutoReact) return 
emojis = ["üòÄ", "üòÉ", "üòÅ", "üòÜ", "üòÇ", "ü§£", "üò≠", "üòâ", "üòò", "üòó", "ü•∞", "üòç", "ü§©", "ü•≥", "üôÉ", "üôÇ", "üá∫üá¶", "üòã", "üòõ", "üòú", "üòù", "üòú", "üòá", "üòä", "‚ò∫Ô∏è", "üòè", "üòå", "üòî", "üòë", "üòê", "üò∂", "ü§î", "ü§´", "ü§≠", "ü•±", "ü§ó", "ü§®", "üßê", "üòí", "üôÑ", "üò§", "üò†", "ü§¨", "ü•∫", "üò•", "üòü", "‚òπÔ∏è", "üò¶", "üòß", "üò∞", "üò®", "üòï", "üòØ", "üò≤", "üò≥", "ü§Ø", "üò¨", "üòì", "üòì", "üòû", "üòñ", "ü•¥", "üòé", "ü§ì", "üòé", "ü•µ", "ü•∂", "üåû", "ü§¢", "ü§Æ", "ü§•", "ü§°", "üòà", "ü•µ", "üëΩ", "üçá", "üí§", "üë∫", "üëπ", "üí®", "‚ú®", "üòπ", "‚ù§Ô∏è", "üåÄ", "üëÅÔ∏è", "‚ò†Ô∏è", "üíÄ", "üëÄ", "üòª", "üíã", "üëÉüèª", "üëÑ", "üëÖ", "üíÖ", "üôè", "ü§≥", "‚úçÔ∏è", "üôÖ", "üåÄ", "‚òÉÔ∏è", "üî•", "‚ö°", "üå®Ô∏è", "üíß", "üôà", "üçë", "üçí", "üçì", "üçå", "üå∂Ô∏è", "üçÜ", "üç¥", "üç∑", "üç¥", "üçΩÔ∏è", "üõ¢Ô∏è", "üö®", "üé§", "üé≠", "üìΩÔ∏è", "üé∞", "‚òéÔ∏è", "üìû", "üëë", "üíé", "üíç", "üíâ", "üóëÔ∏è", "üó°Ô∏è", "‚öîÔ∏è", "üö¨", "üí£", "‚ÅâÔ∏è", "‚úÖ", "üëÅÔ∏è‚Äçüó®Ô∏è", "‚ô•Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "ü§é", "üñ§", "ü§ç", "üáßüá∑", "üè≥Ô∏è‚Äçüåà", "üá≤üáΩ", "üá™üá∏", "üá≤üáø", "üá¶üá¥", "üá∫üá≤","ü§î","ü§´","üòè","üçÜ","üë∫","üôä"]
reassao = emojis[Math.floor(Math.random() * emojis.length)]
sendMsg = await loli.sendMessage(from, {react: {text: reassao, key: m.key}})
}

if(isAntiSticker && isBotGroupAdmins && type == 'stickerMessage') {
if (m.key.fromMe) return
if(isGroupAdmins) return loli.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await loli.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

if(Antidoc && isBotGroupAdmins && type == 'documentMessage') {
if (m.key.fromMe) return
if(isGroupAdmins) return loli.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await loli.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

if(isAntiImg && isBotGroupAdmins && type == 'imageMessage') {
if (info.key.fromMe) return
if(isGroupAdmins) return loli.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
setTimeout(() => {
loli.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: sender}})
}, 500)
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return  
loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

if(isAntiVid && isBotGroupAdmins && type == 'videoMessage') {
if(isGroupAdmins) return loli.sendMessage(from,{text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await loli.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

if(isAntiNotas && body.toString().match(/(üí≥|üå®Ô∏è|üí∏|üíµ|üí∑|üí∂|ü™ô|üí∞|ü§ë|‚öñÔ∏è)/gi) && isBotGroupAdmins) {
if(type == 'stickerMessage') return
let verificar = body.toString().match(/(üí≥|üíé|üí∏|üíµ|üí∑|üí∂|ü™ô|üí∞|ü§ë|‚öñÔ∏è)/gi)
if (verificar && body.length < 100) return  
await loli.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

loli.ev.on('group-participants-update', async (tdy) => {
if(antifake.includes(tdy.jid)) {
const mdata = await loli.groupMetadata(tdy.jid)  
if (tdy.action == 'add'){
num = tdy.participants[0]
if(!num.split('@')[0].startsWith(55)) {
loli.sendMessage(mdata.id, ' ‚õπÔ∏è‚õπÔ∏ènumeros estrangeiros n√£o sao Permitidos neste grupo, consulte um AdministradorüëãüèåÔ∏è', MessageType.text)
setTimeout(async function () {
loli.groupRemove(mdata.id, [num])
}, 1000)
}
}
}
try {
const grupo = await loli.groupMetadata(tdy.jid)
if (tdy.action == 'add') {
const grupo = await loli.groupMetadata(tdy.jid)
if (!welkom.includes(tdy.jid)) return
num = tdy.participants[0]
try {
capa = await loli.getProfilePicture(num)
} catch {
capa = 'https://i.imgur.com/DUzsRhs.jpg'
}
exe1 = await getBuffer(capa)
exe2 = await imageToBase64(JSON.stringify(capa).replace(/\"/gi, ''))
fs.writeFileSync('exeFT.jpeg', exe2, 'base64')
var imgbb = require('imgbb-uploader')
data = await imgbb("cedeb44b8d204947a6833ca1412ca77d", 'exeFT.jpeg')
buffu = await getBuffer(`https://api-exteam.herokuapp.com/api/welcome?titulo=NOVO MEMBRO&nome=${num.split('@')[0]}&perfil=${data.display_url}&fundo=${fundo1}&grupo=Voc√™ est√° no Grupo: ${encodeURIComponent(grupo.subject)}`)

loli.sendMessage(grupo.id, buffu, MessageType.image, {contextInfo: {mentionedJid: [num]}, quoted: { "key": { "participant": `0@s.whatsapp.net`, "fromMe": false, "id": "B391837A58338BA8186C47E51FFDFD4A" }, "message": { "documentMessage": { "jpegThumbnail": exe1, "mimetype": "application/octet-stream", "title": `*BEM VINDO(A)*`, "fileLength": "36", "pageCount": 0, "fileName": `_*BEM VINDO(A)*_` }}, "messageTimestamp": "1614069378", "status": "PENDENTE"}})
} else if (tdy.action == 'remove') {
if (!welkom.includes(tdy.jid)) return
const grupo = await loli.groupMetadata(tdy.jid)
num = tdy.participants[0]
try {
capa = await loli.getProfilePicture(num)
} catch {
capa = 'https://i.imgur.com/DUzsRhs.jpg'
}
let exe1 = await getBuffer(capa)
exe2 = await imageToBase64(JSON.stringify(capa).replace(/\"/gi, ''))
fs.writeFileSync('exeFT.jpeg', exe2, 'base64')
var imgbb = require('imgbb-uploader')
data = await imgbb("cedeb44b8d204947a6833ca1412ca77d", 'exeFT.jpeg')
buffu = await getBuffer(`https://api-exteam.herokuapp.com/api/goodbye?titulo=ADEUS :(&nome=${num.split('@')[0]}&perfil=${data.display_url}&fundo=${fundo2}&grupo=Saiu de: ${encodeURIComponent(grupo.subject)}`)
loli.sendMessage(grupo.id, buffu, MessageType.image, {contextInfo: {mentionedJid: [num]}})
}
} catch (e) {
console.log('Erro : %s', color(e, 'red'))
}})

if(isAntiAudio && isBotGroupAdmins && type == 'audioMessage') {
if(isGroupAdmins) return loli.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await loli.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
loli.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}


if (budy.includes("Convite para participar do meu grupo no whatsapp ") || (budy.includes("Entrar no Grupo"))){
reply(`bot Pago\nCaso Queira Me add em Grupo\nFale com meu dono\n\nCHAT: wa.me/553172595934`)
}

if (budy.includes('prefixo') || (budy.includes('Prefixo'))){
reply(`[${prefix}]`)
}

if (budy.includes("boa noite") || (budy.includes("Boa noite"))){
tujuh = fs.readFileSync('./loli/audio/boanoite.mp3')
loli.sendMessage(from, {audio: tujuh, mimetype: 'audio/mpeg', ptt:true}, {quoted: info}) 
}

if (budy.includes("boa tarde") || (budy.includes("Boa tarde"))){
tujuh = fs.readFileSync('./loli/audio/boatarde.mp3')
loli.sendMessage(from, {audio: tujuh, mimetype: 'audio/mpeg', ptt:true}, {quoted: info}) 
}

if (budy.includes("bom dia") || (budy.includes("Bom dia"))){
tujuh = fs.readFileSync('./loli/audio/bomdia.mp3')
loli.sendMessage(from, {audio: tujuh, mimetype: 'audio/mpeg', ptt:true}, {quoted: info}) 
}

if (budy.includes("Os de vdd sei quem s√£o") || budy.includes("os de vdd sei quem s√£o") || budy.includes("tra√≠do")){
tujuh = fs.readFileSync('./loli/audio/osdevdd.mp3');
await loli.sendMessage(from, {audio: tujuh, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}

//‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù∞ÔΩ•NOME SEM PREFIXOÔΩ•‚ù±‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\\

if(budy.match("üè≥Ô∏è‚Äçüåà")) {
bla = fs.readFileSync("./figurinhas/üè≥Ô∏è‚Äçüåà.webp")
loli.sendMessage(from, {sticker: bla}, {quoted: info})
}

if(budy.match("üòê")) {
bla = fs.readFileSync("./figurinhas/smoke.webp")
loli.sendMessage(from, {sticker: bla}, {quoted: info})
}

if(budy.match("üòè")) {
bla = fs.readFileSync("./figurinhas/halerquin.webp")
loli.sendMessage(from, {sticker: bla}, {quoted: info})
}

if(budy.match("üòã")) {
bla = fs.readFileSync("./figurinhas/coxinha.webp")
loli.sendMessage(from, {sticker: bla}, {quoted: info})
}

if(budy.match("sexo") || (budy.match("Sexo"))) {
bla = fs.readFileSync("./figurinhas/168.webp")
loli.sendMessage(from, {sticker: bla}, {quoted: info})
}

if(budy.match("Tedio") || (budy.match("tedio") || (budy.match("T√©dio")))) {
bla = fs.readFileSync("./figurinhas/164.webp")
loli.sendMessage(from, {sticker: bla}, {quoted: info})
}

if(budy.match("üò¢") || (budy.match("üò™") || (budy.match("üò≠")))) {
bla = fs.readFileSync("./figurinhas/131.webp")
loli.sendMessage(from, {sticker: bla}, {quoted: info})
}

}} catch (erro) {
console.log(erro)
}})



loli.ev.on('connection.update', (update) => {
const { connection, lastDisconnect } = update
if(lastDisconnect === undefined) {

}

if(connection === 'close') {
var shouldReconnect = (lastDisconnect.error.Boom)?.output?.statusCode !== DisconnectReason.loggedOut  
ligarbot()
}})}
ligarbot()

fs.watchFile('./menus/alugar.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log('O Menu foi editada, irei reiniciar...');
process.exit()
}
})

fs.watchFile('./menus/menudono.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log('O Menu foi editada, irei reiniciar...');
process.exit()
}
})

fs.watchFile('./menus/menu.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log('O Menu foi editada, irei reiniciar...');
process.exit()
}
})

fs.watchFile('./start.sh', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log('O start.sh foi editada, irei reiniciar...');
process.exit()
}
})

fs.watchFile('./dono.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log('A index foi editada, irei reiniciar...');
process.exit()
}
})

fs.watchFile('./index.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log('A index foi editada, irei reiniciar...');
process.exit()
}
})

fs.watchFile('./config.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log('A config foi editada, irei reiniciar...');
process.exit()
}
})